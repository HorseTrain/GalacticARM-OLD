using GalacticARM.CodeGen;
using GalacticARM.CodeGen.AEmit;
using GalacticARM.Decoding.Abstractions;
using GalacticARM.Memory;
using System;
using System.Collections.Generic;

namespace GalacticARM.Decoding
{
    public class OpCodeTable
    {
        static List<OpCodeTable> Tables { get; set; }

        public int Mask                 { get; set; }
        public int Instruction          { get; set; }
        public ILEmit Emit              { get; set; }
        public InstructionMnemonic Name { get; set; }
        public InstructionInfo Info     { get; set; }
        public OpCodeCreate Create      { get; set; }

        public OpCodeTable(string str, InstructionMnemonic Name, InstructionInfo Info, OpCodeCreate Create, ILEmit Emit)
        {
            for (int i = 0; i < 32; i++)
            {
                if (str[i] == '1' || str[i] == '0')
                {
                    Mask |= 1 << (31 - i);
                }

                if (str[i] == '1')
                {
                    Instruction |= 1 << (31 - i);
                }
            }

            this.Name = Name;
            this.Info = Info;
            this.Create = Create;
            this.Emit = Emit;
        }

        public bool Compare(int RawOpCode) => (RawOpCode & Mask) == Instruction;

        static void Add(string str, InstructionMnemonic Name, InstructionInfo info,OpCodeCreate create, ILEmit emit)
        {
            str = str.Replace(" ","");

            Tables.Add(new OpCodeTable(str,Name,info,create,emit));
        }

        public static bool IsBranch(int RawOpCode)
        {
            return ((RawOpCode >> 26) & 0b111) == 0b101;
        }

        static OpCodeTable()
        {
            Tables = new List<OpCodeTable>();

            Add("00110100------------------------", InstructionMnemonic.CBZ, InstructionInfo.W, OpCodeCompareBranchImmediate.Create, EmitRaw.EmitCompareBranchImmediate);
            Add("00110101------------------------", InstructionMnemonic.CBNZ, InstructionInfo.W, OpCodeCompareBranchImmediate.Create, EmitRaw.EmitCompareBranchImmediate);
            Add("10110100------------------------", InstructionMnemonic.CBZ, InstructionInfo.X, OpCodeCompareBranchImmediate.Create, EmitRaw.EmitCompareBranchImmediate);
            Add("10110101------------------------", InstructionMnemonic.CBNZ, InstructionInfo.X, OpCodeCompareBranchImmediate.Create, EmitRaw.EmitCompareBranchImmediate);
            Add("-0110110------------------------", InstructionMnemonic.TBZ, InstructionInfo.NULL, OpCodeTestBitAndBranchImmediate.Create, EmitRaw.EmitTestBitAndBranchImmediate);
            Add("-0110111------------------------", InstructionMnemonic.TBNZ, InstructionInfo.NULL, OpCodeTestBitAndBranchImmediate.Create, EmitRaw.EmitTestBitAndBranchImmediate);
            Add("01010100-------------------0----", InstructionMnemonic.B_cond, InstructionInfo.NULL, OpCodeConditionalBranchImmediate.Create, EmitRaw.EmitConditionalBranchImmediate);
            Add("11010100000----------------00001", InstructionMnemonic.SVC, InstructionInfo.NULL, OpCodeExceptionGeneration.Create, EmitRaw.EmitExceptionGeneration);
            Add("11010100000----------------00010", InstructionMnemonic.HVC, InstructionInfo.NULL, OpCodeExceptionGeneration.Create, EmitRaw.EmitExceptionGeneration);
            Add("11010100000----------------00011", InstructionMnemonic.SMC, InstructionInfo.NULL, OpCodeExceptionGeneration.Create, EmitRaw.EmitExceptionGeneration);
            Add("11010100001----------------00000", InstructionMnemonic.BRK, InstructionInfo.NULL, OpCodeExceptionGeneration.Create, EmitRaw.EmitExceptionGeneration);
            Add("11010100010----------------00000", InstructionMnemonic.HLT, InstructionInfo.NULL, OpCodeExceptionGeneration.Create, EmitRaw.EmitExceptionGeneration);
            Add("11010100101----------------00001", InstructionMnemonic.DCPS1, InstructionInfo.NULL, OpCodeExceptionGeneration.Create, EmitRaw.EmitExceptionGeneration);
            Add("11010100101----------------00010", InstructionMnemonic.DCPS2, InstructionInfo.NULL, OpCodeExceptionGeneration.Create, EmitRaw.EmitExceptionGeneration);
            Add("11010100101----------------00011", InstructionMnemonic.DCPS3, InstructionInfo.NULL, OpCodeExceptionGeneration.Create, EmitRaw.EmitExceptionGeneration);
            Add("1101010100000---0100-------11111", InstructionMnemonic.MSR, InstructionInfo.NULL, OpCodeSystem.Create, EmitRaw.EmitSystem);
            Add("11010101000000110010-------11111", InstructionMnemonic.HINT, InstructionInfo.NULL, OpCodeSystem.Create, EmitRaw.EmitSystem);
            Add("11010101000000110011----01011111", InstructionMnemonic.CLREX, InstructionInfo.NULL, OpCodeSystem.Create, EmitRaw.EmitSystem);
            Add("11010101000000110011----10011111", InstructionMnemonic.DSB, InstructionInfo.NULL, OpCodeSystem.Create, EmitRaw.EmitSystem);
            Add("11010101000000110011----10111111", InstructionMnemonic.DMB, InstructionInfo.NULL, OpCodeSystem.Create, EmitRaw.EmitSystem);
            Add("11010101000000110011----11011111", InstructionMnemonic.ISB, InstructionInfo.NULL, OpCodeSystem.Create, EmitRaw.EmitSystem);
            Add("1101010100001-------------------", InstructionMnemonic.SYS, InstructionInfo.NULL, OpCodeSystem.Create, EmitRaw.EmitSystem);
            Add("110101010001--------------------", InstructionMnemonic.MSR, InstructionInfo.NULL, OpCodeSystem.Create, EmitRaw.EmitSystem);
            Add("1101010100101-------------------", InstructionMnemonic.SYSL, InstructionInfo.NULL, OpCodeSystem.Create, EmitRaw.EmitSystem);
            Add("110101010011--------------------", InstructionMnemonic.MRS, InstructionInfo.NULL, OpCodeSystem.Create, EmitRaw.EmitSystem);
            Add("1101011000011111000000-----00000", InstructionMnemonic.BR, InstructionInfo.NULL, OpCodeUnconditionalBranchRegister.Create, EmitRaw.EmitUnconditionalBranchRegister);
            Add("1101011000111111000000-----00000", InstructionMnemonic.BLR, InstructionInfo.NULL, OpCodeUnconditionalBranchRegister.Create, EmitRaw.EmitUnconditionalBranchRegister);
            Add("1101011001011111000000-----00000", InstructionMnemonic.RET, InstructionInfo.NULL, OpCodeUnconditionalBranchRegister.Create, EmitRaw.EmitUnconditionalBranchRegister);
            Add("11010110100111110000001111100000", InstructionMnemonic.ERET, InstructionInfo.NULL, OpCodeUnconditionalBranchRegister.Create, EmitRaw.EmitUnconditionalBranchRegister);
            Add("11010110101111110000001111100000", InstructionMnemonic.DRPS, InstructionInfo.NULL, OpCodeUnconditionalBranchRegister.Create, EmitRaw.EmitUnconditionalBranchRegister);
            Add("000101--------------------------", InstructionMnemonic.B, InstructionInfo.NULL, OpCodeUnconditionalBranchImmediate.Create, EmitRaw.EmitUnconditionalBranchImmediate);
            Add("100101--------------------------", InstructionMnemonic.BL, InstructionInfo.NULL, OpCodeUnconditionalBranchImmediate.Create, EmitRaw.EmitUnconditionalBranchImmediate);
            Add("00001000000-----0---------------", InstructionMnemonic.STXRB, InstructionInfo.NULL, OpCodeLoadStoreExclusive.Create, EmitRaw.EmitLoadStoreExclusive);
            Add("00001000000-----1---------------", InstructionMnemonic.STLXRB, InstructionInfo.NULL, OpCodeLoadStoreExclusive.Create, EmitRaw.EmitLoadStoreExclusive);
            Add("00001000010-----0---------------", InstructionMnemonic.LDXRB, InstructionInfo.NULL, OpCodeLoadStoreExclusive.Create, EmitRaw.EmitLoadStoreExclusive);
            Add("00001000010-----1---------------", InstructionMnemonic.LDAXRB, InstructionInfo.NULL, OpCodeLoadStoreExclusive.Create, EmitRaw.EmitLoadStoreExclusive);
            Add("00001000100-----1---------------", InstructionMnemonic.STLRB, InstructionInfo.NULL, OpCodeLoadStoreExclusive.Create, EmitRaw.EmitLoadStoreExclusive);
            Add("00001000110-----1---------------", InstructionMnemonic.LDARB, InstructionInfo.NULL, OpCodeLoadStoreExclusive.Create, EmitRaw.EmitLoadStoreExclusive);
            Add("01001000000-----0---------------", InstructionMnemonic.STXRH, InstructionInfo.NULL, OpCodeLoadStoreExclusive.Create, EmitRaw.EmitLoadStoreExclusive);
            Add("01001000000-----1---------------", InstructionMnemonic.STLXRH, InstructionInfo.NULL, OpCodeLoadStoreExclusive.Create, EmitRaw.EmitLoadStoreExclusive);
            Add("01001000010-----0---------------", InstructionMnemonic.LDXRH, InstructionInfo.NULL, OpCodeLoadStoreExclusive.Create, EmitRaw.EmitLoadStoreExclusive);
            Add("01001000010-----1---------------", InstructionMnemonic.LDAXRH, InstructionInfo.NULL, OpCodeLoadStoreExclusive.Create, EmitRaw.EmitLoadStoreExclusive);
            Add("01001000100-----1---------------", InstructionMnemonic.STLRH, InstructionInfo.NULL, OpCodeLoadStoreExclusive.Create, EmitRaw.EmitLoadStoreExclusive);
            Add("01001000110-----1---------------", InstructionMnemonic.LDARH, InstructionInfo.NULL, OpCodeLoadStoreExclusive.Create, EmitRaw.EmitLoadStoreExclusive);
            Add("10001000000-----0---------------", InstructionMnemonic.STXR, InstructionInfo.W, OpCodeLoadStoreExclusive.Create, EmitRaw.EmitLoadStoreExclusive);
            Add("10001000000-----1---------------", InstructionMnemonic.STLXR, InstructionInfo.W, OpCodeLoadStoreExclusive.Create, EmitRaw.EmitLoadStoreExclusive);
            Add("10001000001-----0---------------", InstructionMnemonic.STXP, InstructionInfo.W, OpCodeLoadStoreExclusive.Create, EmitRaw.EmitLoadStoreExclusive);
            Add("10001000001-----1---------------", InstructionMnemonic.STLXP, InstructionInfo.W, OpCodeLoadStoreExclusive.Create, EmitRaw.EmitLoadStoreExclusive);
            Add("10001000010-----0---------------", InstructionMnemonic.LDXR, InstructionInfo.W, OpCodeLoadStoreExclusive.Create, EmitRaw.EmitLoadStoreExclusive);
            Add("10001000010-----1---------------", InstructionMnemonic.LDAXR, InstructionInfo.W, OpCodeLoadStoreExclusive.Create, EmitRaw.EmitLoadStoreExclusive);
            Add("10001000011-----0---------------", InstructionMnemonic.LDXP, InstructionInfo.W, OpCodeLoadStoreExclusive.Create, EmitRaw.EmitLoadStoreExclusive);
            Add("10001000011-----1---------------", InstructionMnemonic.LDAXP, InstructionInfo.W, OpCodeLoadStoreExclusive.Create, EmitRaw.EmitLoadStoreExclusive);
            Add("10001000100-----1---------------", InstructionMnemonic.STLR, InstructionInfo.W, OpCodeLoadStoreExclusive.Create, EmitRaw.EmitLoadStoreExclusive);
            Add("10001000110-----1---------------", InstructionMnemonic.LDAR, InstructionInfo.W, OpCodeLoadStoreExclusive.Create, EmitRaw.EmitLoadStoreExclusive);
            Add("11001000000-----0---------------", InstructionMnemonic.STXR, InstructionInfo.X, OpCodeLoadStoreExclusive.Create, EmitRaw.EmitLoadStoreExclusive);
            Add("11001000000-----1---------------", InstructionMnemonic.STLXR, InstructionInfo.X, OpCodeLoadStoreExclusive.Create, EmitRaw.EmitLoadStoreExclusive);
            Add("11001000001-----0---------------", InstructionMnemonic.STXP, InstructionInfo.X, OpCodeLoadStoreExclusive.Create, EmitRaw.EmitLoadStoreExclusive);
            Add("11001000001-----1---------------", InstructionMnemonic.STLXP, InstructionInfo.X, OpCodeLoadStoreExclusive.Create, EmitRaw.EmitLoadStoreExclusive);
            Add("11001000010-----0---------------", InstructionMnemonic.LDXR, InstructionInfo.X, OpCodeLoadStoreExclusive.Create, EmitRaw.EmitLoadStoreExclusive);
            Add("11001000010-----1---------------", InstructionMnemonic.LDAXR, InstructionInfo.X, OpCodeLoadStoreExclusive.Create, EmitRaw.EmitLoadStoreExclusive);
            Add("11001000011-----0---------------", InstructionMnemonic.LDXP, InstructionInfo.X, OpCodeLoadStoreExclusive.Create, EmitRaw.EmitLoadStoreExclusive);
            Add("11001000011-----1---------------", InstructionMnemonic.LDAXP, InstructionInfo.X, OpCodeLoadStoreExclusive.Create, EmitRaw.EmitLoadStoreExclusive);
            Add("11001000100-----1---------------", InstructionMnemonic.STLR, InstructionInfo.X, OpCodeLoadStoreExclusive.Create, EmitRaw.EmitLoadStoreExclusive);
            Add("11001000110-----1---------------", InstructionMnemonic.LDAR, InstructionInfo.X, OpCodeLoadStoreExclusive.Create, EmitRaw.EmitLoadStoreExclusive);
            Add("00011000------------------------", InstructionMnemonic.LDR, InstructionInfo.W, OpCodeLoadRegisterLiteral.Create, EmitRaw.EmitLoadRegisterLiteral);
            Add("00011100------------------------", InstructionMnemonic.LDR, InstructionInfo.S, OpCodeLoadRegisterLiteral.Create, EmitRaw.EmitLoadRegisterLiteral);
            Add("01011000------------------------", InstructionMnemonic.LDR, InstructionInfo.X, OpCodeLoadRegisterLiteral.Create, EmitRaw.EmitLoadRegisterLiteral);
            Add("01011100------------------------", InstructionMnemonic.LDR, InstructionInfo.D, OpCodeLoadRegisterLiteral.Create, EmitRaw.EmitLoadRegisterLiteral);
            Add("10011000------------------------", InstructionMnemonic.LDRSW, InstructionInfo.NULL, OpCodeLoadRegisterLiteral.Create, EmitRaw.EmitLoadRegisterLiteral);
            Add("10011100------------------------", InstructionMnemonic.LDR, InstructionInfo.Q, OpCodeLoadRegisterLiteral.Create, EmitRaw.EmitLoadRegisterLiteral);
            Add("11011000------------------------", InstructionMnemonic.PRFM, InstructionInfo.NULL, OpCodeLoadRegisterLiteral.Create, EmitRaw.EmitLoadRegisterLiteral);
            Add("0010100000----------------------", InstructionMnemonic.STNP, InstructionInfo.W, OpCodeLoadStoreNoAllocatePairOffset.Create, EmitRaw.EmitLoadStoreNoAllocatePairOffset);
            Add("0010100001----------------------", InstructionMnemonic.LDNP, InstructionInfo.W, OpCodeLoadStoreNoAllocatePairOffset.Create, EmitRaw.EmitLoadStoreNoAllocatePairOffset);
            Add("0010110000----------------------", InstructionMnemonic.STNP, InstructionInfo.S, OpCodeLoadStoreNoAllocatePairOffset.Create, EmitRaw.EmitLoadStoreNoAllocatePairOffset);
            Add("0010110001----------------------", InstructionMnemonic.LDNP, InstructionInfo.S, OpCodeLoadStoreNoAllocatePairOffset.Create, EmitRaw.EmitLoadStoreNoAllocatePairOffset);
            Add("0110110000----------------------", InstructionMnemonic.STNP, InstructionInfo.D, OpCodeLoadStoreNoAllocatePairOffset.Create, EmitRaw.EmitLoadStoreNoAllocatePairOffset);
            Add("0110110001----------------------", InstructionMnemonic.LDNP, InstructionInfo.D, OpCodeLoadStoreNoAllocatePairOffset.Create, EmitRaw.EmitLoadStoreNoAllocatePairOffset);
            Add("1010100000----------------------", InstructionMnemonic.STNP, InstructionInfo.X, OpCodeLoadStoreNoAllocatePairOffset.Create, EmitRaw.EmitLoadStoreNoAllocatePairOffset);
            Add("1010100001----------------------", InstructionMnemonic.LDNP, InstructionInfo.X, OpCodeLoadStoreNoAllocatePairOffset.Create, EmitRaw.EmitLoadStoreNoAllocatePairOffset);
            Add("1010110000----------------------", InstructionMnemonic.STNP, InstructionInfo.Q, OpCodeLoadStoreNoAllocatePairOffset.Create, EmitRaw.EmitLoadStoreNoAllocatePairOffset);
            Add("1010110001----------------------", InstructionMnemonic.LDNP, InstructionInfo.Q, OpCodeLoadStoreNoAllocatePairOffset.Create, EmitRaw.EmitLoadStoreNoAllocatePairOffset);
            Add("0010100010----------------------", InstructionMnemonic.STP, InstructionInfo.W, OpCodeLoadStoreRegisterPairPostIndexed.Create, EmitRaw.EmitLoadStoreRegisterPairPostIndexed);
            Add("0010100011----------------------", InstructionMnemonic.LDP, InstructionInfo.W, OpCodeLoadStoreRegisterPairPostIndexed.Create, EmitRaw.EmitLoadStoreRegisterPairPostIndexed);
            Add("0010110010----------------------", InstructionMnemonic.STP, InstructionInfo.S, OpCodeLoadStoreRegisterPairPostIndexed.Create, EmitRaw.EmitLoadStoreRegisterPairPostIndexed);
            Add("0010110011----------------------", InstructionMnemonic.LDP, InstructionInfo.S, OpCodeLoadStoreRegisterPairPostIndexed.Create, EmitRaw.EmitLoadStoreRegisterPairPostIndexed);
            Add("0110100011----------------------", InstructionMnemonic.LDPSW, InstructionInfo.NULL, OpCodeLoadStoreRegisterPairPostIndexed.Create, EmitRaw.EmitLoadStoreRegisterPairPostIndexed);
            Add("0110110010----------------------", InstructionMnemonic.STP, InstructionInfo.D, OpCodeLoadStoreRegisterPairPostIndexed.Create, EmitRaw.EmitLoadStoreRegisterPairPostIndexed);
            Add("0110110011----------------------", InstructionMnemonic.LDP, InstructionInfo.D, OpCodeLoadStoreRegisterPairPostIndexed.Create, EmitRaw.EmitLoadStoreRegisterPairPostIndexed);
            Add("1010100010----------------------", InstructionMnemonic.STP, InstructionInfo.X, OpCodeLoadStoreRegisterPairPostIndexed.Create, EmitRaw.EmitLoadStoreRegisterPairPostIndexed);
            Add("1010100011----------------------", InstructionMnemonic.LDP, InstructionInfo.X, OpCodeLoadStoreRegisterPairPostIndexed.Create, EmitRaw.EmitLoadStoreRegisterPairPostIndexed);
            Add("1010110010----------------------", InstructionMnemonic.STP, InstructionInfo.Q, OpCodeLoadStoreRegisterPairPostIndexed.Create, EmitRaw.EmitLoadStoreRegisterPairPostIndexed);
            Add("1010110011----------------------", InstructionMnemonic.LDP, InstructionInfo.Q, OpCodeLoadStoreRegisterPairPostIndexed.Create, EmitRaw.EmitLoadStoreRegisterPairPostIndexed);
            Add("0010100100----------------------", InstructionMnemonic.STP, InstructionInfo.W, OpCodeLoadStoreRegisterPairOffset.Create, EmitRaw.EmitLoadStoreRegisterPairOffset);
            Add("0010100101----------------------", InstructionMnemonic.LDP, InstructionInfo.W, OpCodeLoadStoreRegisterPairOffset.Create, EmitRaw.EmitLoadStoreRegisterPairOffset);
            Add("0010110100----------------------", InstructionMnemonic.STP, InstructionInfo.S, OpCodeLoadStoreRegisterPairOffset.Create, EmitRaw.EmitLoadStoreRegisterPairOffset);
            Add("0010110101----------------------", InstructionMnemonic.LDP, InstructionInfo.S, OpCodeLoadStoreRegisterPairOffset.Create, EmitRaw.EmitLoadStoreRegisterPairOffset);
            Add("0110100101----------------------", InstructionMnemonic.LDPSW, InstructionInfo.NULL, OpCodeLoadStoreRegisterPairOffset.Create, EmitRaw.EmitLoadStoreRegisterPairOffset);
            Add("0110110100----------------------", InstructionMnemonic.STP, InstructionInfo.D, OpCodeLoadStoreRegisterPairOffset.Create, EmitRaw.EmitLoadStoreRegisterPairOffset);
            Add("0110110101----------------------", InstructionMnemonic.LDP, InstructionInfo.D, OpCodeLoadStoreRegisterPairOffset.Create, EmitRaw.EmitLoadStoreRegisterPairOffset);
            Add("1010100100----------------------", InstructionMnemonic.STP, InstructionInfo.X, OpCodeLoadStoreRegisterPairOffset.Create, EmitRaw.EmitLoadStoreRegisterPairOffset);
            Add("1010100101----------------------", InstructionMnemonic.LDP, InstructionInfo.X, OpCodeLoadStoreRegisterPairOffset.Create, EmitRaw.EmitLoadStoreRegisterPairOffset);
            Add("1010110100----------------------", InstructionMnemonic.STP, InstructionInfo.Q, OpCodeLoadStoreRegisterPairOffset.Create, EmitRaw.EmitLoadStoreRegisterPairOffset);
            Add("1010110101----------------------", InstructionMnemonic.LDP, InstructionInfo.Q, OpCodeLoadStoreRegisterPairOffset.Create, EmitRaw.EmitLoadStoreRegisterPairOffset);
            Add("0010100110----------------------", InstructionMnemonic.STP, InstructionInfo.W, OpCodeLoadStoreRegisterPairPreIndexed.Create, EmitRaw.EmitLoadStoreRegisterPairPreIndexed);
            Add("0010100111----------------------", InstructionMnemonic.LDP, InstructionInfo.W, OpCodeLoadStoreRegisterPairPreIndexed.Create, EmitRaw.EmitLoadStoreRegisterPairPreIndexed);
            Add("0010110110----------------------", InstructionMnemonic.STP, InstructionInfo.S, OpCodeLoadStoreRegisterPairPreIndexed.Create, EmitRaw.EmitLoadStoreRegisterPairPreIndexed);
            Add("0010110111----------------------", InstructionMnemonic.LDP, InstructionInfo.S, OpCodeLoadStoreRegisterPairPreIndexed.Create, EmitRaw.EmitLoadStoreRegisterPairPreIndexed);
            Add("0110100111----------------------", InstructionMnemonic.LDPSW, InstructionInfo.NULL, OpCodeLoadStoreRegisterPairPreIndexed.Create, EmitRaw.EmitLoadStoreRegisterPairPreIndexed);
            Add("0110110110----------------------", InstructionMnemonic.STP, InstructionInfo.D, OpCodeLoadStoreRegisterPairPreIndexed.Create, EmitRaw.EmitLoadStoreRegisterPairPreIndexed);
            Add("0110110111----------------------", InstructionMnemonic.LDP, InstructionInfo.D, OpCodeLoadStoreRegisterPairPreIndexed.Create, EmitRaw.EmitLoadStoreRegisterPairPreIndexed);
            Add("1010100110----------------------", InstructionMnemonic.STP, InstructionInfo.X, OpCodeLoadStoreRegisterPairPreIndexed.Create, EmitRaw.EmitLoadStoreRegisterPairPreIndexed);
            Add("1010100111----------------------", InstructionMnemonic.LDP, InstructionInfo.X, OpCodeLoadStoreRegisterPairPreIndexed.Create, EmitRaw.EmitLoadStoreRegisterPairPreIndexed);
            Add("1010110110----------------------", InstructionMnemonic.STP, InstructionInfo.Q, OpCodeLoadStoreRegisterPairPreIndexed.Create, EmitRaw.EmitLoadStoreRegisterPairPreIndexed);
            Add("1010110111----------------------", InstructionMnemonic.LDP, InstructionInfo.Q, OpCodeLoadStoreRegisterPairPreIndexed.Create, EmitRaw.EmitLoadStoreRegisterPairPreIndexed);
            Add("00111000000---------00----------", InstructionMnemonic.STURB, InstructionInfo.NULL, OpCodeLoadStoreRegisterUnscaledImmediate.Create, EmitRaw.EmitLoadStoreRegisterUnscaledImmediate);
            Add("00111000010---------00----------", InstructionMnemonic.LDURB, InstructionInfo.NULL, OpCodeLoadStoreRegisterUnscaledImmediate.Create, EmitRaw.EmitLoadStoreRegisterUnscaledImmediate);
            Add("00111000100---------00----------", InstructionMnemonic.LDURSB, InstructionInfo.X, OpCodeLoadStoreRegisterUnscaledImmediate.Create, EmitRaw.EmitLoadStoreRegisterUnscaledImmediate);
            Add("00111000110---------00----------", InstructionMnemonic.LDURSB, InstructionInfo.W, OpCodeLoadStoreRegisterUnscaledImmediate.Create, EmitRaw.EmitLoadStoreRegisterUnscaledImmediate);
            Add("00111100000---------00----------", InstructionMnemonic.STUR, InstructionInfo.B, OpCodeLoadStoreRegisterUnscaledImmediate.Create, EmitRaw.EmitLoadStoreRegisterUnscaledImmediate);
            Add("00111100010---------00----------", InstructionMnemonic.LDUR, InstructionInfo.B, OpCodeLoadStoreRegisterUnscaledImmediate.Create, EmitRaw.EmitLoadStoreRegisterUnscaledImmediate);
            Add("00111100100---------00----------", InstructionMnemonic.STUR, InstructionInfo.Q, OpCodeLoadStoreRegisterUnscaledImmediate.Create, EmitRaw.EmitLoadStoreRegisterUnscaledImmediate);
            Add("00111100110---------00----------", InstructionMnemonic.LDUR, InstructionInfo.Q, OpCodeLoadStoreRegisterUnscaledImmediate.Create, EmitRaw.EmitLoadStoreRegisterUnscaledImmediate);
            Add("01111000000---------00----------", InstructionMnemonic.STURH, InstructionInfo.NULL, OpCodeLoadStoreRegisterUnscaledImmediate.Create, EmitRaw.EmitLoadStoreRegisterUnscaledImmediate);
            Add("01111000010---------00----------", InstructionMnemonic.LDURH, InstructionInfo.NULL, OpCodeLoadStoreRegisterUnscaledImmediate.Create, EmitRaw.EmitLoadStoreRegisterUnscaledImmediate);
            Add("01111000100---------00----------", InstructionMnemonic.LDURSH, InstructionInfo.X, OpCodeLoadStoreRegisterUnscaledImmediate.Create, EmitRaw.EmitLoadStoreRegisterUnscaledImmediate);
            Add("01111000110---------00----------", InstructionMnemonic.LDURSH, InstructionInfo.W, OpCodeLoadStoreRegisterUnscaledImmediate.Create, EmitRaw.EmitLoadStoreRegisterUnscaledImmediate);
            Add("01111100000---------00----------", InstructionMnemonic.STUR, InstructionInfo.H, OpCodeLoadStoreRegisterUnscaledImmediate.Create, EmitRaw.EmitLoadStoreRegisterUnscaledImmediate);
            Add("01111100010---------00----------", InstructionMnemonic.LDUR, InstructionInfo.H, OpCodeLoadStoreRegisterUnscaledImmediate.Create, EmitRaw.EmitLoadStoreRegisterUnscaledImmediate);
            Add("10111000000---------00----------", InstructionMnemonic.STUR, InstructionInfo.W, OpCodeLoadStoreRegisterUnscaledImmediate.Create, EmitRaw.EmitLoadStoreRegisterUnscaledImmediate);
            Add("10111000010---------00----------", InstructionMnemonic.LDUR, InstructionInfo.W, OpCodeLoadStoreRegisterUnscaledImmediate.Create, EmitRaw.EmitLoadStoreRegisterUnscaledImmediate);
            Add("10111000100---------00----------", InstructionMnemonic.LDURSW, InstructionInfo.NULL, OpCodeLoadStoreRegisterUnscaledImmediate.Create, EmitRaw.EmitLoadStoreRegisterUnscaledImmediate);
            Add("10111100000---------00----------", InstructionMnemonic.STUR, InstructionInfo.S, OpCodeLoadStoreRegisterUnscaledImmediate.Create, EmitRaw.EmitLoadStoreRegisterUnscaledImmediate);
            Add("10111100010---------00----------", InstructionMnemonic.LDUR, InstructionInfo.S, OpCodeLoadStoreRegisterUnscaledImmediate.Create, EmitRaw.EmitLoadStoreRegisterUnscaledImmediate);
            Add("11111000000---------00----------", InstructionMnemonic.STUR, InstructionInfo.X, OpCodeLoadStoreRegisterUnscaledImmediate.Create, EmitRaw.EmitLoadStoreRegisterUnscaledImmediate);
            Add("11111000010---------00----------", InstructionMnemonic.LDUR, InstructionInfo.X, OpCodeLoadStoreRegisterUnscaledImmediate.Create, EmitRaw.EmitLoadStoreRegisterUnscaledImmediate);
            Add("11111000100---------00----------", InstructionMnemonic.PRFUM, InstructionInfo.NULL, OpCodeLoadStoreRegisterUnscaledImmediate.Create, EmitRaw.EmitLoadStoreRegisterUnscaledImmediate);
            Add("11111100000---------00----------", InstructionMnemonic.STUR, InstructionInfo.D, OpCodeLoadStoreRegisterUnscaledImmediate.Create, EmitRaw.EmitLoadStoreRegisterUnscaledImmediate);
            Add("11111100010---------00----------", InstructionMnemonic.LDUR, InstructionInfo.D, OpCodeLoadStoreRegisterUnscaledImmediate.Create, EmitRaw.EmitLoadStoreRegisterUnscaledImmediate);
            Add("00111000000---------01----------", InstructionMnemonic.STRB, InstructionInfo.NULL, OpCodeLoadStoreRegisterImmediatePostIndexed.Create, EmitRaw.EmitLoadStoreRegisterImmediatePostIndexed);
            Add("00111000010---------01----------", InstructionMnemonic.LDRB, InstructionInfo.NULL, OpCodeLoadStoreRegisterImmediatePostIndexed.Create, EmitRaw.EmitLoadStoreRegisterImmediatePostIndexed);
            Add("00111000100---------01----------", InstructionMnemonic.LDRSB, InstructionInfo.X, OpCodeLoadStoreRegisterImmediatePostIndexed.Create, EmitRaw.EmitLoadStoreRegisterImmediatePostIndexed);
            Add("00111000110---------01----------", InstructionMnemonic.LDRSB, InstructionInfo.W, OpCodeLoadStoreRegisterImmediatePostIndexed.Create, EmitRaw.EmitLoadStoreRegisterImmediatePostIndexed);
            Add("00111100000---------01----------", InstructionMnemonic.STR, InstructionInfo.B, OpCodeLoadStoreRegisterImmediatePostIndexed.Create, EmitRaw.EmitLoadStoreRegisterImmediatePostIndexed);
            Add("00111100010---------01----------", InstructionMnemonic.LDR, InstructionInfo.B, OpCodeLoadStoreRegisterImmediatePostIndexed.Create, EmitRaw.EmitLoadStoreRegisterImmediatePostIndexed);
            Add("00111100100---------01----------", InstructionMnemonic.STR, InstructionInfo.Q, OpCodeLoadStoreRegisterImmediatePostIndexed.Create, EmitRaw.EmitLoadStoreRegisterImmediatePostIndexed);
            Add("00111100110---------01----------", InstructionMnemonic.LDR, InstructionInfo.Q, OpCodeLoadStoreRegisterImmediatePostIndexed.Create, EmitRaw.EmitLoadStoreRegisterImmediatePostIndexed);
            Add("01111000000---------01----------", InstructionMnemonic.STRH, InstructionInfo.NULL, OpCodeLoadStoreRegisterImmediatePostIndexed.Create, EmitRaw.EmitLoadStoreRegisterImmediatePostIndexed);
            Add("01111000010---------01----------", InstructionMnemonic.LDRH, InstructionInfo.NULL, OpCodeLoadStoreRegisterImmediatePostIndexed.Create, EmitRaw.EmitLoadStoreRegisterImmediatePostIndexed);
            Add("01111000100---------01----------", InstructionMnemonic.LDRSH, InstructionInfo.X, OpCodeLoadStoreRegisterImmediatePostIndexed.Create, EmitRaw.EmitLoadStoreRegisterImmediatePostIndexed);
            Add("01111000110---------01----------", InstructionMnemonic.LDRSH, InstructionInfo.W, OpCodeLoadStoreRegisterImmediatePostIndexed.Create, EmitRaw.EmitLoadStoreRegisterImmediatePostIndexed);
            Add("01111100000---------01----------", InstructionMnemonic.STR, InstructionInfo.H, OpCodeLoadStoreRegisterImmediatePostIndexed.Create, EmitRaw.EmitLoadStoreRegisterImmediatePostIndexed);
            Add("01111100010---------01----------", InstructionMnemonic.LDR, InstructionInfo.H, OpCodeLoadStoreRegisterImmediatePostIndexed.Create, EmitRaw.EmitLoadStoreRegisterImmediatePostIndexed);
            Add("10111000000---------01----------", InstructionMnemonic.STR, InstructionInfo.W, OpCodeLoadStoreRegisterImmediatePostIndexed.Create, EmitRaw.EmitLoadStoreRegisterImmediatePostIndexed);
            Add("10111000010---------01----------", InstructionMnemonic.LDR, InstructionInfo.W, OpCodeLoadStoreRegisterImmediatePostIndexed.Create, EmitRaw.EmitLoadStoreRegisterImmediatePostIndexed);
            Add("10111000100---------01----------", InstructionMnemonic.LDRSW, InstructionInfo.NULL, OpCodeLoadStoreRegisterImmediatePostIndexed.Create, EmitRaw.EmitLoadStoreRegisterImmediatePostIndexed);
            Add("10111100000---------01----------", InstructionMnemonic.STR, InstructionInfo.S, OpCodeLoadStoreRegisterImmediatePostIndexed.Create, EmitRaw.EmitLoadStoreRegisterImmediatePostIndexed);
            Add("10111100010---------01----------", InstructionMnemonic.LDR, InstructionInfo.S, OpCodeLoadStoreRegisterImmediatePostIndexed.Create, EmitRaw.EmitLoadStoreRegisterImmediatePostIndexed);
            Add("11111000000---------01----------", InstructionMnemonic.STR, InstructionInfo.X, OpCodeLoadStoreRegisterImmediatePostIndexed.Create, EmitRaw.EmitLoadStoreRegisterImmediatePostIndexed);
            Add("11111000010---------01----------", InstructionMnemonic.LDR, InstructionInfo.X, OpCodeLoadStoreRegisterImmediatePostIndexed.Create, EmitRaw.EmitLoadStoreRegisterImmediatePostIndexed);
            Add("11111100000---------01----------", InstructionMnemonic.STR, InstructionInfo.D, OpCodeLoadStoreRegisterImmediatePostIndexed.Create, EmitRaw.EmitLoadStoreRegisterImmediatePostIndexed);
            Add("11111100010---------01----------", InstructionMnemonic.LDR, InstructionInfo.D, OpCodeLoadStoreRegisterImmediatePostIndexed.Create, EmitRaw.EmitLoadStoreRegisterImmediatePostIndexed);
            Add("00111000000---------10----------", InstructionMnemonic.STTRB, InstructionInfo.NULL, OpCodeLoadStoreRegisterUnprivileged.Create, EmitRaw.EmitLoadStoreRegisterUnprivileged);
            Add("00111000010---------10----------", InstructionMnemonic.LDTRB, InstructionInfo.NULL, OpCodeLoadStoreRegisterUnprivileged.Create, EmitRaw.EmitLoadStoreRegisterUnprivileged);
            Add("00111000100---------10----------", InstructionMnemonic.LDTRSB, InstructionInfo.X, OpCodeLoadStoreRegisterUnprivileged.Create, EmitRaw.EmitLoadStoreRegisterUnprivileged);
            Add("00111000110---------10----------", InstructionMnemonic.LDTRSB, InstructionInfo.W, OpCodeLoadStoreRegisterUnprivileged.Create, EmitRaw.EmitLoadStoreRegisterUnprivileged);
            Add("01111000000---------10----------", InstructionMnemonic.STTRH, InstructionInfo.NULL, OpCodeLoadStoreRegisterUnprivileged.Create, EmitRaw.EmitLoadStoreRegisterUnprivileged);
            Add("01111000010---------10----------", InstructionMnemonic.LDTRH, InstructionInfo.NULL, OpCodeLoadStoreRegisterUnprivileged.Create, EmitRaw.EmitLoadStoreRegisterUnprivileged);
            Add("01111000100---------10----------", InstructionMnemonic.LDTRSH, InstructionInfo.X, OpCodeLoadStoreRegisterUnprivileged.Create, EmitRaw.EmitLoadStoreRegisterUnprivileged);
            Add("01111000110---------10----------", InstructionMnemonic.LDTRSH, InstructionInfo.W, OpCodeLoadStoreRegisterUnprivileged.Create, EmitRaw.EmitLoadStoreRegisterUnprivileged);
            Add("10111000000---------10----------", InstructionMnemonic.STTR, InstructionInfo.W, OpCodeLoadStoreRegisterUnprivileged.Create, EmitRaw.EmitLoadStoreRegisterUnprivileged);
            Add("10111000010---------10----------", InstructionMnemonic.LDTR, InstructionInfo.W, OpCodeLoadStoreRegisterUnprivileged.Create, EmitRaw.EmitLoadStoreRegisterUnprivileged);
            Add("10111000100---------10----------", InstructionMnemonic.LDTRSW, InstructionInfo.NULL, OpCodeLoadStoreRegisterUnprivileged.Create, EmitRaw.EmitLoadStoreRegisterUnprivileged);
            Add("11111000000---------10----------", InstructionMnemonic.STTR, InstructionInfo.X, OpCodeLoadStoreRegisterUnprivileged.Create, EmitRaw.EmitLoadStoreRegisterUnprivileged);
            Add("11111000010---------10----------", InstructionMnemonic.LDTR, InstructionInfo.X, OpCodeLoadStoreRegisterUnprivileged.Create, EmitRaw.EmitLoadStoreRegisterUnprivileged);
            Add("00111000000---------11----------", InstructionMnemonic.STRB, InstructionInfo.NULL, OpCodeLoadStoreRegisterImmediatePreIndexed.Create, EmitRaw.EmitLoadStoreRegisterImmediatePreIndexed);
            Add("00111000010---------11----------", InstructionMnemonic.LDRB, InstructionInfo.NULL, OpCodeLoadStoreRegisterImmediatePreIndexed.Create, EmitRaw.EmitLoadStoreRegisterImmediatePreIndexed);
            Add("00111000100---------11----------", InstructionMnemonic.LDRSB, InstructionInfo.X, OpCodeLoadStoreRegisterImmediatePreIndexed.Create, EmitRaw.EmitLoadStoreRegisterImmediatePreIndexed);
            Add("00111000110---------11----------", InstructionMnemonic.LDRSB, InstructionInfo.W, OpCodeLoadStoreRegisterImmediatePreIndexed.Create, EmitRaw.EmitLoadStoreRegisterImmediatePreIndexed);
            Add("00111100000---------11----------", InstructionMnemonic.STR, InstructionInfo.B, OpCodeLoadStoreRegisterImmediatePreIndexed.Create, EmitRaw.EmitLoadStoreRegisterImmediatePreIndexed);
            Add("00111100010---------11----------", InstructionMnemonic.LDR, InstructionInfo.B, OpCodeLoadStoreRegisterImmediatePreIndexed.Create, EmitRaw.EmitLoadStoreRegisterImmediatePreIndexed);
            Add("00111100100---------11----------", InstructionMnemonic.STR, InstructionInfo.Q, OpCodeLoadStoreRegisterImmediatePreIndexed.Create, EmitRaw.EmitLoadStoreRegisterImmediatePreIndexed);
            Add("00111100110---------11----------", InstructionMnemonic.LDR, InstructionInfo.Q, OpCodeLoadStoreRegisterImmediatePreIndexed.Create, EmitRaw.EmitLoadStoreRegisterImmediatePreIndexed);
            Add("01111000000---------11----------", InstructionMnemonic.STRH, InstructionInfo.NULL, OpCodeLoadStoreRegisterImmediatePreIndexed.Create, EmitRaw.EmitLoadStoreRegisterImmediatePreIndexed);
            Add("01111000010---------11----------", InstructionMnemonic.LDRH, InstructionInfo.NULL, OpCodeLoadStoreRegisterImmediatePreIndexed.Create, EmitRaw.EmitLoadStoreRegisterImmediatePreIndexed);
            Add("01111000100---------11----------", InstructionMnemonic.LDRSH, InstructionInfo.X, OpCodeLoadStoreRegisterImmediatePreIndexed.Create, EmitRaw.EmitLoadStoreRegisterImmediatePreIndexed);
            Add("01111000110---------11----------", InstructionMnemonic.LDRSH, InstructionInfo.W, OpCodeLoadStoreRegisterImmediatePreIndexed.Create, EmitRaw.EmitLoadStoreRegisterImmediatePreIndexed);
            Add("01111100000---------11----------", InstructionMnemonic.STR, InstructionInfo.H, OpCodeLoadStoreRegisterImmediatePreIndexed.Create, EmitRaw.EmitLoadStoreRegisterImmediatePreIndexed);
            Add("01111100010---------11----------", InstructionMnemonic.LDR, InstructionInfo.H, OpCodeLoadStoreRegisterImmediatePreIndexed.Create, EmitRaw.EmitLoadStoreRegisterImmediatePreIndexed);
            Add("10111000000---------11----------", InstructionMnemonic.STR, InstructionInfo.W, OpCodeLoadStoreRegisterImmediatePreIndexed.Create, EmitRaw.EmitLoadStoreRegisterImmediatePreIndexed);
            Add("10111000010---------11----------", InstructionMnemonic.LDR, InstructionInfo.W, OpCodeLoadStoreRegisterImmediatePreIndexed.Create, EmitRaw.EmitLoadStoreRegisterImmediatePreIndexed);
            Add("10111000100---------11----------", InstructionMnemonic.LDRSW, InstructionInfo.NULL, OpCodeLoadStoreRegisterImmediatePreIndexed.Create, EmitRaw.EmitLoadStoreRegisterImmediatePreIndexed);
            Add("10111100000---------11----------", InstructionMnemonic.STR, InstructionInfo.S, OpCodeLoadStoreRegisterImmediatePreIndexed.Create, EmitRaw.EmitLoadStoreRegisterImmediatePreIndexed);
            Add("10111100010---------11----------", InstructionMnemonic.LDR, InstructionInfo.S, OpCodeLoadStoreRegisterImmediatePreIndexed.Create, EmitRaw.EmitLoadStoreRegisterImmediatePreIndexed);
            Add("11111000000---------11----------", InstructionMnemonic.STR, InstructionInfo.X, OpCodeLoadStoreRegisterImmediatePreIndexed.Create, EmitRaw.EmitLoadStoreRegisterImmediatePreIndexed);
            Add("11111000010---------11----------", InstructionMnemonic.LDR, InstructionInfo.X, OpCodeLoadStoreRegisterImmediatePreIndexed.Create, EmitRaw.EmitLoadStoreRegisterImmediatePreIndexed);
            Add("11111100000---------11----------", InstructionMnemonic.STR, InstructionInfo.D, OpCodeLoadStoreRegisterImmediatePreIndexed.Create, EmitRaw.EmitLoadStoreRegisterImmediatePreIndexed);
            Add("11111100010---------11----------", InstructionMnemonic.LDR, InstructionInfo.D, OpCodeLoadStoreRegisterImmediatePreIndexed.Create, EmitRaw.EmitLoadStoreRegisterImmediatePreIndexed);
            Add("00111000001---------10----------", InstructionMnemonic.STRB, InstructionInfo.NULL, OpCodeLoadStoreRegisterRegisterOffset.Create, EmitRaw.EmitLoadStoreRegisterRegisterOffset);
            Add("00111000011---------10----------", InstructionMnemonic.LDRB, InstructionInfo.NULL, OpCodeLoadStoreRegisterRegisterOffset.Create, EmitRaw.EmitLoadStoreRegisterRegisterOffset);
            Add("00111000101---------10----------", InstructionMnemonic.LDRSB, InstructionInfo.X, OpCodeLoadStoreRegisterRegisterOffset.Create, EmitRaw.EmitLoadStoreRegisterRegisterOffset);
            Add("00111000111---------10----------", InstructionMnemonic.LDRSB, InstructionInfo.W, OpCodeLoadStoreRegisterRegisterOffset.Create, EmitRaw.EmitLoadStoreRegisterRegisterOffset);
            Add("00111100001---------10----------", InstructionMnemonic.STR, InstructionInfo.B, OpCodeLoadStoreRegisterRegisterOffset.Create, EmitRaw.EmitLoadStoreRegisterRegisterOffset);
            Add("00111100011---------10----------", InstructionMnemonic.LDR, InstructionInfo.B, OpCodeLoadStoreRegisterRegisterOffset.Create, EmitRaw.EmitLoadStoreRegisterRegisterOffset);
            Add("00111100101---------10----------", InstructionMnemonic.STR, InstructionInfo.Q, OpCodeLoadStoreRegisterRegisterOffset.Create, EmitRaw.EmitLoadStoreRegisterRegisterOffset);
            Add("00111100111---------10----------", InstructionMnemonic.LDR, InstructionInfo.Q, OpCodeLoadStoreRegisterRegisterOffset.Create, EmitRaw.EmitLoadStoreRegisterRegisterOffset);
            Add("01111000001---------10----------", InstructionMnemonic.STRH, InstructionInfo.NULL, OpCodeLoadStoreRegisterRegisterOffset.Create, EmitRaw.EmitLoadStoreRegisterRegisterOffset);
            Add("01111000011---------10----------", InstructionMnemonic.LDRH, InstructionInfo.NULL, OpCodeLoadStoreRegisterRegisterOffset.Create, EmitRaw.EmitLoadStoreRegisterRegisterOffset);
            Add("01111000101---------10----------", InstructionMnemonic.LDRSH, InstructionInfo.X, OpCodeLoadStoreRegisterRegisterOffset.Create, EmitRaw.EmitLoadStoreRegisterRegisterOffset);
            Add("01111000111---------10----------", InstructionMnemonic.LDRSH, InstructionInfo.W, OpCodeLoadStoreRegisterRegisterOffset.Create, EmitRaw.EmitLoadStoreRegisterRegisterOffset);
            Add("01111100001---------10----------", InstructionMnemonic.STR, InstructionInfo.H, OpCodeLoadStoreRegisterRegisterOffset.Create, EmitRaw.EmitLoadStoreRegisterRegisterOffset);
            Add("01111100011---------10----------", InstructionMnemonic.LDR, InstructionInfo.H, OpCodeLoadStoreRegisterRegisterOffset.Create, EmitRaw.EmitLoadStoreRegisterRegisterOffset);
            Add("10111000001---------10----------", InstructionMnemonic.STR, InstructionInfo.W, OpCodeLoadStoreRegisterRegisterOffset.Create, EmitRaw.EmitLoadStoreRegisterRegisterOffset);
            Add("10111000011---------10----------", InstructionMnemonic.LDR, InstructionInfo.W, OpCodeLoadStoreRegisterRegisterOffset.Create, EmitRaw.EmitLoadStoreRegisterRegisterOffset);
            Add("10111000101---------10----------", InstructionMnemonic.LDRSW, InstructionInfo.NULL, OpCodeLoadStoreRegisterRegisterOffset.Create, EmitRaw.EmitLoadStoreRegisterRegisterOffset);
            Add("10111100001---------10----------", InstructionMnemonic.STR, InstructionInfo.S, OpCodeLoadStoreRegisterRegisterOffset.Create, EmitRaw.EmitLoadStoreRegisterRegisterOffset);
            Add("10111100011---------10----------", InstructionMnemonic.LDR, InstructionInfo.S, OpCodeLoadStoreRegisterRegisterOffset.Create, EmitRaw.EmitLoadStoreRegisterRegisterOffset);
            Add("11111000001---------10----------", InstructionMnemonic.STR, InstructionInfo.X, OpCodeLoadStoreRegisterRegisterOffset.Create, EmitRaw.EmitLoadStoreRegisterRegisterOffset);
            Add("11111000011---------10----------", InstructionMnemonic.LDR, InstructionInfo.X, OpCodeLoadStoreRegisterRegisterOffset.Create, EmitRaw.EmitLoadStoreRegisterRegisterOffset);
            Add("11111100001---------10----------", InstructionMnemonic.STR, InstructionInfo.D, OpCodeLoadStoreRegisterRegisterOffset.Create, EmitRaw.EmitLoadStoreRegisterRegisterOffset);
            Add("11111100011---------10----------", InstructionMnemonic.LDR, InstructionInfo.D, OpCodeLoadStoreRegisterRegisterOffset.Create, EmitRaw.EmitLoadStoreRegisterRegisterOffset);
            Add("11111000101---------10----------", InstructionMnemonic.PRFM, InstructionInfo.NULL, OpCodeLoadStoreRegisterRegisterOffset.Create, EmitRaw.EmitLoadStoreRegisterRegisterOffset);
            Add("0011100100----------------------", InstructionMnemonic.STRB, InstructionInfo.NULL, OpCodeLoadStoreRegisterUnsignedImmediate.Create, EmitRaw.EmitLoadStoreRegisterUnsignedImmediate);
            Add("0011100101----------------------", InstructionMnemonic.LDRB, InstructionInfo.NULL, OpCodeLoadStoreRegisterUnsignedImmediate.Create, EmitRaw.EmitLoadStoreRegisterUnsignedImmediate);
            Add("0011100110----------------------", InstructionMnemonic.LDRSB, InstructionInfo.X, OpCodeLoadStoreRegisterUnsignedImmediate.Create, EmitRaw.EmitLoadStoreRegisterUnsignedImmediate);
            Add("0011100111----------------------", InstructionMnemonic.LDRSB, InstructionInfo.W, OpCodeLoadStoreRegisterUnsignedImmediate.Create, EmitRaw.EmitLoadStoreRegisterUnsignedImmediate);
            Add("0011110100----------------------", InstructionMnemonic.STR, InstructionInfo.B, OpCodeLoadStoreRegisterUnsignedImmediate.Create, EmitRaw.EmitLoadStoreRegisterUnsignedImmediate);
            Add("0011110101----------------------", InstructionMnemonic.LDR, InstructionInfo.B, OpCodeLoadStoreRegisterUnsignedImmediate.Create, EmitRaw.EmitLoadStoreRegisterUnsignedImmediate);
            Add("0011110110----------------------", InstructionMnemonic.STR, InstructionInfo.Q, OpCodeLoadStoreRegisterUnsignedImmediate.Create, EmitRaw.EmitLoadStoreRegisterUnsignedImmediate);
            Add("0011110111----------------------", InstructionMnemonic.LDR, InstructionInfo.Q, OpCodeLoadStoreRegisterUnsignedImmediate.Create, EmitRaw.EmitLoadStoreRegisterUnsignedImmediate);
            Add("0111100100----------------------", InstructionMnemonic.STRH, InstructionInfo.NULL, OpCodeLoadStoreRegisterUnsignedImmediate.Create, EmitRaw.EmitLoadStoreRegisterUnsignedImmediate);
            Add("0111100101----------------------", InstructionMnemonic.LDRH, InstructionInfo.NULL, OpCodeLoadStoreRegisterUnsignedImmediate.Create, EmitRaw.EmitLoadStoreRegisterUnsignedImmediate);
            Add("0111100110----------------------", InstructionMnemonic.LDRSH, InstructionInfo.X, OpCodeLoadStoreRegisterUnsignedImmediate.Create, EmitRaw.EmitLoadStoreRegisterUnsignedImmediate);
            Add("0111100111----------------------", InstructionMnemonic.LDRSH, InstructionInfo.W, OpCodeLoadStoreRegisterUnsignedImmediate.Create, EmitRaw.EmitLoadStoreRegisterUnsignedImmediate);
            Add("0111110100----------------------", InstructionMnemonic.STR, InstructionInfo.H, OpCodeLoadStoreRegisterUnsignedImmediate.Create, EmitRaw.EmitLoadStoreRegisterUnsignedImmediate);
            Add("0111110101----------------------", InstructionMnemonic.LDR, InstructionInfo.H, OpCodeLoadStoreRegisterUnsignedImmediate.Create, EmitRaw.EmitLoadStoreRegisterUnsignedImmediate);
            Add("1011100100----------------------", InstructionMnemonic.STR, InstructionInfo.W, OpCodeLoadStoreRegisterUnsignedImmediate.Create, EmitRaw.EmitLoadStoreRegisterUnsignedImmediate);
            Add("1011100101----------------------", InstructionMnemonic.LDR, InstructionInfo.W, OpCodeLoadStoreRegisterUnsignedImmediate.Create, EmitRaw.EmitLoadStoreRegisterUnsignedImmediate);
            Add("1011100110----------------------", InstructionMnemonic.LDRSW, InstructionInfo.NULL, OpCodeLoadStoreRegisterUnsignedImmediate.Create, EmitRaw.EmitLoadStoreRegisterUnsignedImmediate);
            Add("1011110100----------------------", InstructionMnemonic.STR, InstructionInfo.S, OpCodeLoadStoreRegisterUnsignedImmediate.Create, EmitRaw.EmitLoadStoreRegisterUnsignedImmediate);
            Add("1011110101----------------------", InstructionMnemonic.LDR, InstructionInfo.S, OpCodeLoadStoreRegisterUnsignedImmediate.Create, EmitRaw.EmitLoadStoreRegisterUnsignedImmediate);
            Add("1111100100----------------------", InstructionMnemonic.STR, InstructionInfo.X, OpCodeLoadStoreRegisterUnsignedImmediate.Create, EmitRaw.EmitLoadStoreRegisterUnsignedImmediate);
            Add("1111100101----------------------", InstructionMnemonic.LDR, InstructionInfo.X, OpCodeLoadStoreRegisterUnsignedImmediate.Create, EmitRaw.EmitLoadStoreRegisterUnsignedImmediate);
            Add("1111110100----------------------", InstructionMnemonic.STR, InstructionInfo.D, OpCodeLoadStoreRegisterUnsignedImmediate.Create, EmitRaw.EmitLoadStoreRegisterUnsignedImmediate);
            Add("1111110101----------------------", InstructionMnemonic.LDR, InstructionInfo.D, OpCodeLoadStoreRegisterUnsignedImmediate.Create, EmitRaw.EmitLoadStoreRegisterUnsignedImmediate);
            Add("1111100110----------------------", InstructionMnemonic.PRFM, InstructionInfo.NULL, OpCodeLoadStoreRegisterUnsignedImmediate.Create, EmitRaw.EmitLoadStoreRegisterUnsignedImmediate);
            Add("0--10000------------------------", InstructionMnemonic.ADR, InstructionInfo.NULL, OpCodePCRelAddressing.Create, EmitRaw.EmitPCRelAddressing);
            Add("1--10000------------------------", InstructionMnemonic.ADRP, InstructionInfo.NULL, OpCodePCRelAddressing.Create, EmitRaw.EmitPCRelAddressing);
            Add("00010001------------------------", InstructionMnemonic.ADD, InstructionInfo.W, OpCodeAddSubtractImmediate.Create, EmitRaw.EmitAddSubtractImmediate);
            Add("00110001------------------------", InstructionMnemonic.ADDS, InstructionInfo.W, OpCodeAddSubtractImmediate.Create, EmitRaw.EmitAddSubtractImmediate);
            Add("01010001------------------------", InstructionMnemonic.SUB, InstructionInfo.W, OpCodeAddSubtractImmediate.Create, EmitRaw.EmitAddSubtractImmediate);
            Add("01110001------------------------", InstructionMnemonic.SUBS, InstructionInfo.W, OpCodeAddSubtractImmediate.Create, EmitRaw.EmitAddSubtractImmediate);
            Add("10010001------------------------", InstructionMnemonic.ADD, InstructionInfo.X, OpCodeAddSubtractImmediate.Create, EmitRaw.EmitAddSubtractImmediate);
            Add("10110001------------------------", InstructionMnemonic.ADDS, InstructionInfo.X, OpCodeAddSubtractImmediate.Create, EmitRaw.EmitAddSubtractImmediate);
            Add("11010001------------------------", InstructionMnemonic.SUB, InstructionInfo.X, OpCodeAddSubtractImmediate.Create, EmitRaw.EmitAddSubtractImmediate);
            Add("11110001------------------------", InstructionMnemonic.SUBS, InstructionInfo.X, OpCodeAddSubtractImmediate.Create, EmitRaw.EmitAddSubtractImmediate);
            Add("0001001000----------------------", InstructionMnemonic.AND, InstructionInfo.W, OpCodeLogicalImmediate.Create, EmitRaw.EmitLogicalImmediate);
            Add("0011001000----------------------", InstructionMnemonic.ORR, InstructionInfo.W, OpCodeLogicalImmediate.Create, EmitRaw.EmitLogicalImmediate);
            Add("0101001000----------------------", InstructionMnemonic.EOR, InstructionInfo.W, OpCodeLogicalImmediate.Create, EmitRaw.EmitLogicalImmediate);
            Add("0111001000----------------------", InstructionMnemonic.ANDS, InstructionInfo.W, OpCodeLogicalImmediate.Create, EmitRaw.EmitLogicalImmediate);
            Add("100100100-----------------------", InstructionMnemonic.AND, InstructionInfo.X, OpCodeLogicalImmediate.Create, EmitRaw.EmitLogicalImmediate);
            Add("101100100-----------------------", InstructionMnemonic.ORR, InstructionInfo.X, OpCodeLogicalImmediate.Create, EmitRaw.EmitLogicalImmediate);
            Add("110100100-----------------------", InstructionMnemonic.EOR, InstructionInfo.X, OpCodeLogicalImmediate.Create, EmitRaw.EmitLogicalImmediate);
            Add("111100100-----------------------", InstructionMnemonic.ANDS, InstructionInfo.X, OpCodeLogicalImmediate.Create, EmitRaw.EmitLogicalImmediate);
            Add("000100101-----------------------", InstructionMnemonic.MOVN, InstructionInfo.W, OpCodeMoveWideImmediate.Create, EmitRaw.EmitMoveWideImmediate);
            Add("010100101-----------------------", InstructionMnemonic.MOVZ, InstructionInfo.W, OpCodeMoveWideImmediate.Create, EmitRaw.EmitMoveWideImmediate);
            Add("011100101-----------------------", InstructionMnemonic.MOVK, InstructionInfo.W, OpCodeMoveWideImmediate.Create, EmitRaw.EmitMoveWideImmediate);
            Add("100100101-----------------------", InstructionMnemonic.MOVN, InstructionInfo.X, OpCodeMoveWideImmediate.Create, EmitRaw.EmitMoveWideImmediate);
            Add("110100101-----------------------", InstructionMnemonic.MOVZ, InstructionInfo.X, OpCodeMoveWideImmediate.Create, EmitRaw.EmitMoveWideImmediate);
            Add("111100101-----------------------", InstructionMnemonic.MOVK, InstructionInfo.X, OpCodeMoveWideImmediate.Create, EmitRaw.EmitMoveWideImmediate);
            Add("0001001100----------------------", InstructionMnemonic.SBFM, InstructionInfo.W, OpCodeBitfield.Create, EmitRaw.EmitBitfield);
            Add("0011001100----------------------", InstructionMnemonic.BFM, InstructionInfo.W, OpCodeBitfield.Create, EmitRaw.EmitBitfield);
            Add("0101001100----------------------", InstructionMnemonic.UBFM, InstructionInfo.W, OpCodeBitfield.Create, EmitRaw.EmitBitfield);
            Add("1001001101----------------------", InstructionMnemonic.SBFM, InstructionInfo.X, OpCodeBitfield.Create, EmitRaw.EmitBitfield);
            Add("1011001101----------------------", InstructionMnemonic.BFM, InstructionInfo.X, OpCodeBitfield.Create, EmitRaw.EmitBitfield);
            Add("1101001101----------------------", InstructionMnemonic.UBFM, InstructionInfo.X, OpCodeBitfield.Create, EmitRaw.EmitBitfield);
            Add("00010011100---------------------", InstructionMnemonic.EXTR, InstructionInfo.W, OpCodeExtract.Create, EmitRaw.EmitExtract);
            Add("10010011110---------------------", InstructionMnemonic.EXTR, InstructionInfo.X, OpCodeExtract.Create, EmitRaw.EmitExtract);
            Add("00001010--0---------------------", InstructionMnemonic.AND, InstructionInfo.W, OpCodeLogicalShiftedRegister.Create, EmitRaw.EmitLogicalShiftedRegister);
            Add("00001010--1---------------------", InstructionMnemonic.BIC, InstructionInfo.W, OpCodeLogicalShiftedRegister.Create, EmitRaw.EmitLogicalShiftedRegister);
            Add("00101010--0---------------------", InstructionMnemonic.ORR, InstructionInfo.W, OpCodeLogicalShiftedRegister.Create, EmitRaw.EmitLogicalShiftedRegister);
            Add("00101010--1---------------------", InstructionMnemonic.ORN, InstructionInfo.W, OpCodeLogicalShiftedRegister.Create, EmitRaw.EmitLogicalShiftedRegister);
            Add("01001010--0---------------------", InstructionMnemonic.EOR, InstructionInfo.W, OpCodeLogicalShiftedRegister.Create, EmitRaw.EmitLogicalShiftedRegister);
            Add("01001010--1---------------------", InstructionMnemonic.EON, InstructionInfo.W, OpCodeLogicalShiftedRegister.Create, EmitRaw.EmitLogicalShiftedRegister);
            Add("01101010--0---------------------", InstructionMnemonic.ANDS, InstructionInfo.W, OpCodeLogicalShiftedRegister.Create, EmitRaw.EmitLogicalShiftedRegister);
            Add("01101010--1---------------------", InstructionMnemonic.BICS, InstructionInfo.W, OpCodeLogicalShiftedRegister.Create, EmitRaw.EmitLogicalShiftedRegister);
            Add("10001010--0---------------------", InstructionMnemonic.AND, InstructionInfo.X, OpCodeLogicalShiftedRegister.Create, EmitRaw.EmitLogicalShiftedRegister);
            Add("10001010--1---------------------", InstructionMnemonic.BIC, InstructionInfo.X, OpCodeLogicalShiftedRegister.Create, EmitRaw.EmitLogicalShiftedRegister);
            Add("10101010--0---------------------", InstructionMnemonic.ORR, InstructionInfo.X, OpCodeLogicalShiftedRegister.Create, EmitRaw.EmitLogicalShiftedRegister);
            Add("10101010--1---------------------", InstructionMnemonic.ORN, InstructionInfo.X, OpCodeLogicalShiftedRegister.Create, EmitRaw.EmitLogicalShiftedRegister);
            Add("11001010--0---------------------", InstructionMnemonic.EOR, InstructionInfo.X, OpCodeLogicalShiftedRegister.Create, EmitRaw.EmitLogicalShiftedRegister);
            Add("11001010--1---------------------", InstructionMnemonic.EON, InstructionInfo.X, OpCodeLogicalShiftedRegister.Create, EmitRaw.EmitLogicalShiftedRegister);
            Add("11101010--0---------------------", InstructionMnemonic.ANDS, InstructionInfo.X, OpCodeLogicalShiftedRegister.Create, EmitRaw.EmitLogicalShiftedRegister);
            Add("11101010--1---------------------", InstructionMnemonic.BICS, InstructionInfo.X, OpCodeLogicalShiftedRegister.Create, EmitRaw.EmitLogicalShiftedRegister);
            Add("00001011--0---------------------", InstructionMnemonic.ADD, InstructionInfo.W, OpCodeAddSubtractShiftedRegister.Create, EmitRaw.EmitAddSubtractShiftedRegister);
            Add("00101011--0---------------------", InstructionMnemonic.ADDS, InstructionInfo.W, OpCodeAddSubtractShiftedRegister.Create, EmitRaw.EmitAddSubtractShiftedRegister);
            Add("01001011--0---------------------", InstructionMnemonic.SUB, InstructionInfo.W, OpCodeAddSubtractShiftedRegister.Create, EmitRaw.EmitAddSubtractShiftedRegister);
            Add("01101011--0---------------------", InstructionMnemonic.SUBS, InstructionInfo.W, OpCodeAddSubtractShiftedRegister.Create, EmitRaw.EmitAddSubtractShiftedRegister);
            Add("10001011--0---------------------", InstructionMnemonic.ADD, InstructionInfo.X, OpCodeAddSubtractShiftedRegister.Create, EmitRaw.EmitAddSubtractShiftedRegister);
            Add("10101011--0---------------------", InstructionMnemonic.ADDS, InstructionInfo.X, OpCodeAddSubtractShiftedRegister.Create, EmitRaw.EmitAddSubtractShiftedRegister);
            Add("11001011--0---------------------", InstructionMnemonic.SUB, InstructionInfo.X, OpCodeAddSubtractShiftedRegister.Create, EmitRaw.EmitAddSubtractShiftedRegister);
            Add("11101011--0---------------------", InstructionMnemonic.SUBS, InstructionInfo.X, OpCodeAddSubtractShiftedRegister.Create, EmitRaw.EmitAddSubtractShiftedRegister);
            Add("00001011001---------------------", InstructionMnemonic.ADD, InstructionInfo.W, OpCodeAddSubtractExtendedRegister.Create, EmitRaw.EmitAddSubtractExtendedRegister);
            Add("00101011001---------------------", InstructionMnemonic.ADDS, InstructionInfo.W, OpCodeAddSubtractExtendedRegister.Create, EmitRaw.EmitAddSubtractExtendedRegister);
            Add("01001011001---------------------", InstructionMnemonic.SUB, InstructionInfo.W, OpCodeAddSubtractExtendedRegister.Create, EmitRaw.EmitAddSubtractExtendedRegister);
            Add("01101011001---------------------", InstructionMnemonic.SUBS, InstructionInfo.W, OpCodeAddSubtractExtendedRegister.Create, EmitRaw.EmitAddSubtractExtendedRegister);
            Add("10001011001---------------------", InstructionMnemonic.ADD, InstructionInfo.X, OpCodeAddSubtractExtendedRegister.Create, EmitRaw.EmitAddSubtractExtendedRegister);
            Add("10101011001---------------------", InstructionMnemonic.ADDS, InstructionInfo.X, OpCodeAddSubtractExtendedRegister.Create, EmitRaw.EmitAddSubtractExtendedRegister);
            Add("11001011001---------------------", InstructionMnemonic.SUB, InstructionInfo.X, OpCodeAddSubtractExtendedRegister.Create, EmitRaw.EmitAddSubtractExtendedRegister);
            Add("11101011001---------------------", InstructionMnemonic.SUBS, InstructionInfo.X, OpCodeAddSubtractExtendedRegister.Create, EmitRaw.EmitAddSubtractExtendedRegister);
            Add("00011010000-----000000----------", InstructionMnemonic.ADC, InstructionInfo.W, OpCodeAddSubtractWithCarry.Create, EmitRaw.EmitAddSubtractWithCarry);
            Add("00111010000-----000000----------", InstructionMnemonic.ADCS, InstructionInfo.W, OpCodeAddSubtractWithCarry.Create, EmitRaw.EmitAddSubtractWithCarry);
            Add("01011010000-----000000----------", InstructionMnemonic.SBC, InstructionInfo.W, OpCodeAddSubtractWithCarry.Create, EmitRaw.EmitAddSubtractWithCarry);
            Add("01111010000-----000000----------", InstructionMnemonic.SBCS, InstructionInfo.W, OpCodeAddSubtractWithCarry.Create, EmitRaw.EmitAddSubtractWithCarry);
            Add("10011010000-----000000----------", InstructionMnemonic.ADC, InstructionInfo.X, OpCodeAddSubtractWithCarry.Create, EmitRaw.EmitAddSubtractWithCarry);
            Add("10111010000-----000000----------", InstructionMnemonic.ADCS, InstructionInfo.X, OpCodeAddSubtractWithCarry.Create, EmitRaw.EmitAddSubtractWithCarry);
            Add("11011010000-----000000----------", InstructionMnemonic.SBC, InstructionInfo.X, OpCodeAddSubtractWithCarry.Create, EmitRaw.EmitAddSubtractWithCarry);
            Add("11111010000-----000000----------", InstructionMnemonic.SBCS, InstructionInfo.X, OpCodeAddSubtractWithCarry.Create, EmitRaw.EmitAddSubtractWithCarry);
            Add("00111010010---------00-----0----", InstructionMnemonic.CCMN, InstructionInfo.W, OpCodeConditionalCompareRegister.Create, EmitRaw.EmitConditionalCompareRegister);
            Add("10111010010---------00-----0----", InstructionMnemonic.CCMN, InstructionInfo.X, OpCodeConditionalCompareRegister.Create, EmitRaw.EmitConditionalCompareRegister);
            Add("01111010010---------00-----0----", InstructionMnemonic.CCMP, InstructionInfo.W, OpCodeConditionalCompareRegister.Create, EmitRaw.EmitConditionalCompareRegister);
            Add("11111010010---------00-----0----", InstructionMnemonic.CCMP, InstructionInfo.X, OpCodeConditionalCompareRegister.Create, EmitRaw.EmitConditionalCompareRegister);
            Add("00111010010---------10-----0----", InstructionMnemonic.CCMN, InstructionInfo.W, OpCodeConditionalCompareImmediate.Create, EmitRaw.EmitConditionalCompareImmediate);
            Add("10111010010---------10-----0----", InstructionMnemonic.CCMN, InstructionInfo.X, OpCodeConditionalCompareImmediate.Create, EmitRaw.EmitConditionalCompareImmediate);
            Add("01111010010---------10-----0----", InstructionMnemonic.CCMP, InstructionInfo.W, OpCodeConditionalCompareImmediate.Create, EmitRaw.EmitConditionalCompareImmediate);
            Add("11111010010---------10-----0----", InstructionMnemonic.CCMP, InstructionInfo.X, OpCodeConditionalCompareImmediate.Create, EmitRaw.EmitConditionalCompareImmediate);
            Add("00011010100---------00----------", InstructionMnemonic.CSEL, InstructionInfo.W, OpCodeConditionalSelect.Create, EmitRaw.EmitConditionalSelect);
            Add("00011010100---------01----------", InstructionMnemonic.CSINC, InstructionInfo.W, OpCodeConditionalSelect.Create, EmitRaw.EmitConditionalSelect);
            Add("01011010100---------00----------", InstructionMnemonic.CSINV, InstructionInfo.W, OpCodeConditionalSelect.Create, EmitRaw.EmitConditionalSelect);
            Add("01011010100---------01----------", InstructionMnemonic.CSNEG, InstructionInfo.W, OpCodeConditionalSelect.Create, EmitRaw.EmitConditionalSelect);
            Add("10011010100---------00----------", InstructionMnemonic.CSEL, InstructionInfo.X, OpCodeConditionalSelect.Create, EmitRaw.EmitConditionalSelect);
            Add("10011010100---------01----------", InstructionMnemonic.CSINC, InstructionInfo.X, OpCodeConditionalSelect.Create, EmitRaw.EmitConditionalSelect);
            Add("11011010100---------00----------", InstructionMnemonic.CSINV, InstructionInfo.X, OpCodeConditionalSelect.Create, EmitRaw.EmitConditionalSelect);
            Add("11011010100---------01----------", InstructionMnemonic.CSNEG, InstructionInfo.X, OpCodeConditionalSelect.Create, EmitRaw.EmitConditionalSelect);
            Add("00011011000-----0---------------", InstructionMnemonic.MADD, InstructionInfo.W, OpCodeDataProcessing3Source.Create, EmitRaw.EmitDataProcessing3Source);
            Add("10011011000-----0---------------", InstructionMnemonic.MADD, InstructionInfo.X, OpCodeDataProcessing3Source.Create, EmitRaw.EmitDataProcessing3Source);
            Add("10011011001-----0---------------", InstructionMnemonic.SMADDL, InstructionInfo.NULL, OpCodeDataProcessing3Source.Create, EmitRaw.EmitDataProcessing3Source);
            Add("10011011101-----0---------------", InstructionMnemonic.UMADDL, InstructionInfo.NULL, OpCodeDataProcessing3Source.Create, EmitRaw.EmitDataProcessing3Source);
            Add("00011011000-----1---------------", InstructionMnemonic.MSUB, InstructionInfo.W, OpCodeDataProcessing3Source.Create, EmitRaw.EmitDataProcessing3Source);
            Add("10011011000-----1---------------", InstructionMnemonic.MSUB, InstructionInfo.X, OpCodeDataProcessing3Source.Create, EmitRaw.EmitDataProcessing3Source);
            Add("10011011001-----1---------------", InstructionMnemonic.SMSUBL, InstructionInfo.NULL, OpCodeDataProcessing3Source.Create, EmitRaw.EmitDataProcessing3Source);
            Add("10011011101-----1---------------", InstructionMnemonic.UMSUBL, InstructionInfo.NULL, OpCodeDataProcessing3Source.Create, EmitRaw.EmitDataProcessing3Source);
            Add("10011011010-----0---------------", InstructionMnemonic.SMULH, InstructionInfo.NULL, OpCodeDataProcessing3Source.Create, EmitRaw.EmitDataProcessing3Source);
            Add("10011011110-----0---------------", InstructionMnemonic.UMULH, InstructionInfo.NULL, OpCodeDataProcessing3Source.Create, EmitRaw.EmitDataProcessing3Source);
            Add("10011010110-----010011----------", InstructionMnemonic.CRC32X, InstructionInfo.NULL, OpCodeDataProcessing2Source.Create, EmitRaw.EmitDataProcessing2Source);
            Add("10011010110-----010111----------", InstructionMnemonic.CRC32CX, InstructionInfo.NULL, OpCodeDataProcessing2Source.Create, EmitRaw.EmitDataProcessing2Source);
            Add("00011010110-----010000----------", InstructionMnemonic.CRC32B, InstructionInfo.NULL, OpCodeDataProcessing2Source.Create, EmitRaw.EmitDataProcessing2Source);
            Add("00011010110-----010100----------", InstructionMnemonic.CRC32CB, InstructionInfo.NULL, OpCodeDataProcessing2Source.Create, EmitRaw.EmitDataProcessing2Source);
            Add("00011010110-----010001----------", InstructionMnemonic.CRC32H, InstructionInfo.NULL, OpCodeDataProcessing2Source.Create, EmitRaw.EmitDataProcessing2Source);
            Add("00011010110-----010101----------", InstructionMnemonic.CRC32CH, InstructionInfo.NULL, OpCodeDataProcessing2Source.Create, EmitRaw.EmitDataProcessing2Source);
            Add("00011010110-----010010----------", InstructionMnemonic.CRC32W, InstructionInfo.NULL, OpCodeDataProcessing2Source.Create, EmitRaw.EmitDataProcessing2Source);
            Add("00011010110-----010110----------", InstructionMnemonic.CRC32CW, InstructionInfo.NULL, OpCodeDataProcessing2Source.Create, EmitRaw.EmitDataProcessing2Source);
            Add("00011010110-----000010----------", InstructionMnemonic.UDIV, InstructionInfo.W, OpCodeDataProcessing2Source.Create, EmitRaw.EmitDataProcessing2Source);
            Add("10011010110-----000010----------", InstructionMnemonic.UDIV, InstructionInfo.X, OpCodeDataProcessing2Source.Create, EmitRaw.EmitDataProcessing2Source);
            Add("00011010110-----000011----------", InstructionMnemonic.SDIV, InstructionInfo.W, OpCodeDataProcessing2Source.Create, EmitRaw.EmitDataProcessing2Source);
            Add("10011010110-----000011----------", InstructionMnemonic.SDIV, InstructionInfo.X, OpCodeDataProcessing2Source.Create, EmitRaw.EmitDataProcessing2Source);
            Add("00011010110-----001000----------", InstructionMnemonic.LSLV, InstructionInfo.W, OpCodeDataProcessing2Source.Create, EmitRaw.EmitDataProcessing2Source);
            Add("10011010110-----001000----------", InstructionMnemonic.LSLV, InstructionInfo.X, OpCodeDataProcessing2Source.Create, EmitRaw.EmitDataProcessing2Source);
            Add("00011010110-----001001----------", InstructionMnemonic.LSRV, InstructionInfo.W, OpCodeDataProcessing2Source.Create, EmitRaw.EmitDataProcessing2Source);
            Add("10011010110-----001001----------", InstructionMnemonic.LSRV, InstructionInfo.X, OpCodeDataProcessing2Source.Create, EmitRaw.EmitDataProcessing2Source);
            Add("00011010110-----001010----------", InstructionMnemonic.ASRV, InstructionInfo.W, OpCodeDataProcessing2Source.Create, EmitRaw.EmitDataProcessing2Source);
            Add("10011010110-----001010----------", InstructionMnemonic.ASRV, InstructionInfo.X, OpCodeDataProcessing2Source.Create, EmitRaw.EmitDataProcessing2Source);
            Add("00011010110-----001011----------", InstructionMnemonic.RORV, InstructionInfo.W, OpCodeDataProcessing2Source.Create, EmitRaw.EmitDataProcessing2Source);
            Add("10011010110-----001011----------", InstructionMnemonic.RORV, InstructionInfo.X, OpCodeDataProcessing2Source.Create, EmitRaw.EmitDataProcessing2Source);
            Add("0101101011000000000000----------", InstructionMnemonic.RBIT, InstructionInfo.W, OpCodeDataProcessing1Source.Create, EmitRaw.EmitDataProcessing1Source);
            Add("1101101011000000000000----------", InstructionMnemonic.RBIT, InstructionInfo.X, OpCodeDataProcessing1Source.Create, EmitRaw.EmitDataProcessing1Source);
            Add("0101101011000000000100----------", InstructionMnemonic.CLZ, InstructionInfo.W, OpCodeDataProcessing1Source.Create, EmitRaw.EmitDataProcessing1Source);
            Add("1101101011000000000100----------", InstructionMnemonic.CLZ, InstructionInfo.X, OpCodeDataProcessing1Source.Create, EmitRaw.EmitDataProcessing1Source);
            Add("0101101011000000000101----------", InstructionMnemonic.CLS, InstructionInfo.W, OpCodeDataProcessing1Source.Create, EmitRaw.EmitDataProcessing1Source);
            Add("1101101011000000000101----------", InstructionMnemonic.CLS, InstructionInfo.X, OpCodeDataProcessing1Source.Create, EmitRaw.EmitDataProcessing1Source);
            Add("0101101011000000000010----------", InstructionMnemonic.REV, InstructionInfo.W, OpCodeDataProcessing1Source.Create, EmitRaw.EmitDataProcessing1Source);
            Add("1101101011000000000011----------", InstructionMnemonic.REV, InstructionInfo.X, OpCodeDataProcessing1Source.Create, EmitRaw.EmitDataProcessing1Source);
            Add("1101101011000000000001----------", InstructionMnemonic.REV16, InstructionInfo.W, OpCodeDataProcessing1Source.Create, EmitRaw.EmitDataProcessing1Source);
            Add("0101101011000000000001----------", InstructionMnemonic.REV16, InstructionInfo.X, OpCodeDataProcessing1Source.Create, EmitRaw.EmitDataProcessing1Source);
            Add("1101101011000000000010----------", InstructionMnemonic.REV32, InstructionInfo.NULL, OpCodeDataProcessing1Source.Create, EmitRaw.EmitDataProcessing1Source);
            //I still have no idea why this is wrong.
            Add("00011110 00 000010----------------", InstructionMnemonic.SCVTF, InstructionInfo._32_bit_to_single_precision, OpCodeFloatingPointFixedPointConversions.Create, EmitRaw.EmitFloatingPointFixedPointConversions);
            Add("00011110 00 000011----------------", InstructionMnemonic.UCVTF, InstructionInfo._32_bit_to_single_precision, OpCodeFloatingPointFixedPointConversions.Create, EmitRaw.EmitFloatingPointFixedPointConversions);
            Add("00011110 00 011000----------------", InstructionMnemonic.FCVTZS, InstructionInfo.Single_precision_to_32_bit, OpCodeFloatingPointFixedPointConversions.Create, EmitRaw.EmitFloatingPointFixedPointConversions);
            Add("00011110 00 011001----------------", InstructionMnemonic.FCVTZU, InstructionInfo.Single_precision_to_32_bit, OpCodeFloatingPointFixedPointConversions.Create, EmitRaw.EmitFloatingPointFixedPointConversions);
            Add("00011110 01 000010----------------", InstructionMnemonic.SCVTF, InstructionInfo._32_bit_to_double_precision, OpCodeFloatingPointFixedPointConversions.Create, EmitRaw.EmitFloatingPointFixedPointConversions);
            Add("00011110 01 000011----------------", InstructionMnemonic.UCVTF, InstructionInfo._32_bit_to_double_precision, OpCodeFloatingPointFixedPointConversions.Create, EmitRaw.EmitFloatingPointFixedPointConversions);
            Add("00011110 01 011000----------------", InstructionMnemonic.FCVTZS, InstructionInfo.Double_precision_to_32_bit, OpCodeFloatingPointFixedPointConversions.Create, EmitRaw.EmitFloatingPointFixedPointConversions);
            Add("00011110 01 011001----------------", InstructionMnemonic.FCVTZU, InstructionInfo.Double_precision_to_32_bit, OpCodeFloatingPointFixedPointConversions.Create, EmitRaw.EmitFloatingPointFixedPointConversions);
            Add("10011110 00 000010----------------", InstructionMnemonic.SCVTF, InstructionInfo._64_bit_to_single_precision, OpCodeFloatingPointFixedPointConversions.Create, EmitRaw.EmitFloatingPointFixedPointConversions);
            Add("10011110 00 000011----------------", InstructionMnemonic.UCVTF, InstructionInfo._64_bit_to_single_precision, OpCodeFloatingPointFixedPointConversions.Create, EmitRaw.EmitFloatingPointFixedPointConversions);
            Add("10011110 00 011000----------------", InstructionMnemonic.FCVTZS, InstructionInfo.Single_precision_to_64_bit, OpCodeFloatingPointFixedPointConversions.Create, EmitRaw.EmitFloatingPointFixedPointConversions);
            Add("10011110 00 011001----------------", InstructionMnemonic.FCVTZU, InstructionInfo.Single_precision_to_64_bit, OpCodeFloatingPointFixedPointConversions.Create, EmitRaw.EmitFloatingPointFixedPointConversions);
            Add("10011110 01 000010----------------", InstructionMnemonic.SCVTF, InstructionInfo._64_bit_to_double_precision, OpCodeFloatingPointFixedPointConversions.Create, EmitRaw.EmitFloatingPointFixedPointConversions);
            Add("10011110 01 000011----------------", InstructionMnemonic.UCVTF, InstructionInfo._64_bit_to_double_precision, OpCodeFloatingPointFixedPointConversions.Create, EmitRaw.EmitFloatingPointFixedPointConversions);
            Add("10011110 01 011000----------------", InstructionMnemonic.FCVTZS, InstructionInfo.Double_precision_to_64_bit, OpCodeFloatingPointFixedPointConversions.Create, EmitRaw.EmitFloatingPointFixedPointConversions);
            Add("10011110 01 011001----------------", InstructionMnemonic.FCVTZU, InstructionInfo.Double_precision_to_64_bit, OpCodeFloatingPointFixedPointConversions.Create, EmitRaw.EmitFloatingPointFixedPointConversions);
            Add("00011110001---------01-----0----", InstructionMnemonic.FCCMP, InstructionInfo.Single_precision, OpCodeFloatingPointConditionalCompare.Create, EmitRaw.EmitFloatingPointConditionalCompare);
            Add("00011110001---------01-----1----", InstructionMnemonic.FCCMPE, InstructionInfo.Single_precision, OpCodeFloatingPointConditionalCompare.Create, EmitRaw.EmitFloatingPointConditionalCompare);
            Add("00011110011---------01-----0----", InstructionMnemonic.FCCMP, InstructionInfo.Double_precision, OpCodeFloatingPointConditionalCompare.Create, EmitRaw.EmitFloatingPointConditionalCompare);
            Add("00011110011---------01-----1----", InstructionMnemonic.FCCMPE, InstructionInfo.Double_precision, OpCodeFloatingPointConditionalCompare.Create, EmitRaw.EmitFloatingPointConditionalCompare);
            Add("00011110001-----000010----------", InstructionMnemonic.FMUL, InstructionInfo.Single_precision, OpCodeFloatingPointDataProcessing2Source.Create, EmitRaw.EmitFloatingPointDataProcessing2Source);
            Add("00011110001-----000110----------", InstructionMnemonic.FDIV, InstructionInfo.Single_precision, OpCodeFloatingPointDataProcessing2Source.Create, EmitRaw.EmitFloatingPointDataProcessing2Source);
            Add("00011110001-----001010----------", InstructionMnemonic.FADD, InstructionInfo.Single_precision, OpCodeFloatingPointDataProcessing2Source.Create, EmitRaw.EmitFloatingPointDataProcessing2Source);
            Add("00011110001-----001110----------", InstructionMnemonic.FSUB, InstructionInfo.Single_precision, OpCodeFloatingPointDataProcessing2Source.Create, EmitRaw.EmitFloatingPointDataProcessing2Source);
            Add("00011110001-----010010----------", InstructionMnemonic.FMAX, InstructionInfo.Single_precision, OpCodeFloatingPointDataProcessing2Source.Create, EmitRaw.EmitFloatingPointDataProcessing2Source);
            Add("00011110001-----010110----------", InstructionMnemonic.FMIN, InstructionInfo.Single_precision, OpCodeFloatingPointDataProcessing2Source.Create, EmitRaw.EmitFloatingPointDataProcessing2Source);
            Add("00011110001-----011010----------", InstructionMnemonic.FMAXNM, InstructionInfo.Single_precision, OpCodeFloatingPointDataProcessing2Source.Create, EmitRaw.EmitFloatingPointDataProcessing2Source);
            Add("00011110001-----011110----------", InstructionMnemonic.FMINNM, InstructionInfo.Single_precision, OpCodeFloatingPointDataProcessing2Source.Create, EmitRaw.EmitFloatingPointDataProcessing2Source);
            Add("00011110001-----100010----------", InstructionMnemonic.FNMUL, InstructionInfo.Single_precision, OpCodeFloatingPointDataProcessing2Source.Create, EmitRaw.EmitFloatingPointDataProcessing2Source);
            Add("00011110011-----000010----------", InstructionMnemonic.FMUL, InstructionInfo.Double_precision, OpCodeFloatingPointDataProcessing2Source.Create, EmitRaw.EmitFloatingPointDataProcessing2Source);
            Add("00011110011-----000110----------", InstructionMnemonic.FDIV, InstructionInfo.Double_precision, OpCodeFloatingPointDataProcessing2Source.Create, EmitRaw.EmitFloatingPointDataProcessing2Source);
            Add("00011110011-----001010----------", InstructionMnemonic.FADD, InstructionInfo.Double_precision, OpCodeFloatingPointDataProcessing2Source.Create, EmitRaw.EmitFloatingPointDataProcessing2Source);
            Add("00011110011-----001110----------", InstructionMnemonic.FSUB, InstructionInfo.Double_precision, OpCodeFloatingPointDataProcessing2Source.Create, EmitRaw.EmitFloatingPointDataProcessing2Source);
            Add("00011110011-----010010----------", InstructionMnemonic.FMAX, InstructionInfo.Double_precision, OpCodeFloatingPointDataProcessing2Source.Create, EmitRaw.EmitFloatingPointDataProcessing2Source);
            Add("00011110011-----010110----------", InstructionMnemonic.FMIN, InstructionInfo.Double_precision, OpCodeFloatingPointDataProcessing2Source.Create, EmitRaw.EmitFloatingPointDataProcessing2Source);
            Add("00011110011-----011010----------", InstructionMnemonic.FMAXNM, InstructionInfo.Double_precision, OpCodeFloatingPointDataProcessing2Source.Create, EmitRaw.EmitFloatingPointDataProcessing2Source);
            Add("00011110011-----011110----------", InstructionMnemonic.FMINNM, InstructionInfo.Double_precision, OpCodeFloatingPointDataProcessing2Source.Create, EmitRaw.EmitFloatingPointDataProcessing2Source);
            Add("00011110011-----100010----------", InstructionMnemonic.FNMUL, InstructionInfo.Double_precision, OpCodeFloatingPointDataProcessing2Source.Create, EmitRaw.EmitFloatingPointDataProcessing2Source);
            Add("00011110001---------11----------", InstructionMnemonic.FCSEL, InstructionInfo.Single_precision, OpCodeFloatingPointConditionalSelect.Create, EmitRaw.EmitFloatingPointConditionalSelect);
            Add("00011110011---------11----------", InstructionMnemonic.FCSEL, InstructionInfo.Double_precision, OpCodeFloatingPointConditionalSelect.Create, EmitRaw.EmitFloatingPointConditionalSelect);
            Add("00011110001--------10000000-----", InstructionMnemonic.FMOV, InstructionInfo.Single_precision, OpCodeFloatingPointImmediate.Create, EmitRaw.EmitFloatingPointImmediate);
            Add("00011110011--------10000000-----", InstructionMnemonic.FMOV, InstructionInfo.Double_precision, OpCodeFloatingPointImmediate.Create, EmitRaw.EmitFloatingPointImmediate);
            Add("00011110001-----001000-----00000", InstructionMnemonic.FCMP, InstructionInfo.Single_precision, OpCodeFloatingPointCompare.Create, EmitRaw.EmitFloatingPointCompare);
            Add("00011110001-----001000-----01000", InstructionMnemonic.FCMP, InstructionInfo.Single_precision_zero, OpCodeFloatingPointCompare.Create, EmitRaw.EmitFloatingPointCompare);
            Add("00011110001-----001000-----10000", InstructionMnemonic.FCMPE, InstructionInfo.Single_precision, OpCodeFloatingPointCompare.Create, EmitRaw.EmitFloatingPointCompare);
            Add("00011110001-----001000-----11000", InstructionMnemonic.FCMPE, InstructionInfo.Single_precision_zero, OpCodeFloatingPointCompare.Create, EmitRaw.EmitFloatingPointCompare);
            Add("00011110011-----001000-----00000", InstructionMnemonic.FCMP, InstructionInfo.Double_precision, OpCodeFloatingPointCompare.Create, EmitRaw.EmitFloatingPointCompare);
            Add("00011110011-----001000-----01000", InstructionMnemonic.FCMP, InstructionInfo.Double_precision_zero, OpCodeFloatingPointCompare.Create, EmitRaw.EmitFloatingPointCompare);
            Add("00011110011-----001000-----10000", InstructionMnemonic.FCMPE, InstructionInfo.Double_precision, OpCodeFloatingPointCompare.Create, EmitRaw.EmitFloatingPointCompare);
            Add("00011110011-----001000-----11000", InstructionMnemonic.FCMPE, InstructionInfo.Double_precision_zero, OpCodeFloatingPointCompare.Create, EmitRaw.EmitFloatingPointCompare);
            Add("0001111000100000010000----------", InstructionMnemonic.FMOV, InstructionInfo.Single_precision, OpCodeFloatingPointDataProcessing1Source.Create, EmitRaw.EmitFloatingPointDataProcessing1Source);
            Add("0001111000100000110000----------", InstructionMnemonic.FABS, InstructionInfo.Single_precision, OpCodeFloatingPointDataProcessing1Source.Create, EmitRaw.EmitFloatingPointDataProcessing1Source);
            Add("0001111000100001010000----------", InstructionMnemonic.FNEG, InstructionInfo.Single_precision, OpCodeFloatingPointDataProcessing1Source.Create, EmitRaw.EmitFloatingPointDataProcessing1Source);
            Add("0001111000100001110000----------", InstructionMnemonic.FSQRT, InstructionInfo.Single_precision, OpCodeFloatingPointDataProcessing1Source.Create, EmitRaw.EmitFloatingPointDataProcessing1Source);
            Add("0001111000100010110000----------", InstructionMnemonic.FCVT, InstructionInfo.Single_precision_to_double_precision, OpCodeFloatingPointDataProcessing1Source.Create, EmitRaw.EmitFloatingPointDataProcessing1Source);
            Add("0001111000100011110000----------", InstructionMnemonic.FCVT, InstructionInfo.Single_precision_to_half_precision, OpCodeFloatingPointDataProcessing1Source.Create, EmitRaw.EmitFloatingPointDataProcessing1Source);
            Add("0001111000100100010000----------", InstructionMnemonic.FRINTN, InstructionInfo.Single_precision, OpCodeFloatingPointDataProcessing1Source.Create, EmitRaw.EmitFloatingPointDataProcessing1Source);
            Add("0001111000100100110000----------", InstructionMnemonic.FRINTP, InstructionInfo.Single_precision, OpCodeFloatingPointDataProcessing1Source.Create, EmitRaw.EmitFloatingPointDataProcessing1Source);
            Add("0001111000100101010000----------", InstructionMnemonic.FRINTM, InstructionInfo.Single_precision, OpCodeFloatingPointDataProcessing1Source.Create, EmitRaw.EmitFloatingPointDataProcessing1Source);
            Add("0001111000100101110000----------", InstructionMnemonic.FRINTZ, InstructionInfo.Single_precision, OpCodeFloatingPointDataProcessing1Source.Create, EmitRaw.EmitFloatingPointDataProcessing1Source);
            Add("0001111000100110010000----------", InstructionMnemonic.FRINTA, InstructionInfo.Single_precision, OpCodeFloatingPointDataProcessing1Source.Create, EmitRaw.EmitFloatingPointDataProcessing1Source);
            Add("0001111000100111010000----------", InstructionMnemonic.FRINTX, InstructionInfo.Single_precision, OpCodeFloatingPointDataProcessing1Source.Create, EmitRaw.EmitFloatingPointDataProcessing1Source);
            Add("0001111000100111110000----------", InstructionMnemonic.FRINTI, InstructionInfo.Single_precision, OpCodeFloatingPointDataProcessing1Source.Create, EmitRaw.EmitFloatingPointDataProcessing1Source);
            Add("0001111001100000010000----------", InstructionMnemonic.FMOV, InstructionInfo.Double_precision, OpCodeFloatingPointDataProcessing1Source.Create, EmitRaw.EmitFloatingPointDataProcessing1Source);
            Add("0001111001100000110000----------", InstructionMnemonic.FABS, InstructionInfo.Double_precision, OpCodeFloatingPointDataProcessing1Source.Create, EmitRaw.EmitFloatingPointDataProcessing1Source);
            Add("0001111001100001010000----------", InstructionMnemonic.FNEG, InstructionInfo.Double_precision, OpCodeFloatingPointDataProcessing1Source.Create, EmitRaw.EmitFloatingPointDataProcessing1Source);
            Add("0001111001100001110000----------", InstructionMnemonic.FSQRT, InstructionInfo.Double_precision, OpCodeFloatingPointDataProcessing1Source.Create, EmitRaw.EmitFloatingPointDataProcessing1Source);
            Add("0001111001100010010000----------", InstructionMnemonic.FCVT, InstructionInfo.Double_precision_to_single_precision, OpCodeFloatingPointDataProcessing1Source.Create, EmitRaw.EmitFloatingPointDataProcessing1Source);
            Add("0001111001100011110000----------", InstructionMnemonic.FCVT, InstructionInfo.Double_precision_to_half_precision, OpCodeFloatingPointDataProcessing1Source.Create, EmitRaw.EmitFloatingPointDataProcessing1Source);
            Add("0001111001100100010000----------", InstructionMnemonic.FRINTN, InstructionInfo.Double_precision, OpCodeFloatingPointDataProcessing1Source.Create, EmitRaw.EmitFloatingPointDataProcessing1Source);
            Add("0001111001100100110000----------", InstructionMnemonic.FRINTP, InstructionInfo.Double_precision, OpCodeFloatingPointDataProcessing1Source.Create, EmitRaw.EmitFloatingPointDataProcessing1Source);
            Add("0001111001100101010000----------", InstructionMnemonic.FRINTM, InstructionInfo.Double_precision, OpCodeFloatingPointDataProcessing1Source.Create, EmitRaw.EmitFloatingPointDataProcessing1Source);
            Add("0001111001100101110000----------", InstructionMnemonic.FRINTZ, InstructionInfo.Double_precision, OpCodeFloatingPointDataProcessing1Source.Create, EmitRaw.EmitFloatingPointDataProcessing1Source);
            Add("0001111001100110010000----------", InstructionMnemonic.FRINTA, InstructionInfo.Double_precision, OpCodeFloatingPointDataProcessing1Source.Create, EmitRaw.EmitFloatingPointDataProcessing1Source);
            Add("0001111001100111010000----------", InstructionMnemonic.FRINTX, InstructionInfo.Double_precision, OpCodeFloatingPointDataProcessing1Source.Create, EmitRaw.EmitFloatingPointDataProcessing1Source);
            Add("0001111001100111110000----------", InstructionMnemonic.FRINTI, InstructionInfo.Double_precision, OpCodeFloatingPointDataProcessing1Source.Create, EmitRaw.EmitFloatingPointDataProcessing1Source);
            Add("0001111011100010010000----------", InstructionMnemonic.FCVT, InstructionInfo.Half_precision_to_single_precision, OpCodeFloatingPointDataProcessing1Source.Create, EmitRaw.EmitFloatingPointDataProcessing1Source);
            Add("0001111011100010110000----------", InstructionMnemonic.FCVT, InstructionInfo.Half_precision_to_double_precision, OpCodeFloatingPointDataProcessing1Source.Create, EmitRaw.EmitFloatingPointDataProcessing1Source);
            Add("0001111000100000000000----------", InstructionMnemonic.FCVTNS, InstructionInfo.Single_precision_to_32_bit, OpCodeFloatingPointIntegerConversions.Create, EmitRaw.EmitFloatingPointIntegerConversions);
            Add("0001111000100001000000----------", InstructionMnemonic.FCVTNU, InstructionInfo.Single_precision_to_32_bit, OpCodeFloatingPointIntegerConversions.Create, EmitRaw.EmitFloatingPointIntegerConversions);
            Add("0001111000100010000000----------", InstructionMnemonic.SCVTF, InstructionInfo._32_bit_to_single_precision, OpCodeFloatingPointIntegerConversions.Create, EmitRaw.EmitFloatingPointIntegerConversions);
            Add("0001111000100011000000----------", InstructionMnemonic.UCVTF, InstructionInfo._32_bit_to_single_precision, OpCodeFloatingPointIntegerConversions.Create, EmitRaw.EmitFloatingPointIntegerConversions);
            Add("0001111000100100000000----------", InstructionMnemonic.FCVTAS, InstructionInfo.Single_precision_to_32_bit, OpCodeFloatingPointIntegerConversions.Create, EmitRaw.EmitFloatingPointIntegerConversions);
            Add("0001111000100101000000----------", InstructionMnemonic.FCVTAU, InstructionInfo.Single_precision_to_32_bit, OpCodeFloatingPointIntegerConversions.Create, EmitRaw.EmitFloatingPointIntegerConversions);
            Add("0001111000100110000000----------", InstructionMnemonic.FMOV, InstructionInfo.Single_precision_to_32_bit, OpCodeFloatingPointIntegerConversions.Create, EmitRaw.EmitFloatingPointIntegerConversions);
            Add("0001111000100111000000----------", InstructionMnemonic.FMOV, InstructionInfo._32_bit_to_single_precision, OpCodeFloatingPointIntegerConversions.Create, EmitRaw.EmitFloatingPointIntegerConversions);
            Add("0001111000101000000000----------", InstructionMnemonic.FCVTPS, InstructionInfo.Single_precision_to_32_bit, OpCodeFloatingPointIntegerConversions.Create, EmitRaw.EmitFloatingPointIntegerConversions);
            Add("0001111000101001000000----------", InstructionMnemonic.FCVTPU, InstructionInfo.Single_precision_to_32_bit, OpCodeFloatingPointIntegerConversions.Create, EmitRaw.EmitFloatingPointIntegerConversions);
            Add("0001111000110000000000----------", InstructionMnemonic.FCVTMS, InstructionInfo.Single_precision_to_32_bit, OpCodeFloatingPointIntegerConversions.Create, EmitRaw.EmitFloatingPointIntegerConversions);
            Add("0001111000110001000000----------", InstructionMnemonic.FCVTMU, InstructionInfo.Single_precision_to_32_bit, OpCodeFloatingPointIntegerConversions.Create, EmitRaw.EmitFloatingPointIntegerConversions);
            Add("0001111000111000000000----------", InstructionMnemonic.FCVTZS, InstructionInfo.Single_precision_to_32_bit, OpCodeFloatingPointIntegerConversions.Create, EmitRaw.EmitFloatingPointIntegerConversions);
            Add("0001111000111001000000----------", InstructionMnemonic.FCVTZU, InstructionInfo.Single_precision_to_32_bit, OpCodeFloatingPointIntegerConversions.Create, EmitRaw.EmitFloatingPointIntegerConversions);
            Add("0001111001100000000000----------", InstructionMnemonic.FCVTNS, InstructionInfo.Double_precision_to_32_bit, OpCodeFloatingPointIntegerConversions.Create, EmitRaw.EmitFloatingPointIntegerConversions);
            Add("0001111001100001000000----------", InstructionMnemonic.FCVTNU, InstructionInfo.Double_precision_to_32_bit, OpCodeFloatingPointIntegerConversions.Create, EmitRaw.EmitFloatingPointIntegerConversions);
            Add("0001111001100010000000----------", InstructionMnemonic.SCVTF, InstructionInfo._32_bit_to_double_precision, OpCodeFloatingPointIntegerConversions.Create, EmitRaw.EmitFloatingPointIntegerConversions);
            Add("0001111001100011000000----------", InstructionMnemonic.UCVTF, InstructionInfo._32_bit_to_double_precision, OpCodeFloatingPointIntegerConversions.Create, EmitRaw.EmitFloatingPointIntegerConversions);
            Add("0001111001100100000000----------", InstructionMnemonic.FCVTAS, InstructionInfo.Double_precision_to_32_bit, OpCodeFloatingPointIntegerConversions.Create, EmitRaw.EmitFloatingPointIntegerConversions);
            Add("0001111001100101000000----------", InstructionMnemonic.FCVTAU, InstructionInfo.Double_precision_to_32_bit, OpCodeFloatingPointIntegerConversions.Create, EmitRaw.EmitFloatingPointIntegerConversions);
            Add("0001111001101000000000----------", InstructionMnemonic.FCVTPS, InstructionInfo.Double_precision_to_32_bit, OpCodeFloatingPointIntegerConversions.Create, EmitRaw.EmitFloatingPointIntegerConversions);
            Add("0001111001101001000000----------", InstructionMnemonic.FCVTPU, InstructionInfo.Double_precision_to_32_bit, OpCodeFloatingPointIntegerConversions.Create, EmitRaw.EmitFloatingPointIntegerConversions);
            Add("0001111001110000000000----------", InstructionMnemonic.FCVTMS, InstructionInfo.Double_precision_to_32_bit, OpCodeFloatingPointIntegerConversions.Create, EmitRaw.EmitFloatingPointIntegerConversions);
            Add("0001111001110001000000----------", InstructionMnemonic.FCVTMU, InstructionInfo.Double_precision_to_32_bit, OpCodeFloatingPointIntegerConversions.Create, EmitRaw.EmitFloatingPointIntegerConversions);
            Add("0001111001111000000000----------", InstructionMnemonic.FCVTZS, InstructionInfo.Double_precision_to_32_bit, OpCodeFloatingPointIntegerConversions.Create, EmitRaw.EmitFloatingPointIntegerConversions);
            Add("0001111001111001000000----------", InstructionMnemonic.FCVTZU, InstructionInfo.Double_precision_to_32_bit, OpCodeFloatingPointIntegerConversions.Create, EmitRaw.EmitFloatingPointIntegerConversions);
            Add("1001111000100000000000----------", InstructionMnemonic.FCVTNS, InstructionInfo.Single_precision_to_64_bit, OpCodeFloatingPointIntegerConversions.Create, EmitRaw.EmitFloatingPointIntegerConversions);
            Add("1001111000100001000000----------", InstructionMnemonic.FCVTNU, InstructionInfo.Single_precision_to_64_bit, OpCodeFloatingPointIntegerConversions.Create, EmitRaw.EmitFloatingPointIntegerConversions);
            Add("1001111000100010000000----------", InstructionMnemonic.SCVTF, InstructionInfo._64_bit_to_single_precision, OpCodeFloatingPointIntegerConversions.Create, EmitRaw.EmitFloatingPointIntegerConversions);
            Add("1001111000100011000000----------", InstructionMnemonic.UCVTF, InstructionInfo._64_bit_to_single_precision, OpCodeFloatingPointIntegerConversions.Create, EmitRaw.EmitFloatingPointIntegerConversions);
            Add("1001111000100100000000----------", InstructionMnemonic.FCVTAS, InstructionInfo.Single_precision_to_64_bit, OpCodeFloatingPointIntegerConversions.Create, EmitRaw.EmitFloatingPointIntegerConversions);
            Add("1001111000100101000000----------", InstructionMnemonic.FCVTAU, InstructionInfo.Single_precision_to_64_bit, OpCodeFloatingPointIntegerConversions.Create, EmitRaw.EmitFloatingPointIntegerConversions);
            Add("1001111000101000000000----------", InstructionMnemonic.FCVTPS, InstructionInfo.Single_precision_to_64_bit, OpCodeFloatingPointIntegerConversions.Create, EmitRaw.EmitFloatingPointIntegerConversions);
            Add("1001111000101001000000----------", InstructionMnemonic.FCVTPU, InstructionInfo.Single_precision_to_64_bit, OpCodeFloatingPointIntegerConversions.Create, EmitRaw.EmitFloatingPointIntegerConversions);
            Add("1001111000110000000000----------", InstructionMnemonic.FCVTMS, InstructionInfo.Single_precision_to_64_bit, OpCodeFloatingPointIntegerConversions.Create, EmitRaw.EmitFloatingPointIntegerConversions);
            Add("1001111000110001000000----------", InstructionMnemonic.FCVTMU, InstructionInfo.Single_precision_to_64_bit, OpCodeFloatingPointIntegerConversions.Create, EmitRaw.EmitFloatingPointIntegerConversions);
            Add("1001111000111000000000----------", InstructionMnemonic.FCVTZS, InstructionInfo.Single_precision_to_64_bit, OpCodeFloatingPointIntegerConversions.Create, EmitRaw.EmitFloatingPointIntegerConversions);
            Add("1001111000111001000000----------", InstructionMnemonic.FCVTZU, InstructionInfo.Single_precision_to_64_bit, OpCodeFloatingPointIntegerConversions.Create, EmitRaw.EmitFloatingPointIntegerConversions);
            Add("1001111001100000000000----------", InstructionMnemonic.FCVTNS, InstructionInfo.Double_precision_to_64_bit, OpCodeFloatingPointIntegerConversions.Create, EmitRaw.EmitFloatingPointIntegerConversions);
            Add("1001111001100001000000----------", InstructionMnemonic.FCVTNU, InstructionInfo.Double_precision_to_64_bit, OpCodeFloatingPointIntegerConversions.Create, EmitRaw.EmitFloatingPointIntegerConversions);
            Add("1001111001100010000000----------", InstructionMnemonic.SCVTF, InstructionInfo._64_bit_to_double_precision, OpCodeFloatingPointIntegerConversions.Create, EmitRaw.EmitFloatingPointIntegerConversions);
            Add("1001111001100011000000----------", InstructionMnemonic.UCVTF, InstructionInfo._64_bit_to_double_precision, OpCodeFloatingPointIntegerConversions.Create, EmitRaw.EmitFloatingPointIntegerConversions);
            Add("1001111001100100000000----------", InstructionMnemonic.FCVTAS, InstructionInfo.Double_precision_to_64_bit, OpCodeFloatingPointIntegerConversions.Create, EmitRaw.EmitFloatingPointIntegerConversions);
            Add("1001111001100101000000----------", InstructionMnemonic.FCVTAU, InstructionInfo.Double_precision_to_64_bit, OpCodeFloatingPointIntegerConversions.Create, EmitRaw.EmitFloatingPointIntegerConversions);
            Add("1001111001100110000000----------", InstructionMnemonic.FMOV, InstructionInfo.Double_precision_to_64_bit, OpCodeFloatingPointIntegerConversions.Create, EmitRaw.EmitFloatingPointIntegerConversions);
            Add("1001111001100111000000----------", InstructionMnemonic.FMOV, InstructionInfo._64_bit_to_double_precision, OpCodeFloatingPointIntegerConversions.Create, EmitRaw.EmitFloatingPointIntegerConversions);
            Add("1001111001101000000000----------", InstructionMnemonic.FCVTPS, InstructionInfo.Double_precision_to_64_bit, OpCodeFloatingPointIntegerConversions.Create, EmitRaw.EmitFloatingPointIntegerConversions);
            Add("1001111001101001000000----------", InstructionMnemonic.FCVTPU, InstructionInfo.Double_precision_to_64_bit, OpCodeFloatingPointIntegerConversions.Create, EmitRaw.EmitFloatingPointIntegerConversions);
            Add("1001111001110000000000----------", InstructionMnemonic.FCVTMS, InstructionInfo.Double_precision_to_64_bit, OpCodeFloatingPointIntegerConversions.Create, EmitRaw.EmitFloatingPointIntegerConversions);
            Add("1001111001110001000000----------", InstructionMnemonic.FCVTMU, InstructionInfo.Double_precision_to_64_bit, OpCodeFloatingPointIntegerConversions.Create, EmitRaw.EmitFloatingPointIntegerConversions);
            Add("1001111001111000000000----------", InstructionMnemonic.FCVTZS, InstructionInfo.Double_precision_to_64_bit, OpCodeFloatingPointIntegerConversions.Create, EmitRaw.EmitFloatingPointIntegerConversions);
            Add("1001111001111001000000----------", InstructionMnemonic.FCVTZU, InstructionInfo.Double_precision_to_64_bit, OpCodeFloatingPointIntegerConversions.Create, EmitRaw.EmitFloatingPointIntegerConversions);
            Add("1001111010101110000000----------", InstructionMnemonic.FMOV, InstructionInfo.Top_half_of_128_bit_to_64_bit, OpCodeFloatingPointIntegerConversions.Create, EmitRaw.EmitFloatingPointIntegerConversions);
            Add("1001111010101111000000----------", InstructionMnemonic.FMOV, InstructionInfo._64_bit_to_top_half_of_128_bit, OpCodeFloatingPointIntegerConversions.Create, EmitRaw.EmitFloatingPointIntegerConversions);
            Add("00011111000-----0---------------", InstructionMnemonic.FMADD, InstructionInfo.Single_precision, OpCodeFloatingPointDataProcessing3Source.Create, EmitRaw.EmitFloatingPointDataProcessing3Source);
            Add("00011111000-----1---------------", InstructionMnemonic.FMSUB, InstructionInfo.Single_precision, OpCodeFloatingPointDataProcessing3Source.Create, EmitRaw.EmitFloatingPointDataProcessing3Source);
            Add("00011111001-----0---------------", InstructionMnemonic.FNMADD, InstructionInfo.Single_precision, OpCodeFloatingPointDataProcessing3Source.Create, EmitRaw.EmitFloatingPointDataProcessing3Source);
            Add("00011111001-----1---------------", InstructionMnemonic.FNMSUB, InstructionInfo.Single_precision, OpCodeFloatingPointDataProcessing3Source.Create, EmitRaw.EmitFloatingPointDataProcessing3Source);
            Add("00011111010-----0---------------", InstructionMnemonic.FMADD, InstructionInfo.Double_precision, OpCodeFloatingPointDataProcessing3Source.Create, EmitRaw.EmitFloatingPointDataProcessing3Source);
            Add("00011111010-----1---------------", InstructionMnemonic.FMSUB, InstructionInfo.Double_precision, OpCodeFloatingPointDataProcessing3Source.Create, EmitRaw.EmitFloatingPointDataProcessing3Source);
            Add("00011111011-----0---------------", InstructionMnemonic.FNMADD, InstructionInfo.Double_precision, OpCodeFloatingPointDataProcessing3Source.Create, EmitRaw.EmitFloatingPointDataProcessing3Source);
            Add("00011111011-----1---------------", InstructionMnemonic.FNMSUB, InstructionInfo.Double_precision, OpCodeFloatingPointDataProcessing3Source.Create, EmitRaw.EmitFloatingPointDataProcessing3Source);
            Add("01011110--1-----000011----------", InstructionMnemonic.SQADD, InstructionInfo.Scalar, OpCodeAdvsimdScalarThreeSame.Create, EmitRaw.EmitAdvsimdScalarThreeSame);
            Add("01011110--1-----001011----------", InstructionMnemonic.SQSUB, InstructionInfo.Scalar, OpCodeAdvsimdScalarThreeSame.Create, EmitRaw.EmitAdvsimdScalarThreeSame);
            Add("01011110--1-----001101----------", InstructionMnemonic.CMGT, InstructionInfo.Scalar, OpCodeAdvsimdScalarThreeSame.Create, EmitRaw.EmitAdvsimdScalarThreeSame);
            Add("01011110--1-----001111----------", InstructionMnemonic.CMGE, InstructionInfo.Scalar, OpCodeAdvsimdScalarThreeSame.Create, EmitRaw.EmitAdvsimdScalarThreeSame);
            Add("01011110--1-----010001----------", InstructionMnemonic.SSHL, InstructionInfo.Scalar, OpCodeAdvsimdScalarThreeSame.Create, EmitRaw.EmitAdvsimdScalarThreeSame);
            Add("01011110--1-----010011----------", InstructionMnemonic.SQSHL, InstructionInfo.Scalar, OpCodeAdvsimdScalarThreeSame.Create, EmitRaw.EmitAdvsimdScalarThreeSame);
            Add("01011110--1-----010101----------", InstructionMnemonic.SRSHL, InstructionInfo.Scalar, OpCodeAdvsimdScalarThreeSame.Create, EmitRaw.EmitAdvsimdScalarThreeSame);
            Add("01011110--1-----010111----------", InstructionMnemonic.SQRSHL, InstructionInfo.Scalar, OpCodeAdvsimdScalarThreeSame.Create, EmitRaw.EmitAdvsimdScalarThreeSame);
            Add("01011110--1-----100001----------", InstructionMnemonic.ADD, InstructionInfo.Scalar, OpCodeAdvsimdScalarThreeSame.Create, EmitRaw.EmitAdvsimdScalarThreeSame);
            Add("01011110--1-----100011----------", InstructionMnemonic.CMTST, InstructionInfo.Scalar, OpCodeAdvsimdScalarThreeSame.Create, EmitRaw.EmitAdvsimdScalarThreeSame);
            Add("01011110--1-----101101----------", InstructionMnemonic.SQDMULH, InstructionInfo.Scalar, OpCodeAdvsimdScalarThreeSame.Create, EmitRaw.EmitAdvsimdScalarThreeSame);
            Add("010111100-1-----110111----------", InstructionMnemonic.FMULX, InstructionInfo.Scalar, OpCodeAdvsimdScalarThreeSame.Create, EmitRaw.EmitAdvsimdScalarThreeSame);
            Add("010111100-1-----111001----------", InstructionMnemonic.FCMEQ, InstructionInfo.Scalar, OpCodeAdvsimdScalarThreeSame.Create, EmitRaw.EmitAdvsimdScalarThreeSame);
            Add("010111100-1-----111111----------", InstructionMnemonic.FRECPS, InstructionInfo.Scalar, OpCodeAdvsimdScalarThreeSame.Create, EmitRaw.EmitAdvsimdScalarThreeSame);
            Add("010111101-1-----111111----------", InstructionMnemonic.FRSQRTS, InstructionInfo.Scalar, OpCodeAdvsimdScalarThreeSame.Create, EmitRaw.EmitAdvsimdScalarThreeSame);
            Add("01111110--1-----000011----------", InstructionMnemonic.UQADD, InstructionInfo.Scalar, OpCodeAdvsimdScalarThreeSame.Create, EmitRaw.EmitAdvsimdScalarThreeSame);
            Add("01111110--1-----001011----------", InstructionMnemonic.UQSUB, InstructionInfo.Scalar, OpCodeAdvsimdScalarThreeSame.Create, EmitRaw.EmitAdvsimdScalarThreeSame);
            Add("01111110--1-----001101----------", InstructionMnemonic.CMHI, InstructionInfo.Scalar, OpCodeAdvsimdScalarThreeSame.Create, EmitRaw.EmitAdvsimdScalarThreeSame);
            Add("01111110--1-----001111----------", InstructionMnemonic.CMHS, InstructionInfo.Scalar, OpCodeAdvsimdScalarThreeSame.Create, EmitRaw.EmitAdvsimdScalarThreeSame);
            Add("01111110--1-----010001----------", InstructionMnemonic.USHL, InstructionInfo.Scalar, OpCodeAdvsimdScalarThreeSame.Create, EmitRaw.EmitAdvsimdScalarThreeSame);
            Add("01111110--1-----010011----------", InstructionMnemonic.UQSHL, InstructionInfo.Scalar, OpCodeAdvsimdScalarThreeSame.Create, EmitRaw.EmitAdvsimdScalarThreeSame);
            Add("01111110--1-----010101----------", InstructionMnemonic.URSHL, InstructionInfo.Scalar, OpCodeAdvsimdScalarThreeSame.Create, EmitRaw.EmitAdvsimdScalarThreeSame);
            Add("01111110--1-----010111----------", InstructionMnemonic.UQRSHL, InstructionInfo.Scalar, OpCodeAdvsimdScalarThreeSame.Create, EmitRaw.EmitAdvsimdScalarThreeSame);
            Add("01111110--1-----100001----------", InstructionMnemonic.SUB, InstructionInfo.Scalar, OpCodeAdvsimdScalarThreeSame.Create, EmitRaw.EmitAdvsimdScalarThreeSame);
            Add("01111110--1-----100011----------", InstructionMnemonic.CMEQ, InstructionInfo.Scalar, OpCodeAdvsimdScalarThreeSame.Create, EmitRaw.EmitAdvsimdScalarThreeSame);
            Add("01111110--1-----101101----------", InstructionMnemonic.SQRDMULH, InstructionInfo.Scalar, OpCodeAdvsimdScalarThreeSame.Create, EmitRaw.EmitAdvsimdScalarThreeSame);
            Add("011111100-1-----111001----------", InstructionMnemonic.FCMGE, InstructionInfo.Scalar, OpCodeAdvsimdScalarThreeSame.Create, EmitRaw.EmitAdvsimdScalarThreeSame);
            Add("011111100-1-----111011----------", InstructionMnemonic.FACGE, InstructionInfo.Scalar, OpCodeAdvsimdScalarThreeSame.Create, EmitRaw.EmitAdvsimdScalarThreeSame);
            Add("011111101-1-----110101----------", InstructionMnemonic.FABD, InstructionInfo.Scalar, OpCodeAdvsimdScalarThreeSame.Create, EmitRaw.EmitAdvsimdScalarThreeSame);
            Add("011111101-1-----111001----------", InstructionMnemonic.FCMGT, InstructionInfo.Scalar, OpCodeAdvsimdScalarThreeSame.Create, EmitRaw.EmitAdvsimdScalarThreeSame);
            Add("011111101-1-----111011----------", InstructionMnemonic.FACGT, InstructionInfo.Scalar, OpCodeAdvsimdScalarThreeSame.Create, EmitRaw.EmitAdvsimdScalarThreeSame);
            Add("01011110--1-----100100----------", InstructionMnemonic.SQDMLAL, InstructionInfo.Scalar, OpCodeAdvsimdScalarThreeDifferent.Create, EmitRaw.EmitAdvsimdScalarThreeDifferent);
            Add("01011110--1-----100100----------", InstructionMnemonic.SQDMLAL2, InstructionInfo.Scalar, OpCodeAdvsimdScalarThreeDifferent.Create, EmitRaw.EmitAdvsimdScalarThreeDifferent);
            Add("01011110--1-----101100----------", InstructionMnemonic.SQDMLSL, InstructionInfo.Scalar, OpCodeAdvsimdScalarThreeDifferent.Create, EmitRaw.EmitAdvsimdScalarThreeDifferent);
            Add("01011110--1-----101100----------", InstructionMnemonic.SQDMLSL2, InstructionInfo.Scalar, OpCodeAdvsimdScalarThreeDifferent.Create, EmitRaw.EmitAdvsimdScalarThreeDifferent);
            Add("01011110--1-----110100----------", InstructionMnemonic.SQDMULL, InstructionInfo.Scalar, OpCodeAdvsimdScalarThreeDifferent.Create, EmitRaw.EmitAdvsimdScalarThreeDifferent);
            Add("01011110--1-----110100----------", InstructionMnemonic.SQDMULL2, InstructionInfo.Scalar, OpCodeAdvsimdScalarThreeDifferent.Create, EmitRaw.EmitAdvsimdScalarThreeDifferent);
            Add("01011110--100000001110----------", InstructionMnemonic.SUQADD, InstructionInfo.Scalar, OpCodeAdvsimdScalarTwoRegMisc.Create, EmitRaw.EmitAdvsimdScalarTwoRegMisc);
            Add("01011110--100000011110----------", InstructionMnemonic.SQABS, InstructionInfo.Scalar, OpCodeAdvsimdScalarTwoRegMisc.Create, EmitRaw.EmitAdvsimdScalarTwoRegMisc);
            Add("01011110--100000100010----------", InstructionMnemonic.CMGT, InstructionInfo.Scalar, OpCodeAdvsimdScalarTwoRegMisc.Create, EmitRaw.EmitAdvsimdScalarTwoRegMisc);
            Add("01011110--100000100110----------", InstructionMnemonic.CMEQ, InstructionInfo.Scalar, OpCodeAdvsimdScalarTwoRegMisc.Create, EmitRaw.EmitAdvsimdScalarTwoRegMisc);
            Add("01011110--100000101010----------", InstructionMnemonic.CMLT, InstructionInfo.Scalar, OpCodeAdvsimdScalarTwoRegMisc.Create, EmitRaw.EmitAdvsimdScalarTwoRegMisc);
            Add("01011110--100000101110----------", InstructionMnemonic.ABS, InstructionInfo.Scalar, OpCodeAdvsimdScalarTwoRegMisc.Create, EmitRaw.EmitAdvsimdScalarTwoRegMisc);
            Add("01011110--100001010010----------", InstructionMnemonic.SQXTN, InstructionInfo.Scalar, OpCodeAdvsimdScalarTwoRegMisc.Create, EmitRaw.EmitAdvsimdScalarTwoRegMisc);
            Add("01011110--100001010010----------", InstructionMnemonic.SQXTN2, InstructionInfo.Scalar, OpCodeAdvsimdScalarTwoRegMisc.Create, EmitRaw.EmitAdvsimdScalarTwoRegMisc);
            Add("010111100-100001101010----------", InstructionMnemonic.FCVTNS, InstructionInfo.Scalar, OpCodeAdvsimdScalarTwoRegMisc.Create, EmitRaw.EmitAdvsimdScalarTwoRegMisc);
            Add("010111100-100001101110----------", InstructionMnemonic.FCVTMS, InstructionInfo.Scalar, OpCodeAdvsimdScalarTwoRegMisc.Create, EmitRaw.EmitAdvsimdScalarTwoRegMisc);
            Add("010111100-100001110010----------", InstructionMnemonic.FCVTAS, InstructionInfo.Scalar, OpCodeAdvsimdScalarTwoRegMisc.Create, EmitRaw.EmitAdvsimdScalarTwoRegMisc);
            Add("010111100-100001110110----------", InstructionMnemonic.SCVTF, InstructionInfo.Scalar, OpCodeAdvsimdScalarTwoRegMisc.Create, EmitRaw.EmitAdvsimdScalarTwoRegMisc);
            Add("010111101-100000110010----------", InstructionMnemonic.FCMGT, InstructionInfo.Scalar, OpCodeAdvsimdScalarTwoRegMisc.Create, EmitRaw.EmitAdvsimdScalarTwoRegMisc);
            Add("010111101-100000110110----------", InstructionMnemonic.FCMEQ, InstructionInfo.Scalar, OpCodeAdvsimdScalarTwoRegMisc.Create, EmitRaw.EmitAdvsimdScalarTwoRegMisc);
            Add("010111101-100000111010----------", InstructionMnemonic.FCMLT, InstructionInfo.Scalar, OpCodeAdvsimdScalarTwoRegMisc.Create, EmitRaw.EmitAdvsimdScalarTwoRegMisc);
            Add("010111101-100001101010----------", InstructionMnemonic.FCVTPS, InstructionInfo.Scalar, OpCodeAdvsimdScalarTwoRegMisc.Create, EmitRaw.EmitAdvsimdScalarTwoRegMisc);
            Add("010111101-100001101110----------", InstructionMnemonic.FCVTZS, InstructionInfo.Scalar, OpCodeAdvsimdScalarTwoRegMisc.Create, EmitRaw.EmitAdvsimdScalarTwoRegMisc);
            Add("010111101-100001110110----------", InstructionMnemonic.FRECPE, InstructionInfo.Scalar, OpCodeAdvsimdScalarTwoRegMisc.Create, EmitRaw.EmitAdvsimdScalarTwoRegMisc);
            Add("010111101-100001111110----------", InstructionMnemonic.FRECPX, InstructionInfo.NULL, OpCodeAdvsimdScalarTwoRegMisc.Create, EmitRaw.EmitAdvsimdScalarTwoRegMisc);
            Add("01111110--100000001110----------", InstructionMnemonic.USQADD, InstructionInfo.Scalar, OpCodeAdvsimdScalarTwoRegMisc.Create, EmitRaw.EmitAdvsimdScalarTwoRegMisc);
            Add("01111110--100000011110----------", InstructionMnemonic.SQNEG, InstructionInfo.Scalar, OpCodeAdvsimdScalarTwoRegMisc.Create, EmitRaw.EmitAdvsimdScalarTwoRegMisc);
            Add("01111110--100000100010----------", InstructionMnemonic.CMGE, InstructionInfo.Scalar, OpCodeAdvsimdScalarTwoRegMisc.Create, EmitRaw.EmitAdvsimdScalarTwoRegMisc);
            Add("01111110--100000100110----------", InstructionMnemonic.CMLE, InstructionInfo.Scalar, OpCodeAdvsimdScalarTwoRegMisc.Create, EmitRaw.EmitAdvsimdScalarTwoRegMisc);
            Add("01111110--100000101110----------", InstructionMnemonic.NEG, InstructionInfo.Scalar, OpCodeAdvsimdScalarTwoRegMisc.Create, EmitRaw.EmitAdvsimdScalarTwoRegMisc);
            Add("01111110--100001001010----------", InstructionMnemonic.SQXTUN, InstructionInfo.Scalar, OpCodeAdvsimdScalarTwoRegMisc.Create, EmitRaw.EmitAdvsimdScalarTwoRegMisc);
            Add("01111110--100001001010----------", InstructionMnemonic.SQXTUN2, InstructionInfo.Scalar, OpCodeAdvsimdScalarTwoRegMisc.Create, EmitRaw.EmitAdvsimdScalarTwoRegMisc);
            Add("01111110--100001010010----------", InstructionMnemonic.UQXTN, InstructionInfo.Scalar, OpCodeAdvsimdScalarTwoRegMisc.Create, EmitRaw.EmitAdvsimdScalarTwoRegMisc);
            Add("01111110--100001010010----------", InstructionMnemonic.UQXTN2, InstructionInfo.Scalar, OpCodeAdvsimdScalarTwoRegMisc.Create, EmitRaw.EmitAdvsimdScalarTwoRegMisc);
            Add("011111100-100001011010----------", InstructionMnemonic.FCVTXN, InstructionInfo.Scalar, OpCodeAdvsimdScalarTwoRegMisc.Create, EmitRaw.EmitAdvsimdScalarTwoRegMisc);
            Add("011111100-100001011010----------", InstructionMnemonic.FCVTXN2, InstructionInfo.Scalar, OpCodeAdvsimdScalarTwoRegMisc.Create, EmitRaw.EmitAdvsimdScalarTwoRegMisc);
            Add("011111100-100001101010----------", InstructionMnemonic.FCVTNU, InstructionInfo.Scalar, OpCodeAdvsimdScalarTwoRegMisc.Create, EmitRaw.EmitAdvsimdScalarTwoRegMisc);
            Add("011111100-100001101110----------", InstructionMnemonic.FCVTMU, InstructionInfo.Scalar, OpCodeAdvsimdScalarTwoRegMisc.Create, EmitRaw.EmitAdvsimdScalarTwoRegMisc);
            Add("011111100-100001110010----------", InstructionMnemonic.FCVTAU, InstructionInfo.Scalar, OpCodeAdvsimdScalarTwoRegMisc.Create, EmitRaw.EmitAdvsimdScalarTwoRegMisc);
            Add("011111100-100001110110----------", InstructionMnemonic.UCVTF, InstructionInfo.Scalar, OpCodeAdvsimdScalarTwoRegMisc.Create, EmitRaw.EmitAdvsimdScalarTwoRegMisc);
            Add("011111101-100000110010----------", InstructionMnemonic.FCMGE, InstructionInfo.Scalar, OpCodeAdvsimdScalarTwoRegMisc.Create, EmitRaw.EmitAdvsimdScalarTwoRegMisc);
            Add("011111101-100000110110----------", InstructionMnemonic.FCMLE, InstructionInfo.Scalar, OpCodeAdvsimdScalarTwoRegMisc.Create, EmitRaw.EmitAdvsimdScalarTwoRegMisc);
            Add("011111101-100001101010----------", InstructionMnemonic.FCVTPU, InstructionInfo.Scalar, OpCodeAdvsimdScalarTwoRegMisc.Create, EmitRaw.EmitAdvsimdScalarTwoRegMisc);
            Add("011111101-100001101110----------", InstructionMnemonic.FCVTZU, InstructionInfo.Scalar, OpCodeAdvsimdScalarTwoRegMisc.Create, EmitRaw.EmitAdvsimdScalarTwoRegMisc);
            Add("011111101-100001110110----------", InstructionMnemonic.FRSQRTE, InstructionInfo.Scalar, OpCodeAdvsimdScalarTwoRegMisc.Create, EmitRaw.EmitAdvsimdScalarTwoRegMisc);
            Add("01011110--110001101110----------", InstructionMnemonic.ADDP, InstructionInfo.NULL, OpCodeAdvsimdScalarPairwise.Create, EmitRaw.EmitAdvsimdScalarPairwise);
            Add("011111100-110000110010----------", InstructionMnemonic.FMAXNMP, InstructionInfo.NULL, OpCodeAdvsimdScalarPairwise.Create, EmitRaw.EmitAdvsimdScalarPairwise);
            Add("011111100-110000110110----------", InstructionMnemonic.FADDP, InstructionInfo.NULL, OpCodeAdvsimdScalarPairwise.Create, EmitRaw.EmitAdvsimdScalarPairwise);
            Add("011111100-110000111110----------", InstructionMnemonic.FMAXP, InstructionInfo.NULL, OpCodeAdvsimdScalarPairwise.Create, EmitRaw.EmitAdvsimdScalarPairwise);
            Add("011111101-110000110010----------", InstructionMnemonic.FMINNMP, InstructionInfo.NULL, OpCodeAdvsimdScalarPairwise.Create, EmitRaw.EmitAdvsimdScalarPairwise);
            Add("011111101-110000111110----------", InstructionMnemonic.FMINP, InstructionInfo.NULL, OpCodeAdvsimdScalarPairwise.Create, EmitRaw.EmitAdvsimdScalarPairwise);
            Add("01011110000-----000001----------", InstructionMnemonic.DUP, InstructionInfo.Scalar, OpCodeAdvsimdScalarCopy.Create, EmitRaw.EmitAdvsimdScalarCopy);
            Add("01011111--------0011-0----------", InstructionMnemonic.SQDMLAL, InstructionInfo.Scalar, OpCodeAdvsimdScalarXIndexedElement.Create, EmitRaw.EmitAdvsimdScalarXIndexedElement);
            Add("01011111--------0011-0----------", InstructionMnemonic.SQDMLAL2, InstructionInfo.Scalar, OpCodeAdvsimdScalarXIndexedElement.Create, EmitRaw.EmitAdvsimdScalarXIndexedElement);
            Add("01011111--------0111-0----------", InstructionMnemonic.SQDMLSL, InstructionInfo.Scalar, OpCodeAdvsimdScalarXIndexedElement.Create, EmitRaw.EmitAdvsimdScalarXIndexedElement);
            Add("01011111--------0111-0----------", InstructionMnemonic.SQDMLSL2, InstructionInfo.Scalar, OpCodeAdvsimdScalarXIndexedElement.Create, EmitRaw.EmitAdvsimdScalarXIndexedElement);
            Add("01011111--------1011-0----------", InstructionMnemonic.SQDMULL, InstructionInfo.Scalar, OpCodeAdvsimdScalarXIndexedElement.Create, EmitRaw.EmitAdvsimdScalarXIndexedElement);
            Add("01011111--------1011-0----------", InstructionMnemonic.SQDMULL2, InstructionInfo.Scalar, OpCodeAdvsimdScalarXIndexedElement.Create, EmitRaw.EmitAdvsimdScalarXIndexedElement);
            Add("01011111--------1100-0----------", InstructionMnemonic.SQDMULH, InstructionInfo.Scalar, OpCodeAdvsimdScalarXIndexedElement.Create, EmitRaw.EmitAdvsimdScalarXIndexedElement);
            Add("01011111--------1101-0----------", InstructionMnemonic.SQRDMULH, InstructionInfo.Scalar, OpCodeAdvsimdScalarXIndexedElement.Create, EmitRaw.EmitAdvsimdScalarXIndexedElement);
            Add("010111111-------0001-0----------", InstructionMnemonic.FMLA, InstructionInfo.Scalar, OpCodeAdvsimdScalarXIndexedElement.Create, EmitRaw.EmitAdvsimdScalarXIndexedElement);
            Add("010111111-------0101-0----------", InstructionMnemonic.FMLS, InstructionInfo.Scalar, OpCodeAdvsimdScalarXIndexedElement.Create, EmitRaw.EmitAdvsimdScalarXIndexedElement);
            Add("010111111-------1001-0----------", InstructionMnemonic.FMUL, InstructionInfo.Scalar, OpCodeAdvsimdScalarXIndexedElement.Create, EmitRaw.EmitAdvsimdScalarXIndexedElement);
            Add("011111111-------1001-0----------", InstructionMnemonic.FMULX, InstructionInfo.Scalar, OpCodeAdvsimdScalarXIndexedElement.Create, EmitRaw.EmitAdvsimdScalarXIndexedElement);
            Add("010111110-------000001----------", InstructionMnemonic.SSHR, InstructionInfo.Scalar, OpCodeAdvsimdScalarShiftByImmediate.Create, EmitRaw.EmitAdvsimdScalarShiftByImmediate);
            Add("010111110-------000101----------", InstructionMnemonic.SSRA, InstructionInfo.Scalar, OpCodeAdvsimdScalarShiftByImmediate.Create, EmitRaw.EmitAdvsimdScalarShiftByImmediate);
            Add("010111110-------001001----------", InstructionMnemonic.SRSHR, InstructionInfo.Scalar, OpCodeAdvsimdScalarShiftByImmediate.Create, EmitRaw.EmitAdvsimdScalarShiftByImmediate);
            Add("010111110-------001101----------", InstructionMnemonic.SRSRA, InstructionInfo.Scalar, OpCodeAdvsimdScalarShiftByImmediate.Create, EmitRaw.EmitAdvsimdScalarShiftByImmediate);
            Add("010111110-------010101----------", InstructionMnemonic.SHL, InstructionInfo.Scalar, OpCodeAdvsimdScalarShiftByImmediate.Create, EmitRaw.EmitAdvsimdScalarShiftByImmediate);
            Add("010111110-------011101----------", InstructionMnemonic.SQSHL, InstructionInfo.Scalar, OpCodeAdvsimdScalarShiftByImmediate.Create, EmitRaw.EmitAdvsimdScalarShiftByImmediate);
            Add("010111110-------100101----------", InstructionMnemonic.SQSHRN, InstructionInfo.Scalar, OpCodeAdvsimdScalarShiftByImmediate.Create, EmitRaw.EmitAdvsimdScalarShiftByImmediate);
            Add("010111110-------100101----------", InstructionMnemonic.SQSHRN2, InstructionInfo.Scalar, OpCodeAdvsimdScalarShiftByImmediate.Create, EmitRaw.EmitAdvsimdScalarShiftByImmediate);
            Add("010111110-------100111----------", InstructionMnemonic.SQRSHRN, InstructionInfo.Scalar, OpCodeAdvsimdScalarShiftByImmediate.Create, EmitRaw.EmitAdvsimdScalarShiftByImmediate);
            Add("010111110-------100111----------", InstructionMnemonic.SQRSHRN2, InstructionInfo.Scalar, OpCodeAdvsimdScalarShiftByImmediate.Create, EmitRaw.EmitAdvsimdScalarShiftByImmediate);
            Add("010111110-------111001----------", InstructionMnemonic.SCVTF, InstructionInfo.Scalar, OpCodeAdvsimdScalarShiftByImmediate.Create, EmitRaw.EmitAdvsimdScalarShiftByImmediate);
            Add("010111110-------111111----------", InstructionMnemonic.FCVTZS, InstructionInfo.Scalar, OpCodeAdvsimdScalarShiftByImmediate.Create, EmitRaw.EmitAdvsimdScalarShiftByImmediate);
            Add("011111110-------000001----------", InstructionMnemonic.USHR, InstructionInfo.Scalar, OpCodeAdvsimdScalarShiftByImmediate.Create, EmitRaw.EmitAdvsimdScalarShiftByImmediate);
            Add("011111110-------000101----------", InstructionMnemonic.USRA, InstructionInfo.Scalar, OpCodeAdvsimdScalarShiftByImmediate.Create, EmitRaw.EmitAdvsimdScalarShiftByImmediate);
            Add("011111110-------001001----------", InstructionMnemonic.URSHR, InstructionInfo.Scalar, OpCodeAdvsimdScalarShiftByImmediate.Create, EmitRaw.EmitAdvsimdScalarShiftByImmediate);
            Add("011111110-------001101----------", InstructionMnemonic.URSRA, InstructionInfo.Scalar, OpCodeAdvsimdScalarShiftByImmediate.Create, EmitRaw.EmitAdvsimdScalarShiftByImmediate);
            Add("011111110-------010001----------", InstructionMnemonic.SRI, InstructionInfo.Scalar, OpCodeAdvsimdScalarShiftByImmediate.Create, EmitRaw.EmitAdvsimdScalarShiftByImmediate);
            Add("011111110-------010101----------", InstructionMnemonic.SLI, InstructionInfo.Scalar, OpCodeAdvsimdScalarShiftByImmediate.Create, EmitRaw.EmitAdvsimdScalarShiftByImmediate);
            Add("011111110-------011001----------", InstructionMnemonic.SQSHLU, InstructionInfo.Scalar, OpCodeAdvsimdScalarShiftByImmediate.Create, EmitRaw.EmitAdvsimdScalarShiftByImmediate);
            Add("011111110-------011101----------", InstructionMnemonic.UQSHL, InstructionInfo.Scalar, OpCodeAdvsimdScalarShiftByImmediate.Create, EmitRaw.EmitAdvsimdScalarShiftByImmediate);
            Add("011111110-------100001----------", InstructionMnemonic.SQSHRUN, InstructionInfo.Scalar, OpCodeAdvsimdScalarShiftByImmediate.Create, EmitRaw.EmitAdvsimdScalarShiftByImmediate);
            Add("011111110-------100001----------", InstructionMnemonic.SQSHRUN2, InstructionInfo.Scalar, OpCodeAdvsimdScalarShiftByImmediate.Create, EmitRaw.EmitAdvsimdScalarShiftByImmediate);
            Add("011111110-------100011----------", InstructionMnemonic.SQRSHRUN, InstructionInfo.Scalar, OpCodeAdvsimdScalarShiftByImmediate.Create, EmitRaw.EmitAdvsimdScalarShiftByImmediate);
            Add("011111110-------100011----------", InstructionMnemonic.SQRSHRUN2, InstructionInfo.Scalar, OpCodeAdvsimdScalarShiftByImmediate.Create, EmitRaw.EmitAdvsimdScalarShiftByImmediate);
            Add("011111110-------100101----------", InstructionMnemonic.UQSHRN, InstructionInfo.Scalar, OpCodeAdvsimdScalarShiftByImmediate.Create, EmitRaw.EmitAdvsimdScalarShiftByImmediate);
            Add("011111110-------100111----------", InstructionMnemonic.UQRSHRN, InstructionInfo.Scalar, OpCodeAdvsimdScalarShiftByImmediate.Create, EmitRaw.EmitAdvsimdScalarShiftByImmediate);
            Add("011111110-------100111----------", InstructionMnemonic.UQRSHRN2, InstructionInfo.Scalar, OpCodeAdvsimdScalarShiftByImmediate.Create, EmitRaw.EmitAdvsimdScalarShiftByImmediate);
            Add("011111110-------111001----------", InstructionMnemonic.UCVTF, InstructionInfo.Scalar, OpCodeAdvsimdScalarShiftByImmediate.Create, EmitRaw.EmitAdvsimdScalarShiftByImmediate);
            Add("011111110-------111111----------", InstructionMnemonic.FCVTZU, InstructionInfo.Scalar, OpCodeAdvsimdScalarShiftByImmediate.Create, EmitRaw.EmitAdvsimdScalarShiftByImmediate);
            Add("01011110000-----000000----------", InstructionMnemonic.SHA1C, InstructionInfo.NULL, OpCodeCryptoThreeRegSHA.Create, EmitRaw.EmitCryptoThreeRegSHA);
            Add("01011110000-----000100----------", InstructionMnemonic.SHA1P, InstructionInfo.NULL, OpCodeCryptoThreeRegSHA.Create, EmitRaw.EmitCryptoThreeRegSHA);
            Add("01011110000-----001000----------", InstructionMnemonic.SHA1M, InstructionInfo.NULL, OpCodeCryptoThreeRegSHA.Create, EmitRaw.EmitCryptoThreeRegSHA);
            Add("01011110000-----001100----------", InstructionMnemonic.SHA1SU0, InstructionInfo.NULL, OpCodeCryptoThreeRegSHA.Create, EmitRaw.EmitCryptoThreeRegSHA);
            Add("01011110000-----010000----------", InstructionMnemonic.SHA256H, InstructionInfo.NULL, OpCodeCryptoThreeRegSHA.Create, EmitRaw.EmitCryptoThreeRegSHA);
            Add("01011110000-----010100----------", InstructionMnemonic.SHA256H2, InstructionInfo.NULL, OpCodeCryptoThreeRegSHA.Create, EmitRaw.EmitCryptoThreeRegSHA);
            Add("01011110000-----011000----------", InstructionMnemonic.SHA256SU1, InstructionInfo.NULL, OpCodeCryptoThreeRegSHA.Create, EmitRaw.EmitCryptoThreeRegSHA);
            Add("0101111000101000000010----------", InstructionMnemonic.SHA1H, InstructionInfo.NULL, OpCodeCryptoTwoRegSHA.Create, EmitRaw.EmitCryptoTwoRegSHA);
            Add("0101111000101000000110----------", InstructionMnemonic.SHA1SU1, InstructionInfo.NULL, OpCodeCryptoTwoRegSHA.Create, EmitRaw.EmitCryptoTwoRegSHA);
            Add("0101111000101000001010----------", InstructionMnemonic.SHA256SU0, InstructionInfo.NULL, OpCodeCryptoTwoRegSHA.Create, EmitRaw.EmitCryptoTwoRegSHA);
            Add("0100111000101000010010----------", InstructionMnemonic.AESE, InstructionInfo.NULL, OpCodeCryptoAES.Create, EmitRaw.EmitCryptoAES);
            Add("0100111000101000010110----------", InstructionMnemonic.AESD, InstructionInfo.NULL, OpCodeCryptoAES.Create, EmitRaw.EmitCryptoAES);
            Add("0100111000101000011010----------", InstructionMnemonic.AESMC, InstructionInfo.NULL, OpCodeCryptoAES.Create, EmitRaw.EmitCryptoAES);
            Add("0100111000101000011110----------", InstructionMnemonic.AESIMC, InstructionInfo.NULL, OpCodeCryptoAES.Create, EmitRaw.EmitCryptoAES);
            Add("0-001110--1-----000001----------", InstructionMnemonic.SHADD, InstructionInfo.NULL, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-001110--1-----000011----------", InstructionMnemonic.SQADD, InstructionInfo.Vector, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-001110--1-----000101----------", InstructionMnemonic.SRHADD, InstructionInfo.NULL, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-001110--1-----001001----------", InstructionMnemonic.SHSUB, InstructionInfo.NULL, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-001110--1-----001011----------", InstructionMnemonic.SQSUB, InstructionInfo.Vector, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-001110--1-----001101----------", InstructionMnemonic.CMGT, InstructionInfo.Vector, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-001110--1-----001111----------", InstructionMnemonic.CMGE, InstructionInfo.Vector, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-001110--1-----010001----------", InstructionMnemonic.SSHL_Vector, InstructionInfo.NULL, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-001110--1-----010011----------", InstructionMnemonic.SQSHL, InstructionInfo.Vector, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-001110--1-----010101----------", InstructionMnemonic.SRSHL, InstructionInfo.Vector, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-001110--1-----010111----------", InstructionMnemonic.SQRSHL, InstructionInfo.Vector, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-001110--1-----011001----------", InstructionMnemonic.SMAX, InstructionInfo.NULL, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-001110--1-----011011----------", InstructionMnemonic.SMIN, InstructionInfo.NULL, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-001110--1-----011101----------", InstructionMnemonic.SABD, InstructionInfo.NULL, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-001110--1-----011111----------", InstructionMnemonic.SABA, InstructionInfo.NULL, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-001110--1-----100001----------", InstructionMnemonic.ADD, InstructionInfo.Vector, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-001110--1-----100011----------", InstructionMnemonic.CMTST, InstructionInfo.Vector, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-001110--1-----100101----------", InstructionMnemonic.MLA, InstructionInfo.NULL, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-001110--1-----100111----------", InstructionMnemonic.MUL, InstructionInfo.NULL, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-001110--1-----101001----------", InstructionMnemonic.SMAXP, InstructionInfo.NULL, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-001110--1-----101011----------", InstructionMnemonic.SMINP, InstructionInfo.NULL, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-001110--1-----101101----------", InstructionMnemonic.SQDMULH, InstructionInfo.Vector, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-001110--1-----101111----------", InstructionMnemonic.ADDP, InstructionInfo.NULL, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-0011100-1-----110001----------", InstructionMnemonic.FMAXNM, InstructionInfo.NULL, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-0011100-1-----110011----------", InstructionMnemonic.FMLA, InstructionInfo.NULL, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-0011100-1-----110101----------", InstructionMnemonic.FADD, InstructionInfo.NULL, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-0011100-1-----110111----------", InstructionMnemonic.FMULX, InstructionInfo.Vector, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-0011100-1-----111001----------", InstructionMnemonic.FCMEQ, InstructionInfo.Vector, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-0011100-1-----111101----------", InstructionMnemonic.FMAX, InstructionInfo.NULL, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-0011100-1-----111111----------", InstructionMnemonic.FRECPS, InstructionInfo.Vector, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-001110001-----000111----------", InstructionMnemonic.AND, InstructionInfo.NULL, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-001110011-----000111----------", InstructionMnemonic.BIC, InstructionInfo.NULL, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-0011101-1-----110001----------", InstructionMnemonic.FMINNM, InstructionInfo.NULL, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-0011101-1-----110011----------", InstructionMnemonic.FMLS, InstructionInfo.NULL, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-0011101-1-----110101----------", InstructionMnemonic.FSUB, InstructionInfo.NULL, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-0011101-1-----111101----------", InstructionMnemonic.FMIN, InstructionInfo.NULL, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-0011101-1-----111111----------", InstructionMnemonic.FRSQRTS, InstructionInfo.Vector, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-001110101-----000111----------", InstructionMnemonic.ORR, InstructionInfo.NULL, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-001110111-----000111----------", InstructionMnemonic.ORN, InstructionInfo.NULL, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-101110--1-----000001----------", InstructionMnemonic.UHADD, InstructionInfo.NULL, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-101110--1-----000011----------", InstructionMnemonic.UQADD, InstructionInfo.Vector, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-101110--1-----000101----------", InstructionMnemonic.URHADD, InstructionInfo.NULL, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-101110--1-----001001----------", InstructionMnemonic.UHSUB, InstructionInfo.NULL, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-101110--1-----001011----------", InstructionMnemonic.UQSUB, InstructionInfo.Vector, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-101110--1-----001101----------", InstructionMnemonic.CMHI, InstructionInfo.Vector, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-101110--1-----001111----------", InstructionMnemonic.CMHS, InstructionInfo.Vector, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-101110--1-----010001----------", InstructionMnemonic.USHL, InstructionInfo.Vector, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-101110--1-----010011----------", InstructionMnemonic.UQSHL, InstructionInfo.Vector, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-101110--1-----010101----------", InstructionMnemonic.URSHL, InstructionInfo.Vector, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-101110--1-----010111----------", InstructionMnemonic.UQRSHL, InstructionInfo.Vector, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-101110--1-----011001----------", InstructionMnemonic.UMAX, InstructionInfo.NULL, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-101110--1-----011011----------", InstructionMnemonic.UMIN, InstructionInfo.NULL, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-101110--1-----011101----------", InstructionMnemonic.UABD, InstructionInfo.NULL, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-101110--1-----011111----------", InstructionMnemonic.UABA, InstructionInfo.NULL, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-101110--1-----100001----------", InstructionMnemonic.SUB, InstructionInfo.Vector, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-101110--1-----100011----------", InstructionMnemonic.CMEQ, InstructionInfo.Vector, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-101110--1-----100101----------", InstructionMnemonic.MLS, InstructionInfo.NULL, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-101110--1-----100111----------", InstructionMnemonic.PMUL, InstructionInfo.NULL, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-101110--1-----101001----------", InstructionMnemonic.UMAXP, InstructionInfo.NULL, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-101110--1-----101011----------", InstructionMnemonic.UMINP, InstructionInfo.NULL, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-101110--1-----101101----------", InstructionMnemonic.SQRDMULH, InstructionInfo.Vector, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-1011100-1-----110001----------", InstructionMnemonic.FMAXNMP, InstructionInfo.NULL, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-1011100-1-----110101----------", InstructionMnemonic.FADDP, InstructionInfo.NULL, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-1011100-1-----110111----------", InstructionMnemonic.FMUL, InstructionInfo.NULL, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-1011100-1-----111001----------", InstructionMnemonic.FCMGE, InstructionInfo.Vector, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-1011100-1-----111011----------", InstructionMnemonic.FACGE, InstructionInfo.Vector, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-1011100-1-----111101----------", InstructionMnemonic.FMAXP, InstructionInfo.NULL, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-1011100-1-----111111----------", InstructionMnemonic.FDIV, InstructionInfo.NULL, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-101110001-----000111----------", InstructionMnemonic.EOR, InstructionInfo.NULL, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-101110011-----000111----------", InstructionMnemonic.BSL, InstructionInfo.NULL, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-1011101-1-----110001----------", InstructionMnemonic.FMINNMP, InstructionInfo.NULL, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-1011101-1-----110101----------", InstructionMnemonic.FABD, InstructionInfo.Vector, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-1011101-1-----111001----------", InstructionMnemonic.FCMGT, InstructionInfo.Vector, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-1011101-1-----111011----------", InstructionMnemonic.FACGT, InstructionInfo.Vector, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-1011101-1-----111101----------", InstructionMnemonic.FMINP, InstructionInfo.NULL, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-101110101-----000111----------", InstructionMnemonic.BIT, InstructionInfo.NULL, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("0-101110111-----000111----------", InstructionMnemonic.BIF, InstructionInfo.NULL, OpCodeAdvsimdThreeSame.Create, EmitRaw.EmitAdvsimdThreeSame);
            Add("00001110--1-----000000----------", InstructionMnemonic.SADDL, InstructionInfo.NULL, OpCodeAdvsimdThreeDifferent.Create, EmitRaw.EmitAdvsimdThreeDifferent);
            Add("01001110--1-----000000----------", InstructionMnemonic.SADDL2, InstructionInfo.NULL, OpCodeAdvsimdThreeDifferent.Create, EmitRaw.EmitAdvsimdThreeDifferent);
            Add("00001110--1-----000100----------", InstructionMnemonic.SADDW, InstructionInfo.NULL, OpCodeAdvsimdThreeDifferent.Create, EmitRaw.EmitAdvsimdThreeDifferent);
            Add("01001110--1-----000100----------", InstructionMnemonic.SADDW2, InstructionInfo.NULL, OpCodeAdvsimdThreeDifferent.Create, EmitRaw.EmitAdvsimdThreeDifferent);
            Add("00001110--1-----001000----------", InstructionMnemonic.SSUBL, InstructionInfo.NULL, OpCodeAdvsimdThreeDifferent.Create, EmitRaw.EmitAdvsimdThreeDifferent);
            Add("01001110--1-----001000----------", InstructionMnemonic.SSUBL2, InstructionInfo.NULL, OpCodeAdvsimdThreeDifferent.Create, EmitRaw.EmitAdvsimdThreeDifferent);
            Add("00001110--1-----001100----------", InstructionMnemonic.SSUBW, InstructionInfo.NULL, OpCodeAdvsimdThreeDifferent.Create, EmitRaw.EmitAdvsimdThreeDifferent);
            Add("01001110--1-----001100----------", InstructionMnemonic.SSUBW2, InstructionInfo.NULL, OpCodeAdvsimdThreeDifferent.Create, EmitRaw.EmitAdvsimdThreeDifferent);
            Add("00001110--1-----010000----------", InstructionMnemonic.ADDHN, InstructionInfo.NULL, OpCodeAdvsimdThreeDifferent.Create, EmitRaw.EmitAdvsimdThreeDifferent);
            Add("01001110--1-----010000----------", InstructionMnemonic.ADDHN2, InstructionInfo.NULL, OpCodeAdvsimdThreeDifferent.Create, EmitRaw.EmitAdvsimdThreeDifferent);
            Add("00001110--1-----010100----------", InstructionMnemonic.SABAL, InstructionInfo.NULL, OpCodeAdvsimdThreeDifferent.Create, EmitRaw.EmitAdvsimdThreeDifferent);
            Add("01001110--1-----010100----------", InstructionMnemonic.SABAL2, InstructionInfo.NULL, OpCodeAdvsimdThreeDifferent.Create, EmitRaw.EmitAdvsimdThreeDifferent);
            Add("00001110--1-----011000----------", InstructionMnemonic.SUBHN, InstructionInfo.NULL, OpCodeAdvsimdThreeDifferent.Create, EmitRaw.EmitAdvsimdThreeDifferent);
            Add("01001110--1-----011000----------", InstructionMnemonic.SUBHN2, InstructionInfo.NULL, OpCodeAdvsimdThreeDifferent.Create, EmitRaw.EmitAdvsimdThreeDifferent);
            Add("00001110--1-----011100----------", InstructionMnemonic.SABDL, InstructionInfo.NULL, OpCodeAdvsimdThreeDifferent.Create, EmitRaw.EmitAdvsimdThreeDifferent);
            Add("01001110--1-----011100----------", InstructionMnemonic.SABDL2, InstructionInfo.NULL, OpCodeAdvsimdThreeDifferent.Create, EmitRaw.EmitAdvsimdThreeDifferent);
            Add("00001110--1-----100000----------", InstructionMnemonic.SMLAL, InstructionInfo.NULL, OpCodeAdvsimdThreeDifferent.Create, EmitRaw.EmitAdvsimdThreeDifferent);
            Add("01001110--1-----100000----------", InstructionMnemonic.SMLAL2, InstructionInfo.NULL, OpCodeAdvsimdThreeDifferent.Create, EmitRaw.EmitAdvsimdThreeDifferent);
            Add("00001110--1-----100100----------", InstructionMnemonic.SQDMLAL, InstructionInfo.Vector, OpCodeAdvsimdThreeDifferent.Create, EmitRaw.EmitAdvsimdThreeDifferent);
            Add("01001110--1-----100100----------", InstructionMnemonic.SQDMLAL2, InstructionInfo.Vector, OpCodeAdvsimdThreeDifferent.Create, EmitRaw.EmitAdvsimdThreeDifferent);
            Add("00001110--1-----101000----------", InstructionMnemonic.SMLSL, InstructionInfo.NULL, OpCodeAdvsimdThreeDifferent.Create, EmitRaw.EmitAdvsimdThreeDifferent);
            Add("01001110--1-----101000----------", InstructionMnemonic.SMLSL2, InstructionInfo.NULL, OpCodeAdvsimdThreeDifferent.Create, EmitRaw.EmitAdvsimdThreeDifferent);
            Add("00001110--1-----101100----------", InstructionMnemonic.SQDMLSL, InstructionInfo.Vector, OpCodeAdvsimdThreeDifferent.Create, EmitRaw.EmitAdvsimdThreeDifferent);
            Add("01001110--1-----101100----------", InstructionMnemonic.SQDMLSL2, InstructionInfo.Vector, OpCodeAdvsimdThreeDifferent.Create, EmitRaw.EmitAdvsimdThreeDifferent);
            Add("00001110--1-----110000----------", InstructionMnemonic.SMULL, InstructionInfo.NULL, OpCodeAdvsimdThreeDifferent.Create, EmitRaw.EmitAdvsimdThreeDifferent);
            Add("01001110--1-----110000----------", InstructionMnemonic.SMULL2, InstructionInfo.NULL, OpCodeAdvsimdThreeDifferent.Create, EmitRaw.EmitAdvsimdThreeDifferent);
            Add("00001110--1-----110100----------", InstructionMnemonic.SQDMULL, InstructionInfo.Vector, OpCodeAdvsimdThreeDifferent.Create, EmitRaw.EmitAdvsimdThreeDifferent);
            Add("01001110--1-----110100----------", InstructionMnemonic.SQDMULL2, InstructionInfo.Vector, OpCodeAdvsimdThreeDifferent.Create, EmitRaw.EmitAdvsimdThreeDifferent);
            Add("00001110--1-----111000----------", InstructionMnemonic.PMULL, InstructionInfo.NULL, OpCodeAdvsimdThreeDifferent.Create, EmitRaw.EmitAdvsimdThreeDifferent);
            Add("01001110--1-----111000----------", InstructionMnemonic.PMULL2, InstructionInfo.NULL, OpCodeAdvsimdThreeDifferent.Create, EmitRaw.EmitAdvsimdThreeDifferent);
            Add("00101110--1-----000000----------", InstructionMnemonic.UADDL, InstructionInfo.NULL, OpCodeAdvsimdThreeDifferent.Create, EmitRaw.EmitAdvsimdThreeDifferent);
            Add("01101110--1-----000000----------", InstructionMnemonic.UADDL2, InstructionInfo.NULL, OpCodeAdvsimdThreeDifferent.Create, EmitRaw.EmitAdvsimdThreeDifferent);
            Add("00101110--1-----000100----------", InstructionMnemonic.UADDW, InstructionInfo.NULL, OpCodeAdvsimdThreeDifferent.Create, EmitRaw.EmitAdvsimdThreeDifferent);
            Add("01101110--1-----000100----------", InstructionMnemonic.UADDW2, InstructionInfo.NULL, OpCodeAdvsimdThreeDifferent.Create, EmitRaw.EmitAdvsimdThreeDifferent);
            Add("00101110--1-----001000----------", InstructionMnemonic.USUBL, InstructionInfo.NULL, OpCodeAdvsimdThreeDifferent.Create, EmitRaw.EmitAdvsimdThreeDifferent);
            Add("01101110--1-----001000----------", InstructionMnemonic.USUBL2, InstructionInfo.NULL, OpCodeAdvsimdThreeDifferent.Create, EmitRaw.EmitAdvsimdThreeDifferent);
            Add("00101110--1-----001100----------", InstructionMnemonic.USUBW, InstructionInfo.NULL, OpCodeAdvsimdThreeDifferent.Create, EmitRaw.EmitAdvsimdThreeDifferent);
            Add("01101110--1-----001100----------", InstructionMnemonic.USUBW2, InstructionInfo.NULL, OpCodeAdvsimdThreeDifferent.Create, EmitRaw.EmitAdvsimdThreeDifferent);
            Add("00101110--1-----010000----------", InstructionMnemonic.RADDHN, InstructionInfo.NULL, OpCodeAdvsimdThreeDifferent.Create, EmitRaw.EmitAdvsimdThreeDifferent);
            Add("01101110--1-----010000----------", InstructionMnemonic.RADDHN2, InstructionInfo.NULL, OpCodeAdvsimdThreeDifferent.Create, EmitRaw.EmitAdvsimdThreeDifferent);
            Add("00101110--1-----010100----------", InstructionMnemonic.UABAL, InstructionInfo.NULL, OpCodeAdvsimdThreeDifferent.Create, EmitRaw.EmitAdvsimdThreeDifferent);
            Add("01101110--1-----010100----------", InstructionMnemonic.UABAL2, InstructionInfo.NULL, OpCodeAdvsimdThreeDifferent.Create, EmitRaw.EmitAdvsimdThreeDifferent);
            Add("00101110--1-----011000----------", InstructionMnemonic.RSUBHN, InstructionInfo.NULL, OpCodeAdvsimdThreeDifferent.Create, EmitRaw.EmitAdvsimdThreeDifferent);
            Add("01101110--1-----011000----------", InstructionMnemonic.RSUBHN2, InstructionInfo.NULL, OpCodeAdvsimdThreeDifferent.Create, EmitRaw.EmitAdvsimdThreeDifferent);
            Add("00101110--1-----011100----------", InstructionMnemonic.UABDL, InstructionInfo.NULL, OpCodeAdvsimdThreeDifferent.Create, EmitRaw.EmitAdvsimdThreeDifferent);
            Add("01101110--1-----011100----------", InstructionMnemonic.UABDL2, InstructionInfo.NULL, OpCodeAdvsimdThreeDifferent.Create, EmitRaw.EmitAdvsimdThreeDifferent);
            Add("00101110--1-----100000----------", InstructionMnemonic.UMLAL, InstructionInfo.NULL, OpCodeAdvsimdThreeDifferent.Create, EmitRaw.EmitAdvsimdThreeDifferent);
            Add("01101110--1-----100000----------", InstructionMnemonic.UMLAL2, InstructionInfo.NULL, OpCodeAdvsimdThreeDifferent.Create, EmitRaw.EmitAdvsimdThreeDifferent);
            Add("00101110--1-----101000----------", InstructionMnemonic.UMLSL, InstructionInfo.NULL, OpCodeAdvsimdThreeDifferent.Create, EmitRaw.EmitAdvsimdThreeDifferent);
            Add("01101110--1-----101000----------", InstructionMnemonic.UMLSL2, InstructionInfo.NULL, OpCodeAdvsimdThreeDifferent.Create, EmitRaw.EmitAdvsimdThreeDifferent);
            Add("00101110--1-----110000----------", InstructionMnemonic.UMULL, InstructionInfo.NULL, OpCodeAdvsimdThreeDifferent.Create, EmitRaw.EmitAdvsimdThreeDifferent);
            Add("01101110--1-----110000----------", InstructionMnemonic.UMULL2, InstructionInfo.NULL, OpCodeAdvsimdThreeDifferent.Create, EmitRaw.EmitAdvsimdThreeDifferent);
            Add("0-001110--100000000010----------", InstructionMnemonic.REV64, InstructionInfo.NULL, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-001110--100000000110----------", InstructionMnemonic.REV16, InstructionInfo.NULL, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-001110--100000001010----------", InstructionMnemonic.SADDLP, InstructionInfo.NULL, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-001110--100000001110----------", InstructionMnemonic.SUQADD, InstructionInfo.Vector, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-001110--100000010010----------", InstructionMnemonic.CLS, InstructionInfo.NULL, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-001110--100000010110----------", InstructionMnemonic.CNT, InstructionInfo.NULL, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-001110--100000011010----------", InstructionMnemonic.SADALP, InstructionInfo.NULL, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-001110--100000011110----------", InstructionMnemonic.SQABS, InstructionInfo.Vector, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-001110--100000100010----------", InstructionMnemonic.CMGT, InstructionInfo.Vector, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-001110--100000100110----------", InstructionMnemonic.CMEQ, InstructionInfo.Vector, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-001110--100000101010----------", InstructionMnemonic.CMLT, InstructionInfo.Vector, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-001110--100000101110----------", InstructionMnemonic.ABS, InstructionInfo.Vector, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-001110--100001001010----------", InstructionMnemonic.XTN, InstructionInfo.NULL, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-001110--100001001010----------", InstructionMnemonic.XTN2, InstructionInfo.NULL, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-001110--100001010010----------", InstructionMnemonic.SQXTN, InstructionInfo.Vector, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-001110--100001010010----------", InstructionMnemonic.SQXTN2, InstructionInfo.Vector, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-0011100-100001011010----------", InstructionMnemonic.FCVTN, InstructionInfo.NULL, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-0011100-100001011010----------", InstructionMnemonic.FCVTN2, InstructionInfo.NULL, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-0011100-100001011110----------", InstructionMnemonic.FCVTL, InstructionInfo.NULL, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-0011100-100001011110----------", InstructionMnemonic.FCVTL2, InstructionInfo.NULL, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-0011100-100001100010----------", InstructionMnemonic.FRINTN, InstructionInfo.NULL, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-0011100-100001100110----------", InstructionMnemonic.FRINTM, InstructionInfo.NULL, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-0011100-100001101010----------", InstructionMnemonic.FCVTNS, InstructionInfo.Vector, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-0011100-100001101110----------", InstructionMnemonic.FCVTMS, InstructionInfo.Vector, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-0011100-100001110010----------", InstructionMnemonic.FCVTAS, InstructionInfo.Vector, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-0011100-100001110110----------", InstructionMnemonic.SCVTF, InstructionInfo.Vector, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-0011101-100000110010----------", InstructionMnemonic.FCMGT, InstructionInfo.Vector, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-0011101-100000110110----------", InstructionMnemonic.FCMEQ, InstructionInfo.Vector, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-0011101-100000111010----------", InstructionMnemonic.FCMLT, InstructionInfo.Vector, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-0011101-100000111110----------", InstructionMnemonic.FABS, InstructionInfo.NULL, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-0011101-100001100010----------", InstructionMnemonic.FRINTP, InstructionInfo.NULL, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-0011101-100001100110----------", InstructionMnemonic.FRINTZ, InstructionInfo.NULL, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-0011101-100001101010----------", InstructionMnemonic.FCVTPS, InstructionInfo.Vector, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-0011101-100001101110----------", InstructionMnemonic.FCVTZS, InstructionInfo.Vector, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-0011101-100001110010----------", InstructionMnemonic.URECPE, InstructionInfo.NULL, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-0011101-100001110110----------", InstructionMnemonic.FRECPE, InstructionInfo.Vector, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-101110--100000000010----------", InstructionMnemonic.REV32, InstructionInfo.NULL, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-101110--100000001010----------", InstructionMnemonic.UADDLP, InstructionInfo.NULL, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-101110--100000001110----------", InstructionMnemonic.USQADD, InstructionInfo.Vector, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-101110--100000010010----------", InstructionMnemonic.CLZ, InstructionInfo.NULL, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-101110--100000011010----------", InstructionMnemonic.UADALP, InstructionInfo.NULL, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-101110--100000011110----------", InstructionMnemonic.SQNEG, InstructionInfo.Vector, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-101110--100000100010----------", InstructionMnemonic.CMGE, InstructionInfo.Vector, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-101110--100000100110----------", InstructionMnemonic.CMLE, InstructionInfo.Vector, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-101110--100000101110----------", InstructionMnemonic.NEG, InstructionInfo.Vector, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-101110--100001001010----------", InstructionMnemonic.SQXTUN, InstructionInfo.Vector, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-101110--100001001010----------", InstructionMnemonic.SQXTUN2, InstructionInfo.Vector, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-101110--100001001110----------", InstructionMnemonic.SHLL, InstructionInfo.NULL, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-101110--100001001110----------", InstructionMnemonic.SHLL2, InstructionInfo.NULL, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-101110--100001010010----------", InstructionMnemonic.UQXTN, InstructionInfo.Vector, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-101110--100001010010----------", InstructionMnemonic.UQXTN2, InstructionInfo.Vector, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-1011100-100001011010----------", InstructionMnemonic.FCVTXN, InstructionInfo.Vector, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-1011100-100001011010----------", InstructionMnemonic.FCVTXN2, InstructionInfo.Vector, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-1011100-100001100010----------", InstructionMnemonic.FRINTA, InstructionInfo.NULL, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-1011100-100001100110----------", InstructionMnemonic.FRINTX, InstructionInfo.NULL, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-1011100-100001101010----------", InstructionMnemonic.FCVTNU, InstructionInfo.Vector, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-1011100-100001101110----------", InstructionMnemonic.FCVTMU, InstructionInfo.Vector, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-1011100-100001110010----------", InstructionMnemonic.FCVTAU, InstructionInfo.Vector, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-1011100-100001110110----------", InstructionMnemonic.UCVTF, InstructionInfo.Vector, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-10111000100000010110----------", InstructionMnemonic.NOT, InstructionInfo.NULL, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-10111001100000010110----------", InstructionMnemonic.RBIT, InstructionInfo.NULL, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-1011101-100000110010----------", InstructionMnemonic.FCMGE, InstructionInfo.Vector, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-1011101-100000110110----------", InstructionMnemonic.FCMLE, InstructionInfo.Vector, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-1011101-100000111110----------", InstructionMnemonic.FNEG, InstructionInfo.NULL, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-1011101-100001100110----------", InstructionMnemonic.FRINTI, InstructionInfo.NULL, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-1011101-100001101010----------", InstructionMnemonic.FCVTPU, InstructionInfo.Vector, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-1011101-100001101110----------", InstructionMnemonic.FCVTZU, InstructionInfo.Vector, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-1011101-100001110010----------", InstructionMnemonic.URSQRTE, InstructionInfo.NULL, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-1011101-100001110110----------", InstructionMnemonic.FRSQRTE, InstructionInfo.Vector, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-1011101-100001111110----------", InstructionMnemonic.FSQRT, InstructionInfo.NULL, OpCodeAdvsimdTwoRegMisc.Create, EmitRaw.EmitAdvsimdTwoRegMisc);
            Add("0-001110--110000001110----------", InstructionMnemonic.SADDLV, InstructionInfo.NULL, OpCodeAdvsimdAcrossLanes.Create, EmitRaw.EmitAdvsimdAcrossLanes);
            Add("0-001110--110000101010----------", InstructionMnemonic.SMAXV, InstructionInfo.NULL, OpCodeAdvsimdAcrossLanes.Create, EmitRaw.EmitAdvsimdAcrossLanes);
            Add("0-001110--110001101010----------", InstructionMnemonic.SMINV, InstructionInfo.NULL, OpCodeAdvsimdAcrossLanes.Create, EmitRaw.EmitAdvsimdAcrossLanes);
            Add("0-001110--110001101110----------", InstructionMnemonic.ADDV, InstructionInfo.NULL, OpCodeAdvsimdAcrossLanes.Create, EmitRaw.EmitAdvsimdAcrossLanes);
            Add("0-101110--110000001110----------", InstructionMnemonic.UADDLV, InstructionInfo.NULL, OpCodeAdvsimdAcrossLanes.Create, EmitRaw.EmitAdvsimdAcrossLanes);
            Add("0-101110--110000101010----------", InstructionMnemonic.UMAXV, InstructionInfo.NULL, OpCodeAdvsimdAcrossLanes.Create, EmitRaw.EmitAdvsimdAcrossLanes);
            Add("0-101110--110001101010----------", InstructionMnemonic.UMINV, InstructionInfo.NULL, OpCodeAdvsimdAcrossLanes.Create, EmitRaw.EmitAdvsimdAcrossLanes);
            Add("0-1011100-110000110010----------", InstructionMnemonic.FMAXNMV, InstructionInfo.NULL, OpCodeAdvsimdAcrossLanes.Create, EmitRaw.EmitAdvsimdAcrossLanes);
            Add("0-1011100-110000111110----------", InstructionMnemonic.FMAXV, InstructionInfo.NULL, OpCodeAdvsimdAcrossLanes.Create, EmitRaw.EmitAdvsimdAcrossLanes);
            Add("0-1011101-110000110010----------", InstructionMnemonic.FMINNMV, InstructionInfo.NULL, OpCodeAdvsimdAcrossLanes.Create, EmitRaw.EmitAdvsimdAcrossLanes);
            Add("0-1011101-110000111110----------", InstructionMnemonic.FMINV, InstructionInfo.NULL, OpCodeAdvsimdAcrossLanes.Create, EmitRaw.EmitAdvsimdAcrossLanes);
            Add("0-001110000-----000001----------", InstructionMnemonic.DUP, InstructionInfo.Vector, OpCodeAdvsimdCopy.Create, EmitRaw.EmitAdvsimdCopy);
            Add("0-001110000-----000011----------", InstructionMnemonic.DUP, InstructionInfo.NULL, OpCodeAdvsimdCopy.Create, EmitRaw.EmitAdvsimdCopy);
            Add("00001110000-----001011----------", InstructionMnemonic.SMOV, InstructionInfo._32_bit, OpCodeAdvsimdCopy.Create, EmitRaw.EmitAdvsimdCopy);
            Add("00001110000-----001111----------", InstructionMnemonic.UMOV, InstructionInfo._32_bit, OpCodeAdvsimdCopy.Create, EmitRaw.EmitAdvsimdCopy);
            Add("01001110000-----000111----------", InstructionMnemonic.INS, InstructionInfo.NULL, OpCodeAdvsimdCopy.Create, EmitRaw.EmitAdvsimdCopy);
            Add("01001110000-----001011----------", InstructionMnemonic.SMOV, InstructionInfo._64_bit, OpCodeAdvsimdCopy.Create, EmitRaw.EmitAdvsimdCopy);
            Add("01001110000-----001111----------", InstructionMnemonic.UMOV, InstructionInfo._64_bit, OpCodeAdvsimdCopy.Create, EmitRaw.EmitAdvsimdCopy);
            Add("01101110000-----0----1----------", InstructionMnemonic.INS, InstructionInfo.NULL, OpCodeAdvsimdCopy.Create, EmitRaw.EmitAdvsimdCopy);
            Add("0-001111--------0010-0----------", InstructionMnemonic.SMLAL, InstructionInfo.NULL, OpCodeAdvsimdVectorXIndexedElement.Create, EmitRaw.EmitAdvsimdVectorXIndexedElement);
            Add("0-001111--------0010-0----------", InstructionMnemonic.SMLAL2, InstructionInfo.NULL, OpCodeAdvsimdVectorXIndexedElement.Create, EmitRaw.EmitAdvsimdVectorXIndexedElement);
            Add("0-001111--------0011-0----------", InstructionMnemonic.SQDMLAL, InstructionInfo.Vector, OpCodeAdvsimdVectorXIndexedElement.Create, EmitRaw.EmitAdvsimdVectorXIndexedElement);
            Add("0-001111--------0011-0----------", InstructionMnemonic.SQDMLAL2, InstructionInfo.Vector, OpCodeAdvsimdVectorXIndexedElement.Create, EmitRaw.EmitAdvsimdVectorXIndexedElement);
            Add("0-001111--------0110-0----------", InstructionMnemonic.SMLSL, InstructionInfo.NULL, OpCodeAdvsimdVectorXIndexedElement.Create, EmitRaw.EmitAdvsimdVectorXIndexedElement);
            Add("0-001111--------0110-0----------", InstructionMnemonic.SMLSL2, InstructionInfo.NULL, OpCodeAdvsimdVectorXIndexedElement.Create, EmitRaw.EmitAdvsimdVectorXIndexedElement);
            Add("0-001111--------0111-0----------", InstructionMnemonic.SQDMLSL, InstructionInfo.Vector, OpCodeAdvsimdVectorXIndexedElement.Create, EmitRaw.EmitAdvsimdVectorXIndexedElement);
            Add("0-001111--------0111-0----------", InstructionMnemonic.SQDMLSL2, InstructionInfo.Vector, OpCodeAdvsimdVectorXIndexedElement.Create, EmitRaw.EmitAdvsimdVectorXIndexedElement);
            Add("0-001111--------1000-0----------", InstructionMnemonic.MUL, InstructionInfo.NULL, OpCodeAdvsimdVectorXIndexedElement.Create, EmitRaw.EmitAdvsimdVectorXIndexedElement);
            Add("0-001111--------1010-0----------", InstructionMnemonic.SMULL, InstructionInfo.NULL, OpCodeAdvsimdVectorXIndexedElement.Create, EmitRaw.EmitAdvsimdVectorXIndexedElement);
            Add("0-001111--------1010-0----------", InstructionMnemonic.SMULL2, InstructionInfo.NULL, OpCodeAdvsimdVectorXIndexedElement.Create, EmitRaw.EmitAdvsimdVectorXIndexedElement);
            Add("0-001111--------1011-0----------", InstructionMnemonic.SQDMULL, InstructionInfo.Vector, OpCodeAdvsimdVectorXIndexedElement.Create, EmitRaw.EmitAdvsimdVectorXIndexedElement);
            Add("0-001111--------1011-0----------", InstructionMnemonic.SQDMULL2, InstructionInfo.Vector, OpCodeAdvsimdVectorXIndexedElement.Create, EmitRaw.EmitAdvsimdVectorXIndexedElement);
            Add("0-001111--------1100-0----------", InstructionMnemonic.SQDMULH, InstructionInfo.Vector, OpCodeAdvsimdVectorXIndexedElement.Create, EmitRaw.EmitAdvsimdVectorXIndexedElement);
            Add("0-001111--------1101-0----------", InstructionMnemonic.SQRDMULH, InstructionInfo.Vector, OpCodeAdvsimdVectorXIndexedElement.Create, EmitRaw.EmitAdvsimdVectorXIndexedElement);
            Add("0-0011111-------0001-0----------", InstructionMnemonic.FMLA, InstructionInfo.Vector, OpCodeAdvsimdVectorXIndexedElement.Create, EmitRaw.EmitAdvsimdVectorXIndexedElement);
            Add("0-0011111-------0101-0----------", InstructionMnemonic.FMLS, InstructionInfo.Vector, OpCodeAdvsimdVectorXIndexedElement.Create, EmitRaw.EmitAdvsimdVectorXIndexedElement);
            Add("0-0011111-------1001-0----------", InstructionMnemonic.FMUL, InstructionInfo.Vector, OpCodeAdvsimdVectorXIndexedElement.Create, EmitRaw.EmitAdvsimdVectorXIndexedElement);
            Add("0-101111--------0000-0----------", InstructionMnemonic.MLA, InstructionInfo.NULL, OpCodeAdvsimdVectorXIndexedElement.Create, EmitRaw.EmitAdvsimdVectorXIndexedElement);
            Add("0-101111--------0010-0----------", InstructionMnemonic.UMLAL, InstructionInfo.NULL, OpCodeAdvsimdVectorXIndexedElement.Create, EmitRaw.EmitAdvsimdVectorXIndexedElement);
            Add("0-101111--------0010-0----------", InstructionMnemonic.UMLAL2, InstructionInfo.NULL, OpCodeAdvsimdVectorXIndexedElement.Create, EmitRaw.EmitAdvsimdVectorXIndexedElement);
            Add("0-101111--------0100-0----------", InstructionMnemonic.MLS, InstructionInfo.NULL, OpCodeAdvsimdVectorXIndexedElement.Create, EmitRaw.EmitAdvsimdVectorXIndexedElement);
            Add("0-101111--------0110-0----------", InstructionMnemonic.UMLSL, InstructionInfo.NULL, OpCodeAdvsimdVectorXIndexedElement.Create, EmitRaw.EmitAdvsimdVectorXIndexedElement);
            Add("0-101111--------0110-0----------", InstructionMnemonic.UMLSL2, InstructionInfo.NULL, OpCodeAdvsimdVectorXIndexedElement.Create, EmitRaw.EmitAdvsimdVectorXIndexedElement);
            Add("0-101111--------1010-0----------", InstructionMnemonic.UMULL, InstructionInfo.NULL, OpCodeAdvsimdVectorXIndexedElement.Create, EmitRaw.EmitAdvsimdVectorXIndexedElement);
            Add("0-101111--------1010-0----------", InstructionMnemonic.UMULL2, InstructionInfo.NULL, OpCodeAdvsimdVectorXIndexedElement.Create, EmitRaw.EmitAdvsimdVectorXIndexedElement);
            Add("0-1011111-------1001-0----------", InstructionMnemonic.FMULX, InstructionInfo.Vector, OpCodeAdvsimdVectorXIndexedElement.Create, EmitRaw.EmitAdvsimdVectorXIndexedElement);
            Add("0-00111100000---0--001----------", InstructionMnemonic.MOVI, InstructionInfo._32_bit_shifted_immediate, OpCodeAdvsimdModifiedImmediate.Create, EmitRaw.EmitAdvsimdModifiedImmediate);
            Add("0-00111100000---0--101----------", InstructionMnemonic.ORR, InstructionInfo._32_bit, OpCodeAdvsimdModifiedImmediate.Create, EmitRaw.EmitAdvsimdModifiedImmediate);
            Add("0-00111100000---10-001----------", InstructionMnemonic.MOVI, InstructionInfo._16_bit_shifted_immediate, OpCodeAdvsimdModifiedImmediate.Create, EmitRaw.EmitAdvsimdModifiedImmediate);
            Add("0-00111100000---10-101----------", InstructionMnemonic.ORR, InstructionInfo._16_bit, OpCodeAdvsimdModifiedImmediate.Create, EmitRaw.EmitAdvsimdModifiedImmediate);
            Add("0-00111100000---110-01----------", InstructionMnemonic.MOVI, InstructionInfo._32_bit_shifting_ones, OpCodeAdvsimdModifiedImmediate.Create, EmitRaw.EmitAdvsimdModifiedImmediate);
            Add("0-00111100000---111001----------", InstructionMnemonic.MOVI, InstructionInfo._8_bit, OpCodeAdvsimdModifiedImmediate.Create, EmitRaw.EmitAdvsimdModifiedImmediate);
            Add("0-00111100000---111101----------", InstructionMnemonic.FMOV, InstructionInfo.Single_precision, OpCodeAdvsimdModifiedImmediate.Create, EmitRaw.EmitAdvsimdModifiedImmediate);
            Add("0-10111100000---0--001----------", InstructionMnemonic.MVNI, InstructionInfo._32_bit_shifted_immediate, OpCodeAdvsimdModifiedImmediate.Create, EmitRaw.EmitAdvsimdModifiedImmediate);
            Add("0-10111100000---0--101----------", InstructionMnemonic.BIC, InstructionInfo._32_bit, OpCodeAdvsimdModifiedImmediate.Create, EmitRaw.EmitAdvsimdModifiedImmediate);
            Add("0-10111100000---10-001----------", InstructionMnemonic.MVNI, InstructionInfo._16_bit_shifted_immediate, OpCodeAdvsimdModifiedImmediate.Create, EmitRaw.EmitAdvsimdModifiedImmediate);
            Add("0-10111100000---10-101----------", InstructionMnemonic.BIC, InstructionInfo._16_bit, OpCodeAdvsimdModifiedImmediate.Create, EmitRaw.EmitAdvsimdModifiedImmediate);
            Add("0-10111100000---110-01----------", InstructionMnemonic.MVNI, InstructionInfo._32_bit_shifting_ones, OpCodeAdvsimdModifiedImmediate.Create, EmitRaw.EmitAdvsimdModifiedImmediate);
            Add("0010111100000---111001----------", InstructionMnemonic.MOVI, InstructionInfo._64_bit_scalar, OpCodeAdvsimdModifiedImmediate.Create, EmitRaw.EmitAdvsimdModifiedImmediate);
            Add("0110111100000---111001----------", InstructionMnemonic.MOVI, InstructionInfo._64_bit_vector, OpCodeAdvsimdModifiedImmediate.Create, EmitRaw.EmitAdvsimdModifiedImmediate);
            Add("0110111100000---111101----------", InstructionMnemonic.FMOV, InstructionInfo.Double_precision, OpCodeAdvsimdModifiedImmediate.Create, EmitRaw.EmitAdvsimdModifiedImmediate);
            Add("0-0011110-------000001----------", InstructionMnemonic.SSHR, InstructionInfo.Vector, OpCodeAdvsimdShiftByImmediate.Create, EmitRaw.EmitAdvsimdShiftByImmediate);
            Add("0-0011110-------000101----------", InstructionMnemonic.SSRA, InstructionInfo.Vector, OpCodeAdvsimdShiftByImmediate.Create, EmitRaw.EmitAdvsimdShiftByImmediate);
            Add("0-0011110-------001001----------", InstructionMnemonic.SRSHR, InstructionInfo.Vector, OpCodeAdvsimdShiftByImmediate.Create, EmitRaw.EmitAdvsimdShiftByImmediate);
            Add("0-0011110-------001101----------", InstructionMnemonic.SRSRA, InstructionInfo.Vector, OpCodeAdvsimdShiftByImmediate.Create, EmitRaw.EmitAdvsimdShiftByImmediate);
            Add("0-0011110-------010101----------", InstructionMnemonic.SHL, InstructionInfo.Vector, OpCodeAdvsimdShiftByImmediate.Create, EmitRaw.EmitAdvsimdShiftByImmediate);
            Add("0-0011110-------011101----------", InstructionMnemonic.SQSHL, InstructionInfo.Vector, OpCodeAdvsimdShiftByImmediate.Create, EmitRaw.EmitAdvsimdShiftByImmediate);
            Add("0-0011110-------100001----------", InstructionMnemonic.SHRN, InstructionInfo.NULL, OpCodeAdvsimdShiftByImmediate.Create, EmitRaw.EmitAdvsimdShiftByImmediate);
            Add("0-0011110-------100001----------", InstructionMnemonic.SHRN2, InstructionInfo.NULL, OpCodeAdvsimdShiftByImmediate.Create, EmitRaw.EmitAdvsimdShiftByImmediate);
            Add("0-0011110-------100011----------", InstructionMnemonic.RSHRN, InstructionInfo.NULL, OpCodeAdvsimdShiftByImmediate.Create, EmitRaw.EmitAdvsimdShiftByImmediate);
            Add("0-0011110-------100011----------", InstructionMnemonic.RSHRN2, InstructionInfo.NULL, OpCodeAdvsimdShiftByImmediate.Create, EmitRaw.EmitAdvsimdShiftByImmediate);
            Add("0-0011110-------100101----------", InstructionMnemonic.SQSHRN, InstructionInfo.Vector, OpCodeAdvsimdShiftByImmediate.Create, EmitRaw.EmitAdvsimdShiftByImmediate);
            Add("0-0011110-------100101----------", InstructionMnemonic.SQSHRN2, InstructionInfo.Vector, OpCodeAdvsimdShiftByImmediate.Create, EmitRaw.EmitAdvsimdShiftByImmediate);
            Add("0-0011110-------100111----------", InstructionMnemonic.SQRSHRN, InstructionInfo.Vector, OpCodeAdvsimdShiftByImmediate.Create, EmitRaw.EmitAdvsimdShiftByImmediate);
            Add("0-0011110-------100111----------", InstructionMnemonic.SQRSHRN2, InstructionInfo.Vector, OpCodeAdvsimdShiftByImmediate.Create, EmitRaw.EmitAdvsimdShiftByImmediate);
            Add("0-0011110-------101001----------", InstructionMnemonic.SSHLL, InstructionInfo.NULL, OpCodeAdvsimdShiftByImmediate.Create, EmitRaw.EmitAdvsimdShiftByImmediate);
            Add("0-0011110-------101001----------", InstructionMnemonic.SSHLL2, InstructionInfo.NULL, OpCodeAdvsimdShiftByImmediate.Create, EmitRaw.EmitAdvsimdShiftByImmediate);
            Add("0-0011110-------111001----------", InstructionMnemonic.SCVTF, InstructionInfo.Vector, OpCodeAdvsimdShiftByImmediate.Create, EmitRaw.EmitAdvsimdShiftByImmediate);
            Add("0-0011110-------111111----------", InstructionMnemonic.FCVTZS, InstructionInfo.Vector, OpCodeAdvsimdShiftByImmediate.Create, EmitRaw.EmitAdvsimdShiftByImmediate);
            Add("0-1011110-------000001----------", InstructionMnemonic.USHR, InstructionInfo.Vector, OpCodeAdvsimdShiftByImmediate.Create, EmitRaw.EmitAdvsimdShiftByImmediate);
            Add("0-1011110-------000101----------", InstructionMnemonic.USRA, InstructionInfo.Vector, OpCodeAdvsimdShiftByImmediate.Create, EmitRaw.EmitAdvsimdShiftByImmediate);
            Add("0-1011110-------001001----------", InstructionMnemonic.URSHR, InstructionInfo.Vector, OpCodeAdvsimdShiftByImmediate.Create, EmitRaw.EmitAdvsimdShiftByImmediate);
            Add("0-1011110-------001101----------", InstructionMnemonic.URSRA, InstructionInfo.Vector, OpCodeAdvsimdShiftByImmediate.Create, EmitRaw.EmitAdvsimdShiftByImmediate);
            Add("0-1011110-------010001----------", InstructionMnemonic.SRI, InstructionInfo.Vector, OpCodeAdvsimdShiftByImmediate.Create, EmitRaw.EmitAdvsimdShiftByImmediate);
            Add("0-1011110-------010101----------", InstructionMnemonic.SLI, InstructionInfo.Vector, OpCodeAdvsimdShiftByImmediate.Create, EmitRaw.EmitAdvsimdShiftByImmediate);
            Add("0-1011110-------011001----------", InstructionMnemonic.SQSHLU, InstructionInfo.Vector, OpCodeAdvsimdShiftByImmediate.Create, EmitRaw.EmitAdvsimdShiftByImmediate);
            Add("0-1011110-------011101----------", InstructionMnemonic.UQSHL, InstructionInfo.Vector, OpCodeAdvsimdShiftByImmediate.Create, EmitRaw.EmitAdvsimdShiftByImmediate);
            Add("0-1011110-------100001----------", InstructionMnemonic.SQSHRUN, InstructionInfo.Vector, OpCodeAdvsimdShiftByImmediate.Create, EmitRaw.EmitAdvsimdShiftByImmediate);
            Add("0-1011110-------100001----------", InstructionMnemonic.SQSHRUN2, InstructionInfo.Vector, OpCodeAdvsimdShiftByImmediate.Create, EmitRaw.EmitAdvsimdShiftByImmediate);
            Add("0-1011110-------100011----------", InstructionMnemonic.SQRSHRUN, InstructionInfo.Vector, OpCodeAdvsimdShiftByImmediate.Create, EmitRaw.EmitAdvsimdShiftByImmediate);
            Add("0-1011110-------100011----------", InstructionMnemonic.SQRSHRUN2, InstructionInfo.Vector, OpCodeAdvsimdShiftByImmediate.Create, EmitRaw.EmitAdvsimdShiftByImmediate);
            Add("0-1011110-------100101----------", InstructionMnemonic.UQSHRN, InstructionInfo.Vector, OpCodeAdvsimdShiftByImmediate.Create, EmitRaw.EmitAdvsimdShiftByImmediate);
            Add("0-1011110-------100111----------", InstructionMnemonic.UQRSHRN, InstructionInfo.Vector, OpCodeAdvsimdShiftByImmediate.Create, EmitRaw.EmitAdvsimdShiftByImmediate);
            Add("0-1011110-------100111----------", InstructionMnemonic.UQRSHRN2, InstructionInfo.Vector, OpCodeAdvsimdShiftByImmediate.Create, EmitRaw.EmitAdvsimdShiftByImmediate);
            Add("0-1011110-------101001----------", InstructionMnemonic.USHLL, InstructionInfo.NULL, OpCodeAdvsimdShiftByImmediate.Create, EmitRaw.EmitAdvsimdShiftByImmediate);
            Add("0-1011110-------101001----------", InstructionMnemonic.USHLL2, InstructionInfo.NULL, OpCodeAdvsimdShiftByImmediate.Create, EmitRaw.EmitAdvsimdShiftByImmediate);
            Add("0-1011110-------111001----------", InstructionMnemonic.UCVTF, InstructionInfo.Vector, OpCodeAdvsimdShiftByImmediate.Create, EmitRaw.EmitAdvsimdShiftByImmediate);
            Add("0-1011110-------111111----------", InstructionMnemonic.FCVTZU, InstructionInfo.Vector, OpCodeAdvsimdShiftByImmediate.Create, EmitRaw.EmitAdvsimdShiftByImmediate);
            Add("0-001110000-----000000----------", InstructionMnemonic.TBL, InstructionInfo.Single_register_table, OpCodeAdvsimdTBLTBX.Create, EmitRaw.EmitAdvsimdTBLTBX);
            Add("0-001110000-----000100----------", InstructionMnemonic.TBX, InstructionInfo.Single_register_table, OpCodeAdvsimdTBLTBX.Create, EmitRaw.EmitAdvsimdTBLTBX);
            Add("0-001110000-----001000----------", InstructionMnemonic.TBL, InstructionInfo.Two_register_table, OpCodeAdvsimdTBLTBX.Create, EmitRaw.EmitAdvsimdTBLTBX);
            Add("0-001110000-----001100----------", InstructionMnemonic.TBX, InstructionInfo.Two_register_table, OpCodeAdvsimdTBLTBX.Create, EmitRaw.EmitAdvsimdTBLTBX);
            Add("0-001110000-----010000----------", InstructionMnemonic.TBL, InstructionInfo.Three_register_table, OpCodeAdvsimdTBLTBX.Create, EmitRaw.EmitAdvsimdTBLTBX);
            Add("0-001110000-----010100----------", InstructionMnemonic.TBX, InstructionInfo.Three_register_table, OpCodeAdvsimdTBLTBX.Create, EmitRaw.EmitAdvsimdTBLTBX);
            Add("0-001110000-----011000----------", InstructionMnemonic.TBL, InstructionInfo.Four_register_table, OpCodeAdvsimdTBLTBX.Create, EmitRaw.EmitAdvsimdTBLTBX);
            Add("0-001110000-----011100----------", InstructionMnemonic.TBX, InstructionInfo.Four_register_table, OpCodeAdvsimdTBLTBX.Create, EmitRaw.EmitAdvsimdTBLTBX);
            Add("0-001110--0-----000110----------", InstructionMnemonic.UZP1, InstructionInfo.NULL, OpCodeAdvsimdZIPUZPTRN.Create, EmitRaw.EmitAdvsimdZIPUZPTRN);
            Add("0-001110--0-----001010----------", InstructionMnemonic.TRN1, InstructionInfo.NULL, OpCodeAdvsimdZIPUZPTRN.Create, EmitRaw.EmitAdvsimdZIPUZPTRN);
            Add("0-001110--0-----001110----------", InstructionMnemonic.ZIP1, InstructionInfo.NULL, OpCodeAdvsimdZIPUZPTRN.Create, EmitRaw.EmitAdvsimdZIPUZPTRN);
            Add("0-001110--0-----010110----------", InstructionMnemonic.UZP2, InstructionInfo.NULL, OpCodeAdvsimdZIPUZPTRN.Create, EmitRaw.EmitAdvsimdZIPUZPTRN);
            Add("0-001110--0-----011010----------", InstructionMnemonic.TRN2, InstructionInfo.NULL, OpCodeAdvsimdZIPUZPTRN.Create, EmitRaw.EmitAdvsimdZIPUZPTRN);
            Add("0-001110--0-----011110----------", InstructionMnemonic.ZIP2, InstructionInfo.NULL, OpCodeAdvsimdZIPUZPTRN.Create, EmitRaw.EmitAdvsimdZIPUZPTRN);
            Add("0-101110000-----0----0----------", InstructionMnemonic.EXT, InstructionInfo.NULL, OpCodeAdvsimdEXT.Create, EmitRaw.EmitAdvsimdEXT);
            Add("0-001100000000000000------------", InstructionMnemonic.ST4, InstructionInfo.No_offset, OpCodeAdvsimdLoadStoreMultipleStructures.Create, EmitRaw.EmitAdvsimdLoadStoreMultipleStructures);
            Add("0-001100000000000010------------", InstructionMnemonic.ST1, InstructionInfo.Four_registers, OpCodeAdvsimdLoadStoreMultipleStructures.Create, EmitRaw.EmitAdvsimdLoadStoreMultipleStructures);
            Add("0-001100000000000100------------", InstructionMnemonic.ST3, InstructionInfo.No_offset, OpCodeAdvsimdLoadStoreMultipleStructures.Create, EmitRaw.EmitAdvsimdLoadStoreMultipleStructures);
            Add("0-001100000000000110------------", InstructionMnemonic.ST1, InstructionInfo.Three_registers, OpCodeAdvsimdLoadStoreMultipleStructures.Create, EmitRaw.EmitAdvsimdLoadStoreMultipleStructures);
            Add("0-001100000000000111------------", InstructionMnemonic.ST1, InstructionInfo.One_register, OpCodeAdvsimdLoadStoreMultipleStructures.Create, EmitRaw.EmitAdvsimdLoadStoreMultipleStructures);
            Add("0-001100000000001000------------", InstructionMnemonic.ST2, InstructionInfo.No_offset, OpCodeAdvsimdLoadStoreMultipleStructures.Create, EmitRaw.EmitAdvsimdLoadStoreMultipleStructures);
            Add("0-001100000000001010------------", InstructionMnemonic.ST1, InstructionInfo.Two_registers, OpCodeAdvsimdLoadStoreMultipleStructures.Create, EmitRaw.EmitAdvsimdLoadStoreMultipleStructures);
            Add("0-001100010000000000------------", InstructionMnemonic.LD4, InstructionInfo.No_offset, OpCodeAdvsimdLoadStoreMultipleStructures.Create, EmitRaw.EmitAdvsimdLoadStoreMultipleStructures);
            Add("0-001100010000000010------------", InstructionMnemonic.LD1, InstructionInfo.Four_registers, OpCodeAdvsimdLoadStoreMultipleStructures.Create, EmitRaw.EmitAdvsimdLoadStoreMultipleStructures);
            Add("0-001100010000000100------------", InstructionMnemonic.LD3, InstructionInfo.No_offset, OpCodeAdvsimdLoadStoreMultipleStructures.Create, EmitRaw.EmitAdvsimdLoadStoreMultipleStructures);
            Add("0-001100010000000110------------", InstructionMnemonic.LD1, InstructionInfo.Three_registers, OpCodeAdvsimdLoadStoreMultipleStructures.Create, EmitRaw.EmitAdvsimdLoadStoreMultipleStructures);
            Add("0-001100010000000111------------", InstructionMnemonic.LD1, InstructionInfo.One_register, OpCodeAdvsimdLoadStoreMultipleStructures.Create, EmitRaw.EmitAdvsimdLoadStoreMultipleStructures);
            Add("0-001100010000001000------------", InstructionMnemonic.LD2, InstructionInfo.No_offset, OpCodeAdvsimdLoadStoreMultipleStructures.Create, EmitRaw.EmitAdvsimdLoadStoreMultipleStructures);
            Add("0-001100010000001010------------", InstructionMnemonic.LD1, InstructionInfo.Two_registers, OpCodeAdvsimdLoadStoreMultipleStructures.Create, EmitRaw.EmitAdvsimdLoadStoreMultipleStructures);
            Add("0-001100100-----0000------------", InstructionMnemonic.ST4, InstructionInfo.Register_offset, OpCodeAdvsimdLoadStoreMultipleStructuresPostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreMultipleStructuresPostIndexed);
            Add("0-001100100-----0010------------", InstructionMnemonic.ST1, InstructionInfo.Four_registers_register_offset, OpCodeAdvsimdLoadStoreMultipleStructuresPostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreMultipleStructuresPostIndexed);
            Add("0-001100100-----0100------------", InstructionMnemonic.ST3, InstructionInfo.Register_offset, OpCodeAdvsimdLoadStoreMultipleStructuresPostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreMultipleStructuresPostIndexed);
            Add("0-001100100-----0110------------", InstructionMnemonic.ST1, InstructionInfo.Three_registers_register_offset, OpCodeAdvsimdLoadStoreMultipleStructuresPostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreMultipleStructuresPostIndexed);
            Add("0-001100100-----0111------------", InstructionMnemonic.ST1, InstructionInfo.One_register_register_offset, OpCodeAdvsimdLoadStoreMultipleStructuresPostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreMultipleStructuresPostIndexed);
            Add("0-001100100-----1000------------", InstructionMnemonic.ST2, InstructionInfo.Register_offset, OpCodeAdvsimdLoadStoreMultipleStructuresPostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreMultipleStructuresPostIndexed);
            Add("0-001100100-----1010------------", InstructionMnemonic.ST1, InstructionInfo.Two_registers_register_offset, OpCodeAdvsimdLoadStoreMultipleStructuresPostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreMultipleStructuresPostIndexed);
            Add("0-001100100111110000------------", InstructionMnemonic.ST4, InstructionInfo.Immediate_offset, OpCodeAdvsimdLoadStoreMultipleStructuresPostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreMultipleStructuresPostIndexed);
            Add("0-001100100111110010------------", InstructionMnemonic.ST1, InstructionInfo.Four_registers_immediate_offset, OpCodeAdvsimdLoadStoreMultipleStructuresPostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreMultipleStructuresPostIndexed);
            Add("0-001100100111110100------------", InstructionMnemonic.ST3, InstructionInfo.Immediate_offset, OpCodeAdvsimdLoadStoreMultipleStructuresPostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreMultipleStructuresPostIndexed);
            Add("0-001100100111110110------------", InstructionMnemonic.ST1, InstructionInfo.Three_registers_immediate_offset, OpCodeAdvsimdLoadStoreMultipleStructuresPostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreMultipleStructuresPostIndexed);
            Add("0-001100100111110111------------", InstructionMnemonic.ST1, InstructionInfo.One_register_immediate_offset, OpCodeAdvsimdLoadStoreMultipleStructuresPostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreMultipleStructuresPostIndexed);
            Add("0-001100100111111000------------", InstructionMnemonic.ST2, InstructionInfo.Immediate_offset, OpCodeAdvsimdLoadStoreMultipleStructuresPostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreMultipleStructuresPostIndexed);
            Add("0-001100100111111010------------", InstructionMnemonic.ST1, InstructionInfo.Two_registers_immediate_offset, OpCodeAdvsimdLoadStoreMultipleStructuresPostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreMultipleStructuresPostIndexed);
            Add("0-001100110-----0000------------", InstructionMnemonic.LD4, InstructionInfo.Register_offset, OpCodeAdvsimdLoadStoreMultipleStructuresPostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreMultipleStructuresPostIndexed);
            Add("0-001100110-----0010------------", InstructionMnemonic.LD1, InstructionInfo.Four_registers_register_offset, OpCodeAdvsimdLoadStoreMultipleStructuresPostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreMultipleStructuresPostIndexed);
            Add("0-001100110-----0100------------", InstructionMnemonic.LD3, InstructionInfo.Register_offset, OpCodeAdvsimdLoadStoreMultipleStructuresPostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreMultipleStructuresPostIndexed);
            Add("0-001100110-----0110------------", InstructionMnemonic.LD1, InstructionInfo.Three_registers_register_offset, OpCodeAdvsimdLoadStoreMultipleStructuresPostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreMultipleStructuresPostIndexed);
            Add("0-001100110-----0111------------", InstructionMnemonic.LD1, InstructionInfo.One_register_register_offset, OpCodeAdvsimdLoadStoreMultipleStructuresPostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreMultipleStructuresPostIndexed);
            Add("0-001100110-----1000------------", InstructionMnemonic.LD2, InstructionInfo.Register_offset, OpCodeAdvsimdLoadStoreMultipleStructuresPostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreMultipleStructuresPostIndexed);
            Add("0-001100110-----1010------------", InstructionMnemonic.LD1, InstructionInfo.Two_registers_register_offset, OpCodeAdvsimdLoadStoreMultipleStructuresPostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreMultipleStructuresPostIndexed);
            Add("0-001100110111110000------------", InstructionMnemonic.LD4, InstructionInfo.Immediate_offset, OpCodeAdvsimdLoadStoreMultipleStructuresPostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreMultipleStructuresPostIndexed);
            Add("0-001100110111110010------------", InstructionMnemonic.LD1, InstructionInfo.Four_registers_immediate_offset, OpCodeAdvsimdLoadStoreMultipleStructuresPostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreMultipleStructuresPostIndexed);
            Add("0-001100110111110100------------", InstructionMnemonic.LD3, InstructionInfo.Immediate_offset, OpCodeAdvsimdLoadStoreMultipleStructuresPostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreMultipleStructuresPostIndexed);
            Add("0-001100110111110110------------", InstructionMnemonic.LD1, InstructionInfo.Three_registers_immediate_offset, OpCodeAdvsimdLoadStoreMultipleStructuresPostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreMultipleStructuresPostIndexed);
            Add("0-001100110111110111------------", InstructionMnemonic.LD1, InstructionInfo.One_register_immediate_offset, OpCodeAdvsimdLoadStoreMultipleStructuresPostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreMultipleStructuresPostIndexed);
            Add("0-001100110111111000------------", InstructionMnemonic.LD2, InstructionInfo.Immediate_offset, OpCodeAdvsimdLoadStoreMultipleStructuresPostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreMultipleStructuresPostIndexed);
            Add("0-001100110111111010------------", InstructionMnemonic.LD1, InstructionInfo.Two_registers_immediate_offset, OpCodeAdvsimdLoadStoreMultipleStructuresPostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreMultipleStructuresPostIndexed);
            Add("0-00110100000000000-------------", InstructionMnemonic.ST1, InstructionInfo._8_bit, OpCodeAdvsimdLoadStoreSingleStructure.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructure);
            Add("0-00110100000000001-------------", InstructionMnemonic.ST3, InstructionInfo._8_bit, OpCodeAdvsimdLoadStoreSingleStructure.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructure);
            Add("0-00110100000000010--0----------", InstructionMnemonic.ST1, InstructionInfo._16_bit, OpCodeAdvsimdLoadStoreSingleStructure.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructure);
            Add("0-00110100000000011--0----------", InstructionMnemonic.ST3, InstructionInfo._16_bit, OpCodeAdvsimdLoadStoreSingleStructure.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructure);
            Add("0-00110100000000100-00----------", InstructionMnemonic.ST1, InstructionInfo._32_bit, OpCodeAdvsimdLoadStoreSingleStructure.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructure);
            Add("0-00110100000000100001----------", InstructionMnemonic.ST1, InstructionInfo._64_bit, OpCodeAdvsimdLoadStoreSingleStructure.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructure);
            Add("0-00110100000000101-00----------", InstructionMnemonic.ST3, InstructionInfo._32_bit, OpCodeAdvsimdLoadStoreSingleStructure.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructure);
            Add("0-00110100000000101001----------", InstructionMnemonic.ST3, InstructionInfo._64_bit, OpCodeAdvsimdLoadStoreSingleStructure.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructure);
            Add("0-00110100100000000-------------", InstructionMnemonic.ST2, InstructionInfo._8_bit, OpCodeAdvsimdLoadStoreSingleStructure.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructure);
            Add("0-00110100100000001-------------", InstructionMnemonic.ST4, InstructionInfo._8_bit, OpCodeAdvsimdLoadStoreSingleStructure.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructure);
            Add("0-00110100100000010--0----------", InstructionMnemonic.ST2, InstructionInfo._16_bit, OpCodeAdvsimdLoadStoreSingleStructure.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructure);
            Add("0-00110100100000011--0----------", InstructionMnemonic.ST4, InstructionInfo._16_bit, OpCodeAdvsimdLoadStoreSingleStructure.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructure);
            Add("0-00110100100000100-00----------", InstructionMnemonic.ST2, InstructionInfo._32_bit, OpCodeAdvsimdLoadStoreSingleStructure.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructure);
            Add("0-00110100100000100001----------", InstructionMnemonic.ST2, InstructionInfo._64_bit, OpCodeAdvsimdLoadStoreSingleStructure.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructure);
            Add("0-00110100100000101-00----------", InstructionMnemonic.ST4, InstructionInfo._32_bit, OpCodeAdvsimdLoadStoreSingleStructure.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructure);
            Add("0-00110100100000101001----------", InstructionMnemonic.ST4, InstructionInfo._64_bit, OpCodeAdvsimdLoadStoreSingleStructure.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructure);
            Add("0-00110101000000000-------------", InstructionMnemonic.LD1, InstructionInfo._8_bit, OpCodeAdvsimdLoadStoreSingleStructure.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructure);
            Add("0-00110101000000001-------------", InstructionMnemonic.LD3, InstructionInfo._8_bit, OpCodeAdvsimdLoadStoreSingleStructure.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructure);
            Add("0-00110101000000010--0----------", InstructionMnemonic.LD1, InstructionInfo._16_bit, OpCodeAdvsimdLoadStoreSingleStructure.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructure);
            Add("0-00110101000000011--0----------", InstructionMnemonic.LD3, InstructionInfo._16_bit, OpCodeAdvsimdLoadStoreSingleStructure.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructure);
            Add("0-00110101000000100-00----------", InstructionMnemonic.LD1, InstructionInfo._32_bit, OpCodeAdvsimdLoadStoreSingleStructure.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructure);
            Add("0-00110101000000100001----------", InstructionMnemonic.LD1, InstructionInfo._64_bit, OpCodeAdvsimdLoadStoreSingleStructure.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructure);
            Add("0-00110101000000101-00----------", InstructionMnemonic.LD3, InstructionInfo._32_bit, OpCodeAdvsimdLoadStoreSingleStructure.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructure);
            Add("0-00110101000000101001----------", InstructionMnemonic.LD3, InstructionInfo._64_bit, OpCodeAdvsimdLoadStoreSingleStructure.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructure);
            Add("0-001101010000001100------------", InstructionMnemonic.LD1R, InstructionInfo.No_offset, OpCodeAdvsimdLoadStoreSingleStructure.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructure);
            Add("0-001101010000001110------------", InstructionMnemonic.LD3R, InstructionInfo.No_offset, OpCodeAdvsimdLoadStoreSingleStructure.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructure);
            Add("0-00110101100000000-------------", InstructionMnemonic.LD2, InstructionInfo._8_bit, OpCodeAdvsimdLoadStoreSingleStructure.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructure);
            Add("0-00110101100000001-------------", InstructionMnemonic.LD4, InstructionInfo._8_bit, OpCodeAdvsimdLoadStoreSingleStructure.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructure);
            Add("0-00110101100000010--0----------", InstructionMnemonic.LD2, InstructionInfo._16_bit, OpCodeAdvsimdLoadStoreSingleStructure.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructure);
            Add("0-00110101100000011--0----------", InstructionMnemonic.LD4, InstructionInfo._16_bit, OpCodeAdvsimdLoadStoreSingleStructure.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructure);
            Add("0-00110101100000100-00----------", InstructionMnemonic.LD2, InstructionInfo._32_bit, OpCodeAdvsimdLoadStoreSingleStructure.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructure);
            Add("0-00110101100000100001----------", InstructionMnemonic.LD2, InstructionInfo._64_bit, OpCodeAdvsimdLoadStoreSingleStructure.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructure);
            Add("0-00110101100000101-00----------", InstructionMnemonic.LD4, InstructionInfo._32_bit, OpCodeAdvsimdLoadStoreSingleStructure.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructure);
            Add("0-00110101100000101001----------", InstructionMnemonic.LD4, InstructionInfo._64_bit, OpCodeAdvsimdLoadStoreSingleStructure.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructure);
            Add("0-001101011000001100------------", InstructionMnemonic.LD2R, InstructionInfo.No_offset, OpCodeAdvsimdLoadStoreSingleStructure.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructure);
            Add("0-001101011000001110------------", InstructionMnemonic.LD4R, InstructionInfo.No_offset, OpCodeAdvsimdLoadStoreSingleStructure.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructure);
            Add("0-001101100-----000-------------", InstructionMnemonic.ST1, InstructionInfo._8_bit_register_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-001101100-----001-------------", InstructionMnemonic.ST3, InstructionInfo._8_bit_register_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-001101100-----010--0----------", InstructionMnemonic.ST1, InstructionInfo._16_bit_register_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-001101100-----011--0----------", InstructionMnemonic.ST3, InstructionInfo._16_bit_register_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-001101100-----100-00----------", InstructionMnemonic.ST1, InstructionInfo._32_bit_register_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-001101100-----100001----------", InstructionMnemonic.ST1, InstructionInfo._64_bit_register_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-001101100-----101-00----------", InstructionMnemonic.ST3, InstructionInfo._32_bit_register_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-001101100-----101001----------", InstructionMnemonic.ST3, InstructionInfo._64_bit_register_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-00110110011111000-------------", InstructionMnemonic.ST1, InstructionInfo._8_bit_immediate_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-00110110011111001-------------", InstructionMnemonic.ST3, InstructionInfo._8_bit_immediate_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-00110110011111010--0----------", InstructionMnemonic.ST1, InstructionInfo._16_bit_immediate_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-00110110011111011--0----------", InstructionMnemonic.ST3, InstructionInfo._16_bit_immediate_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-00110110011111100-00----------", InstructionMnemonic.ST1, InstructionInfo._32_bit_immediate_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-00110110011111100001----------", InstructionMnemonic.ST1, InstructionInfo._64_bit_immediate_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-00110110011111101-00----------", InstructionMnemonic.ST3, InstructionInfo._32_bit_immediate_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-00110110011111101001----------", InstructionMnemonic.ST3, InstructionInfo._64_bit_immediate_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-001101101-----000-------------", InstructionMnemonic.ST2, InstructionInfo._8_bit_register_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-001101101-----001-------------", InstructionMnemonic.ST4, InstructionInfo._8_bit_register_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-001101101-----010--0----------", InstructionMnemonic.ST2, InstructionInfo._16_bit_register_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-001101101-----011--0----------", InstructionMnemonic.ST4, InstructionInfo._16_bit_register_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-001101101-----100-00----------", InstructionMnemonic.ST2, InstructionInfo._32_bit_register_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-001101101-----100001----------", InstructionMnemonic.ST2, InstructionInfo._64_bit_register_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-001101101-----101-00----------", InstructionMnemonic.ST4, InstructionInfo._32_bit_register_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-001101101-----101001----------", InstructionMnemonic.ST4, InstructionInfo._64_bit_register_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-00110110111111000-------------", InstructionMnemonic.ST2, InstructionInfo._8_bit_immediate_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-00110110111111001-------------", InstructionMnemonic.ST4, InstructionInfo._8_bit_immediate_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-00110110111111010--0----------", InstructionMnemonic.ST2, InstructionInfo._16_bit_immediate_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-00110110111111011--0----------", InstructionMnemonic.ST4, InstructionInfo._16_bit_immediate_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-00110110111111100-00----------", InstructionMnemonic.ST2, InstructionInfo._32_bit_immediate_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-00110110111111100001----------", InstructionMnemonic.ST2, InstructionInfo._64_bit_immediate_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-00110110111111101-00----------", InstructionMnemonic.ST4, InstructionInfo._32_bit_immediate_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-00110110111111101001----------", InstructionMnemonic.ST4, InstructionInfo._64_bit_immediate_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-001101110-----000-------------", InstructionMnemonic.LD1, InstructionInfo._8_bit_register_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-001101110-----001-------------", InstructionMnemonic.LD3, InstructionInfo._8_bit_register_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-001101110-----010--0----------", InstructionMnemonic.LD1, InstructionInfo._16_bit_register_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-001101110-----011--0----------", InstructionMnemonic.LD3, InstructionInfo._16_bit_register_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-001101110-----100-00----------", InstructionMnemonic.LD1, InstructionInfo._32_bit_register_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-001101110-----100001----------", InstructionMnemonic.LD1, InstructionInfo._64_bit_register_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-001101110-----101-00----------", InstructionMnemonic.LD3, InstructionInfo._32_bit_register_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-001101110-----101001----------", InstructionMnemonic.LD3, InstructionInfo._64_bit_register_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-001101110-----1100------------", InstructionMnemonic.LD1R, InstructionInfo.Register_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-001101110-----1110------------", InstructionMnemonic.LD3R, InstructionInfo.Register_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-00110111011111000-------------", InstructionMnemonic.LD1, InstructionInfo._8_bit_immediate_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-00110111011111001-------------", InstructionMnemonic.LD3, InstructionInfo._8_bit_immediate_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-00110111011111010--0----------", InstructionMnemonic.LD1, InstructionInfo._16_bit_immediate_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-00110111011111011--0----------", InstructionMnemonic.LD3, InstructionInfo._16_bit_immediate_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-00110111011111100-00----------", InstructionMnemonic.LD1, InstructionInfo._32_bit_immediate_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-00110111011111100001----------", InstructionMnemonic.LD1, InstructionInfo._64_bit_immediate_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-00110111011111101-00----------", InstructionMnemonic.LD3, InstructionInfo._32_bit_immediate_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-00110111011111101001----------", InstructionMnemonic.LD3, InstructionInfo._64_bit_immediate_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-001101110111111100------------", InstructionMnemonic.LD1R, InstructionInfo.Immediate_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-001101110111111110------------", InstructionMnemonic.LD3R, InstructionInfo.Immediate_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-001101111-----000-------------", InstructionMnemonic.LD2, InstructionInfo._8_bit_register_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-001101111-----001-------------", InstructionMnemonic.LD4, InstructionInfo._8_bit_register_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-001101111-----010--0----------", InstructionMnemonic.LD2, InstructionInfo._16_bit_register_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-001101111-----011--0----------", InstructionMnemonic.LD4, InstructionInfo._16_bit_register_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-001101111-----100-00----------", InstructionMnemonic.LD2, InstructionInfo._32_bit_register_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-001101111-----100001----------", InstructionMnemonic.LD2, InstructionInfo._64_bit_register_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-001101111-----101-00----------", InstructionMnemonic.LD4, InstructionInfo._32_bit_register_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-001101111-----101001----------", InstructionMnemonic.LD4, InstructionInfo._64_bit_register_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-001101111-----1100------------", InstructionMnemonic.LD2R, InstructionInfo.Register_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-001101111-----1110------------", InstructionMnemonic.LD4R, InstructionInfo.Register_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-00110111111111000-------------", InstructionMnemonic.LD2, InstructionInfo._8_bit_immediate_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-00110111111111001-------------", InstructionMnemonic.LD4, InstructionInfo._8_bit_immediate_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-00110111111111010--0----------", InstructionMnemonic.LD2, InstructionInfo._16_bit_immediate_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-00110111111111011--0----------", InstructionMnemonic.LD4, InstructionInfo._16_bit_immediate_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-00110111111111100-00----------", InstructionMnemonic.LD2, InstructionInfo._32_bit_immediate_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-00110111111111100001----------", InstructionMnemonic.LD2, InstructionInfo._64_bit_immediate_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-00110111111111101-00----------", InstructionMnemonic.LD4, InstructionInfo._32_bit_immediate_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-00110111111111101001----------", InstructionMnemonic.LD4, InstructionInfo._64_bit_immediate_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-001101111111111100------------", InstructionMnemonic.LD2R, InstructionInfo.Immediate_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
            Add("0-001101111111111110------------", InstructionMnemonic.LD4R, InstructionInfo.Immediate_offset, OpCodeAdvsimdLoadStoreSingleStructurePostIndexed.Create, EmitRaw.EmitAdvsimdLoadStoreSingleStructurePostIndexed);
        }

        public static UInt32 ReverseBytes(UInt32 value)
        {
            return (value & 0x000000FFU) << 24 | (value & 0x0000FF00U) << 8 |
                   (value & 0x00FF0000U) >> 8 | (value & 0xFF000000U) >> 24;
        }

        public static AOpCode DecodeOpCode(ulong Address)
        {
            int RawOpCode = MemoryManager.ReadObject<int>(Address);

            foreach (OpCodeTable table in Tables)
            {
                if (table.Compare(RawOpCode))
                {
                    return table.Create(RawOpCode,Address,table.Name,table.Info,table.Emit);
                }
            }

            throw new NotImplementedException($"{MemoryManager.GetOpHex(Address)}");
        }

        public static BasicBlock DecodeBlock(ulong Address)
        {
            BasicBlock Out = new BasicBlock();

            ulong Base = Address;

            while (true)
            {
                AOpCode opCode = DecodeOpCode(Address);

                Out.AddOpCode(opCode);

                if (IsBranch(opCode.RawOpCode))
                {
                    break;
                }

                Address += 4;
            }

            return Out;
        }
    }
}
